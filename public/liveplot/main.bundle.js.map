{"version":3,"file":"main.bundle.js","mappings":"uBAAIA,E,8GCAJ,K,OAAA,yBAEA,SAEMC,EAAc,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAQ,IAAI,EAAAC,MAElB,eA8DEC,YAAYC,GACVC,KAAKC,WAAaF,EAClBC,KAAKE,oBAAqB,EAC1BF,KAAKG,cAELH,KAAKI,OAAS,CACZC,QAAS,KACTC,WAAY,EACZC,OAAQ,EACRC,KAAM,EACNC,YAAa,EACbC,YAAa,EACbC,eAAgB,EAChBC,UAAW,GACXC,eAAgB,EAChBC,mBAAoB,GACpBC,UAAW,EACXC,QAAS,GACTC,SAAU,EACVC,SAAU,IAIPC,kBACLnB,KAAKoB,cAAgB,IAAIC,OAAOC,cAAcC,UAC9CvB,KAAKwB,gBAAkB,IAAIH,OAAOC,cAAcC,UAChDvB,KAAKyB,eAAiB,IAAIJ,OAAOC,cAAcC,UAC/CvB,KAAK0B,eAAiB,IAAIL,OAAOC,cAAcC,UAC/CvB,KAAK2B,iBAAmB,IAAIN,OAAOC,cAAcC,UACjDvB,KAAK4B,gBAAkB,IAAIP,OAAOC,cAAcC,UAChDvB,KAAK6B,gBAAkB,IAAIR,OAAOC,cAAcC,UAChDvB,KAAK8B,iBAAmB,IAAIT,OAAOC,cAAcC,UACjDvB,KAAK+B,kBAAoB,IAAIV,OAAOC,cAAcC,UAClDvB,KAAKgC,OAAS,GAGTC,0BACCZ,OAAOa,OAAOC,KAAK,KAAM,CAAEC,SAAU,CAAC,YAAa,cACzDpC,KAAKqC,oBACLrC,KAAKmB,kBAELnB,KAAKsC,cAAgB,IAAIjB,OAAOC,cAAciB,UAC5CvC,KAAKC,WAAWuC,SAElBxC,KAAKyC,SAAW,IAAIpB,OAAOC,cAAcoB,aAAa1C,KAAK2C,gBAC3D3C,KAAK4C,WAAa,IAAIvB,OAAOC,cAAcuB,eACzC7C,KAAK8C,kBAGP9C,KAAK+C,eAAiB,IAAI1B,OAAOC,cAAciB,UAC7CvC,KAAKC,WAAW+C,UAElBhD,KAAKiD,UAAY,IAAI5B,OAAOC,cAAcoB,aACxC1C,KAAKkD,iBAEPlD,KAAKmD,YAAc,IAAI9B,OAAOC,cAAcuB,eAC1C7C,KAAKoD,mBAGPpD,KAAKqD,gBAAkB,IAAIhC,OAAOC,cAAciB,UAC9CvC,KAAKC,WAAWqD,WAElBtD,KAAKuD,WAAa,IAAIlC,OAAOC,cAAcoB,aACzC1C,KAAKwD,kBAEPxD,KAAKyD,aAAe,IAAIpC,OAAOC,cAAcuB,eAC3C7C,KAAK0D,oBAGP1D,KAAKsC,cAAcqB,KAAK3D,KAAK4C,WAAY5C,KAAKyC,UAC9CzC,KAAK+C,eAAeY,KAAK3D,KAAKmD,YAAanD,KAAKiD,WAChDjD,KAAKqD,gBAAgBM,KAAK3D,KAAKyD,aAAczD,KAAKuD,YAElDvD,KAAK4D,WAAa,IAAIvC,OAAOC,cAAcuC,WACzC7D,KAAKC,WAAW2D,YAKlB5D,KAAK8D,QAAU,IAAIzC,OAAOC,cAAcyC,UAAU/D,KAAKC,WAAW6D,SAClE9D,KAAKgE,WAAa,IAAI3C,OAAOC,cAAc2C,YACzCjE,KAAKC,WAAW+D,YAElBhE,KAAKkE,WAAa,IAAI7C,OAAOC,cAAc2C,YACzCjE,KAAKC,WAAWiE,YAElBlE,KAAKmE,YAAc,IAAI9C,OAAOC,cAAc2C,YAC1CjE,KAAKC,WAAWkE,aAIb9B,oBACLrC,KAAKoE,gBAAkB,CACrBC,MAAOrE,KAAKC,WAAWwC,SAAS6B,YAChCC,OAAQvE,KAAKC,WAAWwC,SAAS+B,aACjCC,MAAO,CAAEC,MAAO,UAChBC,MAAO,CAAED,MAAO,cAAeE,WAAY,CAAEC,IAAK,EAAGC,IAAK,IAC1DC,UAAW,CACTC,SAAU,IACVC,OAAQ,SACRC,SAAS,GAEXC,OAAQ,CACN,EAAG,CAAEC,MAAO,WACZ,EAAG,CAAEA,MAAO,aAIhBpF,KAAK2C,eAAiB,CACpB0C,UAAW,YACXC,YAAa,mBACbC,QAASvF,KAAKoE,iBAEhBpE,KAAKwF,kBAAoB,CACvBC,kBAAmB,eACnBC,GAAI,CACFL,UAAW,YACXM,aAAc,CACZC,OAAQ,GACRnB,MAAO,CAAEoB,cAAe,OAAQnB,MAAO,UACvCC,MAAO,CAAED,MAAO,IAAKE,WAAY,CAAEC,IAAK,EAAGC,IAAK,IAChDT,MAAOrE,KAAKC,WAAW2C,WAAW0B,YAClCC,OAAQvE,KAAKC,WAAW2C,WAAW4B,aACnCO,UAAW,CAAEC,SAAU,IAAMC,OAAQ,QAEvCa,UAAW,CACTC,QAAS,CAAC,EAAG,IAEfC,aAAc,IAGlBhG,KAAK8C,iBAAmB,CACtBmD,YAAa,mBACbX,YAAa,qBACbY,MAAO,CAAEC,MAAO,CAAEC,MAAO,EAAGC,IAAK,MACjCd,QAASvF,KAAKwF,mBAEhBxF,KAAKsG,iBAAmB,CACtBjC,MAAOrE,KAAKC,WAAWgD,UAAUqB,YACjCC,OAAQvE,KAAKC,WAAWgD,UAAUuB,aAClC+B,YAAa,GACb9B,MAAO,CAAEC,MAAO,aAChB8B,MAAO,CACL,EAAG,CAAE9B,MAAO,eACZ,EAAG,CAAEA,MAAO,SAEdK,UAAW,CACTC,SAAU,IACVC,OAAQ,UAEVE,OAAQ,CACN,EAAG,CAAEsB,gBAAiB,GACtB,EAAG,CAAEA,gBAAiB,GACtB,EAAG,CAAEA,gBAAiB,KAG1BzG,KAAKkD,gBAAkB,CACrBmC,UAAW,YACXC,YAAa,aACbC,QAASvF,KAAKsG,kBAEhBtG,KAAK0G,mBAAqB,CACxBjB,kBAAmB,OACnBC,GAAI,CACFL,UAAW,YACXM,aAAc,CACZlB,MAAO,CAAEoB,cAAe,OAAQnB,MAAO,QACvCC,MAAO,CAAED,MAAO,KAChBL,MAAOrE,KAAKC,WAAWkD,YAAYmB,YACnCC,OAAQvE,KAAKC,WAAWkD,YAAYqB,aACpCO,UAAW,CAAEC,SAAU,IAAMC,OAAQ,SAGzCa,UAAW,CACTC,QAAS,CAAC,EAAG,KAGjB/F,KAAKoD,kBAAoB,CACvB6C,YAAa,mBACbX,YAAa,eACbY,MAAO,CAAEC,MAAO,CAAEC,MAAO,EAAGC,IAAK,MACjCd,QAASvF,KAAK0G,oBAGhB1G,KAAK2G,kBAAoB,CACvBtC,MAAOrE,KAAKC,WAAWsD,WAAWe,YAClCC,OAAQvE,KAAKC,WAAWsD,WAAWiB,aACnCC,MAAO,CAAEC,MAAO,UAChBC,MAAO,CAAED,MAAO,cAQlB1E,KAAKwD,iBAAmB,CACtB6B,UAAW,eACXC,YAAa,cACbC,QAASvF,KAAK2G,mBAEhB3G,KAAK4G,oBAAsB,CACzBnB,kBAAmB,QACnBC,GAAI,CACFL,UAAW,eACXM,aAAc,CACZC,OAAQ,GACRnB,MAAO,CAAEoB,cAAe,OAAQnB,MAAO,UACvCC,MAAO,CAAED,MAAO,MAChBL,MAAOrE,KAAKC,WAAWwD,aAAaa,YACpCC,OAAQvE,KAAKC,WAAWwD,aAAae,gBAK3CxE,KAAK0D,mBAAqB,CACxBuC,YAAa,mBACbX,YAAa,gBACbY,MAAO,CAAEC,MAAO,CAAEC,MAAO,EAAGC,IAAK,MACjCd,QAASvF,KAAK4G,qBAwChB5G,KAAK6G,kBAAoB,CACvBC,WAAY,UACZC,UAAW,GAEb/G,KAAKgH,eAAiB,CACpB3C,MAAOrE,KAAKC,WAAW6D,QAAQQ,YAC/BC,OAAQvE,KAAKC,WAAW6D,QAAQU,aAChCE,MAAO,qBACPK,UAAW,CACTC,SAAU,IACVC,OAAQ,SACRC,SAAS,GAEX+B,OAAQ,CAAEC,SAAU,SAEtBlH,KAAKmH,kBAAoB,CACvB9C,MAAOrE,KAAKC,WAAW+D,WAAWM,YAClCC,OAAQvE,KAAKC,WAAW+D,WAAWQ,aACnCE,MAAO,mBACPD,MAAO,CAAEC,MAAO,iBAChBC,MAAO,CAAED,MAAO,SAAU0C,SAAU,EAAGC,SAAU,GACjDJ,OAAQ,CAAEC,SAAU,SAEtBlH,KAAKsH,kBAAoB,CACvBjD,MAAOrE,KAAKC,WAAWiE,WAAWI,YAClCC,OAAQvE,KAAKC,WAAWiE,WAAWM,aACnCC,MAAO,CAAEC,MAAO,UAChBC,MAAO,CAAED,MAAO,SAAU0C,SAAU,EAAGC,SAAU,GACjDJ,OAAQ,CAAEC,SAAU,SAEtBlH,KAAKuH,mBAAqB,CACxBlD,MAAOrE,KAAKC,WAAWkE,YAAYG,YACnCC,OAAQvE,KAAKC,WAAWkE,YAAYK,aACpCC,MAAO,CAAEC,MAAO,WAChBC,MAAO,CAAED,MAAO,SAAU0C,SAAU,EAAGC,SAAU,GACjD3C,MAAO,qBACPuC,OAAQ,CAAEC,SAAU,SAIjBM,oBAAoBC,EAAgBC,GAuGzC,GApGA1H,KAAKoB,cAAcuG,WAAW,EAAG3H,KAAKoB,cAAcwG,mBACpD5H,KAAKoB,cAAcyG,cACjB,EACA7H,KAAKoB,cAAc0G,sBAGrB9H,KAAKyB,eAAekG,WAAW,EAAG3H,KAAKyB,eAAemG,mBACtD5H,KAAKyB,eAAeoG,cAClB,EACA7H,KAAKyB,eAAeqG,sBAGtB9H,KAAKwB,gBAAgBmG,WAAW,EAAG3H,KAAKwB,gBAAgBoG,mBACxD5H,KAAKwB,gBAAgBqG,cACnB,EACA7H,KAAKwB,gBAAgBsG,sBAGvB9H,KAAK0B,eAAeiG,WAAW,EAAG3H,KAAK0B,eAAekG,mBACtD5H,KAAK0B,eAAemG,cAClB,EACA7H,KAAK0B,eAAeoG,sBAGtB9H,KAAK+B,kBAAkB4F,WACrB,EACA3H,KAAK+B,kBAAkB6F,mBAEzB5H,KAAK+B,kBAAkB8F,cACrB,EACA7H,KAAK+B,kBAAkB+F,sBAEzB9H,KAAKE,oBAAqB,EAC1BF,KAAK+H,sBAAuB,EAC5B/H,KAAKgC,OAAa,KAAI,GACtBhC,KAAKgC,OAAe,OAAI,GAExBhC,KAAK2B,iBAAiBgG,WACpB,EACA3H,KAAK2B,iBAAiBiG,mBAExB5H,KAAK2B,iBAAiBkG,cACpB,EACA7H,KAAK2B,iBAAiBmG,sBAGxB9H,KAAK4B,gBAAgB+F,WAAW,EAAG3H,KAAK4B,gBAAgBgG,mBACxD5H,KAAK4B,gBAAgBiG,cACnB,EACA7H,KAAK4B,gBAAgBkG,sBAGvB9H,KAAK6B,gBAAgB8F,WAAW,EAAG3H,KAAK6B,gBAAgB+F,mBACxD5H,KAAK6B,gBAAgBgG,cACnB,EACA7H,KAAK6B,gBAAgBiG,sBAGvB9H,KAAK8B,iBAAiB6F,WACpB,EACA3H,KAAK8B,iBAAiB8F,mBAExB5H,KAAK8B,iBAAiB+F,cACpB,EACA7H,KAAK8B,iBAAiBgG,sBAIxB9H,KAAKoB,cAAc4G,UAAU,SAAU,gBACvChI,KAAKoB,cAAc4G,UAAU,SAAU,WACvChI,KAAKoB,cAAc4G,UAAU,SAAU,gBAEvChI,KAAKyB,eAAeuG,UAAU,WAAY,QAC1ChI,KAAKyB,eAAeuG,UAAU,SAAU,UACxChI,KAAKyB,eAAeuG,UAAU,SAAU,eACxChI,KAAKyB,eAAeuG,UAAU,SAAU,QAGxChI,KAAK2B,iBAAiBqG,UAAU,SAAU,WAC1ChI,KAAK2B,iBAAiBqG,UAAU,SAAU,cAc1ChI,KAAK0B,eAAesG,UAAU,SAAU,QACxChI,KAAK0B,eAAesG,UAAU,SAAU,YACxChI,KAAK0B,eAAesG,UAAU,SAAU,UACxChI,KAAK+B,kBAAkBiG,UAAU,SAAU,WAC3ChI,KAAK+B,kBAAkBiG,UAAU,SAAU,QAC3ChI,KAAK+B,kBAAkBiG,UAAU,SAAU,WAEvCP,EAAKQ,KAAMC,eAAiB,EAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAKQ,KAAMG,cAAcC,OAAQF,IACnDnI,KAAK0B,eAAesG,UAAU,SAAU,OAAOG,EAAI,KACnDnI,KAAK+B,kBAAkBiG,UAAU,SAAU,QAAQG,EAAI,UAEhDV,EAAKQ,KAAMC,cAAgB,IACpClI,KAAK0B,eAAesG,UAAU,SAAU,QACxChI,KAAK0B,eAAesG,UAAU,SAAU,aACxChI,KAAK+B,kBAAkBiG,UAAU,SAAU,SAC3ChI,KAAK+B,kBAAkBiG,UAAU,SAAU,eAG7ChI,KAAK0B,eAAesG,UAAU,SAAU,cACxChI,KAAK0B,eAAesG,UAAU,SAAU,cACxChI,KAAK0B,eAAesG,UAAU,SAAU,iBACxChI,KAAK0B,eAAesG,UAAU,SAAU,iBAExChI,KAAK+B,kBAAkBiG,UAAU,SAAU,QAC3ChI,KAAK+B,kBAAkBiG,UAAU,CAAEM,KAAM,SAAUC,KAAM,UAEzDvI,KAAK4B,gBAAgBoG,UAAU,SAAU,cACzChI,KAAK4B,gBAAgBoG,UAAU,SAAU,YAEzChI,KAAK6B,gBAAgBmG,UAAU,SAAU,UACzChI,KAAK6B,gBAAgBmG,UAAU,SAAU,kBAEzChI,KAAK8B,iBAAiBkG,UAAU,SAAU,UAC1ChI,KAAK8B,iBAAiBkG,UAAU,SAAU,eAE1ChI,KAAKwB,gBAAgBwG,UAAU,SAAU,SACzChI,KAAKwB,gBAAgBwG,UAAU,SAAU,kBACzChI,KAAKwB,gBAAgBwG,UAAU,SAAU,iBACzChI,KAAKwB,gBAAgBwG,UAAU,SAAU,kBACzChI,KAAKwB,gBAAgBwG,UAAU,SAAU,gBAEzChI,KAAKwI,YAAYf,EAAMC,GAGlBc,YAAYf,EAAgBC,GACjC,IAAIe,EACJ,GAAK,UAAEC,YAAYjB,EAAKQ,MAGtB,KAAM,yBAFNQ,EAAWhB,EAAKQ,KAIlBU,QAAQC,IAAI,gBACZ5I,KAAK6I,WAAWpB,GAChBzH,KAAK8I,eAAerB,GAEpBzH,KAAK+I,oBAAoBtB,GACzBzH,KAAKgJ,eAAeP,GACpBzI,KAAKiJ,gBAAgBR,GACrBzI,KAAKkJ,eAAeT,GACpBzI,KAAKmJ,eAAeV,GACpBzI,KAAKoJ,oBAAoB3B,GACzBzH,KAAKqJ,cAAc5B,GACnBzH,KAAKsJ,eAAe7B,GACpBzH,KAAKuJ,kBACLvJ,KAAKwJ,kBACLxJ,KAAKyJ,iBACLzJ,KAAK0J,iBACL1J,KAAK2J,kBACL,IAAIC,EAAelC,EAAYkC,aAC/B5J,KAAK6J,eAAepB,EAAUmB,GAC1BA,IAAiB5J,KAAKE,qBAExBF,KAAK8J,kBAAkBrB,GACvBzI,KAAKE,oBAAqB,GAItB2I,WAAWpB,GACjB,IAAIQ,EACJ,GAAK,UAAES,YAAYjB,EAAKQ,MAGtB,KAAM,yBAFNA,EAAOR,EAAKQ,KAKdjI,KAAKI,OAAOC,QAAU4H,EAAK8B,QAC3B/J,KAAKI,OAAOG,OAAS0H,EAAK+B,SAAS3B,OAGnC,IAAI4B,EAAYhC,EAAKiC,UACrBlK,KAAKI,OAAOI,KAAO,UAAE2J,MACnB,UAAEA,MAAM,UAAEC,SAAS,UAAEC,KAAKJ,IAAcA,EAAU,IAAM,KAY1D,IAAIjJ,EAAUiH,EAAKqC,SACd,UAAE5B,YAAY1H,IAAY,UAAEuJ,KAAKvJ,GAAW,GAC/ChB,KAAKI,OAAOY,QAAUA,EAAQ,UAAEuJ,KAAKvJ,GAAW,GAAG,GACnDhB,KAAKI,OAAOa,SAAW,IAAIuJ,KACzBxJ,EAAQ,UAAEuJ,KAAKvJ,GAAW,GAAG,IAC7ByJ,mBAAmB,WAErBzK,KAAKI,OAAOY,QAAU,KACtBhB,KAAKI,OAAOa,SAAW,MAIrB,UAAEyH,YAAYT,EAAKyC,WACrB1K,KAAKI,OAAOQ,UAAY,KAExBZ,KAAKI,OAAOQ,UAAY6G,EAAKQ,KAAKyC,UAGhC,UAAEhC,YAAYT,EAAK0C,uBACrB3K,KAAKI,OAAOS,eAAiB,KAE7Bb,KAAKI,OAAOS,eAAiBoH,EAAK0C,sBAGhC,UAAEjC,YAAYT,EAAK2C,2BACrB5K,KAAKI,OAAOU,mBAAqB,KAEjCd,KAAKI,OAAOU,mBAAqBmH,EAAK2C,0BAIxC,IAAIC,EAAU5C,EAAK6C,SACd,UAAEpC,YAAYmC,IAAY,UAAEN,KAAKM,GAAW,GAC/C7K,KAAKI,OAAOK,YAAc,UAAE0J,MAAwC,IAAlCU,EAAQ,UAAEN,KAAKM,GAAW,GAAG,IAC/D7K,KAAKI,OAAOM,YAAc,UAAEyJ,MACV,IAAhBU,EAAQ,GAAG,GAAW7K,KAAKI,OAAOK,eAGpCT,KAAKI,OAAOK,YAAc,KAC1BT,KAAKI,OAAOM,YAAc,MAI5B,IAAIqK,EAAa,EACjB,IAAK,IAAI5C,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAK+C,aAAc7C,IACxCF,EAAK+C,YAAY7C,IAAMF,EAAK+B,SAAS7B,IACvC4C,IAIJ/K,KAAKI,OAAO2K,WAAaA,EACzB/K,KAAKI,OAAOE,WAAa,UAAE6J,MAAO,IAAMY,EAAc9C,EAAK+B,SAAS3B,QAE/D,UAAEK,YAAYT,EAAKgD,WACtBjL,KAAKI,OAAOW,UAAYkH,EAAKgD,QAAQC,QAAO,CAACC,EAAWC,IAC/CD,EAAIC,GACV,IAGLpL,KAAKI,OAAOO,eAAiB,EACxB,UAAE+H,YAAYT,EAAKoD,uBACtBrL,KAAKI,OAAOO,eAAiB,UAAEwJ,MAC5BlC,EAAKoD,oBAAsBrL,KAAKI,OAAOW,UAAa,MAKnD+H,eAAerB,GACrBzH,KAAKC,WAAWqL,WAAWC,UAAY,GAAGvL,KAAKI,OAAOC,YAAYL,KAAKI,OAAOE,oBAAoBN,KAAKI,OAAO2K,qBAAqB/K,KAAKI,OAAOG,aAAaP,KAAKI,OAAOW,aAAaf,KAAKI,OAAOO,qBAAqBX,KAAKI,OAAOI,aAGlOR,KAAKC,WAAWuL,WAAWD,UAAY,SAASvL,KAAKI,OAAOY,YAAYhB,KAAKI,OAAOa,YAEpFjB,KAAKC,WAAWwL,cAAcF,UAAY,YAAYvL,KAAKI,OAAOK,kBAAkBT,KAAKI,OAAOM,gBAEhGV,KAAKC,WAAWyL,YAAYH,UAAY,eAAe9D,EAAKkE,UAAWlB,mBACrE,WAIId,kBACN,IACE3J,KAAK6G,kBAAkBnC,MAAQ,iDAC7BkH,KAAKzB,MAA6B,GAAvBnK,KAAKI,OAAOyL,UAAiB,YAE1C,IAAK,IAAI1D,EAAI,EAAGA,EAAInI,KAAKI,OAAO0L,UAAUzD,OAAQF,IAChDnI,KAAK6G,kBAAkBnC,MACrB1E,KAAK6G,kBAAkBnC,MACvB,aAAayD,MAAMyD,KAAKzB,MAAiC,GAA3BnK,KAAKI,OAAO0L,UAAU3D,IAAW,KAEnE,MAAO4D,GACPpD,QAAQqD,MAAM,8BAA+BD,IAIzChD,oBAAoBtB,GAE1B,IAAIQ,EACJ,GAAK,UAAES,YAAYjB,EAAKQ,MAGtB,KAAM,yBAFNA,EAAOR,EAAKQ,KAKdjI,KAAKoB,cAAcuG,WAAW,EAAG3H,KAAKoB,cAAcwG,mBACpD5H,KAAKyB,eAAekG,WAAW,EAAG3H,KAAKyB,eAAemG,mBACtD5H,KAAK2B,iBAAiBgG,WACpB,EACA3H,KAAK2B,iBAAiBiG,mBAExB5H,KAAK0B,eAAeiG,WAAW,EAAG3H,KAAK0B,eAAekG,mBAGtD,IAQIqE,EACAC,EATAC,EAAQ,GACRC,EAAkB,GAClBC,EAAa,GACbC,EAAa,GACbC,EAAW,GACXxB,EAAuB,GAEvByB,EAAU,GAGVC,EAAyB,GACzBC,EAAK,GAGT,IAAK,IAAIvE,EAAI,EAAGA,EAAIF,EAAK+C,YAAY3C,OAAQF,IACvCF,EAAK+C,YAAY7C,IAAMF,EAAK+B,SAAS7B,GACvCiE,EAAMjE,GAAK,EAEXiE,EAAMjE,GAAK,EAGbgE,EAAMhE,GAAKA,EAGXoE,EAASpE,GAAKgE,EAAM9D,OAChBF,EAAI,EACN4C,EAAW5C,GAAK4C,EAAW5C,EAAI,GAAKiE,EAAMjE,GAC5B,GAALA,IACT4C,EAAW5C,GAAKiE,EAAMjE,IAI1B,IAAK,IAAIA,EAAI,EAAGA,EAAIF,EAAKgD,QAAQ5C,OAAQF,IACf,GAApBF,EAAK0E,aACPD,EAAGvE,GAAKF,EAAK2E,YAAY,GAAGzE,GAAKF,EAAKiC,UAAU/B,GAChDnI,KAAK2B,iBAAiBkL,QAAQ,CAC5B,CAACpF,EAAKQ,KAAK6E,mBAAmB3E,GAAIuE,EAAGvE,OAE9BF,EAAK8E,MAAQ,GACtBL,EAAGvE,GAAKF,EAAK+E,kBAAkB,GAAG7E,GAAKF,EAAKgF,gBAAgB9E,GAC5DnI,KAAK2B,iBAAiBkL,QAAQ,CAC5B,CAAC5E,EAAKiF,yBAAyB/E,GAAIuE,EAAGvE,QAGxCuE,EAAGvE,GAAKF,EAAKkF,YAAY,GAAGhF,GAAKF,EAAKgF,gBAAgB9E,IAC7B,GAArBF,EAAK+B,SAAS7B,GAChBnI,KAAK2B,iBAAiBkL,QAAQ,CAAC,CAAC,UAAW5E,EAAKmF,iBACvCnF,EAAK+C,YAAY7C,IAAMF,EAAK+B,SAAS7B,GAC9CnI,KAAK2B,iBAAiBkL,QAAQ,CAAC,CAAC,UAAWH,EAAGvE,MAE9CnI,KAAK2B,iBAAiBkL,QAAQ,CAAC,CAAC,QAASH,EAAGvE,OAalD,IACG,UAAEO,YAAYT,EAAKkF,cACpB,UAAE5C,KAAKtC,EAAKkF,aAAe,GAC3B,UAAE5C,KAAK9C,EAAKQ,KAAKkF,YAAY,IAAM,EAEnC,IAAK,IAAIhF,EAAI,EAAGA,EAAkC,EAA9B,UAAEoC,KAAKtC,EAAK2E,YAAY,IAASzE,GAAK,EACxDsE,EAAWtE,GAAK,GAChBsE,EAAWtE,EAAI,GAAK,GACpBsE,EAAWtE,GAAG,GAAKV,EAAKQ,KAAK2E,YAAY,GAAGzE,EAAI,GAChDsE,EAAWtE,EAAI,GAAG,GAAKV,EAAKQ,KAAKkF,YAAY,GAAGhF,EAAI,GACpDsE,EAAWtE,GAAG,GAAKV,EAAKQ,KAAK2E,YAAY,GAAGzE,EAAI,GAChDsE,EAAWtE,EAAI,GAAG,GAAKV,EAAKQ,KAAKkF,YAAY,GAAGhF,EAAI,QAGtD,IAAK,IAAIA,EAAI,EAAGA,EAAkC,EAA9B,UAAEoC,KAAKtC,EAAK2E,YAAY,IAASzE,GAAK,EACxDsE,EAAWtE,GAAK,GAChBsE,EAAWtE,EAAI,GAAK,GACpBsE,EAAWtE,GAAG,GAAKV,EAAKQ,KAAK2E,YAAY,GAAGzE,EAAI,GAChDsE,EAAWtE,EAAI,GAAG,GAAKV,EAAKQ,KAAK2E,YAAY,GAAGzE,EAAI,GACpDsE,EAAWtE,GAAG,GAAKV,EAAKQ,KAAK2E,YAAY,GAAGzE,EAAI,GAChDsE,EAAWtE,EAAI,GAAG,GAAKV,EAAKQ,KAAK2E,YAAY,GAAGzE,EAAI,GAKxD,IAqBIkF,EACAC,EA6CAC,EACAC,EApEAC,EAAiBzN,KAAK0B,eAAeoG,qBAErC4F,GADiB1N,KAAK+B,kBAAkB+F,qBAC1B9H,KAAK2N,eAAelG,EAAKQ,OACvC2F,EAAeF,EACfG,EAAY7N,KAAK8N,aAAarG,EAAKQ,MACnC8F,EAAaF,EAGbG,EAAgBhO,KAAKiO,iBAAiBxG,EAAKQ,KAAMyF,GACjDQ,EAAiBF,EACjBG,EAAcnO,KAAKoO,eAAe3G,EAAKQ,MACvCoG,EAAeF,EAQfG,EAAkB,EAIlBC,EAAuB,UAAEzJ,IAAI2C,EAAKQ,KAAKuG,mBAC3C,IAAI,UAAEC,SAASF,GAOb,KAAM,iDANNlB,EAAO5F,EAAKQ,KAAKyG,YAAYH,GAC7BjB,EACE7F,EAAKQ,KAAK0G,eAAe,IACxBlH,EAAKQ,KAAK2G,YAAYL,GAAwB9G,EAAKQ,KAAK4G,WAM7D7O,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGJ,EAAOW,EAAgB,EAC1B,EAAGV,EAAOY,EAAiB,IAE7BlO,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGJ,EAAOW,EAAgB,EAC1B,EAAGV,EAAOY,EAAiB,IAE7BlO,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGJ,EAAOW,EAAgB,EAC1B,EAAGV,EAAOY,EAAiB,IAE7BlO,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGJ,EAAOW,EAAgB,EAC1B,EAAGV,EAAOY,EAAiB,IAE7BlO,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGJ,EAAOW,EAAgB,EAC1B,EAAGV,EAAOY,EAAiB,IAGxBlO,KAAK+H,sBAAyB/H,KAAKE,qBACtCyI,QAAQC,IAAI,uBACZ5I,KAAKgC,OAAiB,SAAI,CACxB+M,EAAG1B,EACH2B,EAAG1B,EACHjJ,MAAO2J,EACPzJ,OAAQ2J,IAKZI,EAAkB,EAGlB,IAAIW,EAAqB,UAAEnK,IAAImD,EAAKiH,iBAEpC,GAAIjH,EAAK0E,YAAc,EAAG,CACxB,IAAI,UAAE8B,SAASQ,GAMb,KAAM,+CALN1B,EAAUtF,EAAKyG,YAAYO,GAC3BzB,EACEvF,EAAK0G,eAAe,IACnB1G,EAAK2G,YAAYK,GAAsBhH,EAAK4G,gBAKjDtB,EAAUF,EACVG,EAAUF,EAGZtN,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGF,EAAUG,EAAc,EAC3B,EAAGF,EAAUI,EAAe,IAE9B5N,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGF,EAAUG,EAAc,EAC3B,EAAGF,EAAUI,EAAe,IAE9B5N,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGF,EAAUG,EAAc,EAC3B,EAAGF,EAAUI,EAAe,IAE9B5N,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGF,EAAUG,EAAc,EAC3B,EAAGF,EAAUI,EAAe,IAE9B5N,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAGF,EAAUG,EAAc,EAC3B,EAAGF,EAAUI,EAAe,IAGzB5N,KAAK+H,sBAAyB/H,KAAKE,qBACtCF,KAAKgC,OAAe,OAAI,CACtB+M,EAAGxB,EACHyB,EAAGxB,EACHnJ,MAAOqJ,EACPnJ,OAAQqJ,IAKZ,IAAIuB,EAAkB,GAClBC,EAAkB,GAEtB,GAAwB,GAApBnH,EAAK0E,YACP,IAAK,IAAIxE,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAKG,kBAE1BH,EAAKC,cAAgB,GAAKD,EAAK8E,MAAQ,GAFG5E,IA0C9C,GApCAmG,IACIrG,EAAK8E,MAAQ,GACfoC,EAAME,KAAKpH,EAAKyG,YAAYO,IAC5BG,EAAMC,KACJpH,EAAK0G,eAAe,IACjB1G,EAAK2G,YAAYK,GAAgChH,EAAK4G,cAG3DM,EAAME,KAAKpH,EAAKyG,YAAYzG,EAAKG,cAAcD,KAC/CiH,EAAMC,KACJpH,EAAK0G,eAAe,IACjB1G,EAAK2G,YAAY3G,EAAKG,cAAcD,IAAMF,EAAK4G,aAItD7O,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG0B,EAAMhH,GAAK0F,EAAY,EAC1B,CAACS,GAAkBc,EAAMjH,GAAK4F,EAAa,IAE7C/N,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG0B,EAAMhH,GAAK0F,EAAY,EAC1B,CAACS,GAAkBc,EAAMjH,GAAK4F,EAAa,IAE7C/N,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG0B,EAAMhH,GAAK0F,EAAY,EAC1B,CAACS,GAAkBc,EAAMjH,GAAK4F,EAAa,IAE7C/N,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG0B,EAAMhH,GAAK0F,EAAY,EAC1B,CAACS,GAAkBc,EAAMjH,GAAK4F,EAAa,IAE7C/N,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG0B,EAAMhH,GAAK0F,EAAY,EAC1B,CAACS,GAAkBc,EAAMjH,GAAK4F,EAAa,KAGxC/N,KAAK+H,uBAAyB/H,KAAKE,mBAAoB,CAC1D,IAAIoP,EAAM,CACRP,EAAGI,EAAMhH,GACT6G,EAAGI,EAAMjH,GACT9D,MAAOwJ,EACPtJ,OAAQwJ,GAEV/N,KAAKgC,OAAa,KAAEqN,KAAKC,GAM/B,IAAIC,EAAoB,GACpBC,EAAoB,GAExB,GAAwB,GAApBvH,EAAK0E,aAAoB1E,EAAKC,cAAgB,EAChD,IAAK,IAAIC,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAKwH,iBAAkBtH,IAChDmG,IACAiB,EAAQF,KAAKpH,EAAKyG,YAAYzG,EAAKwH,gBAAgBtH,KACnDqH,EAAQH,KACNpH,EAAK0G,eAAe,IACjB1G,EAAK2G,YAAY3G,EAAKwH,gBAAgBtH,IAAMF,EAAK4G,YAGtD7O,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG8B,EAAQpH,GAAKgG,EAAc,EAC9B,CAACG,GAAkBkB,EAAQrH,GAAKkG,EAAe,IAEjDrO,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG8B,EAAQpH,GAAKgG,EAAc,EAC9B,CAACG,GAAkBkB,EAAQrH,GAAKkG,EAAe,IAEjDrO,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG8B,EAAQpH,GAAKgG,EAAc,EAC9B,CAACG,GAAkBkB,EAAQrH,GAAKkG,EAAe,IAEjDrO,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG8B,EAAQpH,GAAKgG,EAAc,EAC9B,CAACG,GAAkBkB,EAAQrH,GAAKkG,EAAe,IAEjDrO,KAAK8O,sBAAsB9O,KAAK0B,eAAgB+L,EAAgB,CAC9D,EAAG8B,EAAQpH,GAAKgG,EAAc,EAC9B,CAACG,GAAkBkB,EAAQrH,GAAKkG,EAAe,IAI5CrO,KAAK+H,sBAAyB/H,KAAKE,oBACtCF,KAAKgC,OAAe,OAAEqN,KAAK,CACzBN,EAAGQ,EAAQpH,GACX6G,EAAGQ,EAAQrH,GACX9D,MAAO8J,EACP5J,OAAQ8J,IAKhBrO,KAAK+H,sBAAuB,EAE5B,IAmII2H,EAnIAC,EAAoB,GACpBC,EAAoB,GACpBC,EAAuB,GACvBC,EAAuB,GACvBC,EAAY,CAAC,EAAG,GAEpB,IAAK,IAAI5H,EAAI,EAAGA,EAAIsE,EAAWpE,OAAQF,IAAK,CAI1C,IAAI6H,EAOJ,GAVA/D,EAAOQ,EAAWtE,GAAG,GACrB+D,EAAOjE,EAAK0G,eAAe,GAAKlC,EAAWtE,GAAG,GAI5C6H,EADE7H,EAAI,GAAK,EACEA,EAAI,GAEHA,EAAI,GAAK,GAGZ,GAAT8D,EAAY,CACd,IAAIgE,EAAM,IAAIC,MAAMzC,GAGpB,GAFAwC,EAAI,GAAKhE,EAEL9D,EAAI,GAAK,EACXwH,EAAQN,KAAKpD,GACb2D,EAAQP,KAAKnD,GAEY,GAArBE,EAAM4D,IACRC,EAAI3B,EAAkB,GAAKpC,EAC3BlM,KAAK0B,eAAemL,QAAQ,CAACoD,MAE7BA,EAAI3B,EAAkB,GAAKpC,EAC3BlM,KAAK0B,eAAemL,QAAQ,CAACoD,SAE1B,CACL,IAAIE,EAAwB,GACxBC,EAAwB,GAE5B,IAAK,IAAIC,EAAI,EAAGA,EAAI,UAAE9F,KAAKtC,EAAKG,eAAgBiI,IAC1CpI,EAAK+B,SAASgG,IAAeK,GAC/BF,EAAYd,KAAKpD,GACjBmE,EAAYf,KAAKnD,GACjB6D,EAAUM,IAAM,IAEhBF,EAAYd,KAAK,GACjBe,EAAYf,KAAK,IAGnBQ,EAASR,KAAKc,GACdL,EAAST,KAAKe,GAGS,GAArBhE,EAAM4D,IACRC,EAAI3B,EAAkB,GAAKpC,EAC3BlM,KAAK0B,eAAemL,QAAQ,CAACoD,MAE7BA,EAAI3B,EAAkB,GAAKpC,EAC3BlM,KAAK0B,eAAemL,QAAQ,CAACoD,MAKnC,IAAIK,EAAc,UAAEC,KAAKZ,GACrBa,EAAc,UAAED,KAAKX,GACrBa,EAAcd,EAAQe,KAAKvF,GACtBS,KAAK+E,IAAI/E,KAAKgF,IAAIzF,EAAImF,GAAc,KAEzCO,EAAcjB,EAAQc,KAAKvF,GACtBS,KAAK+E,IAAI/E,KAAKgF,IAAIzF,EAAIqF,GAAc,KAEzC3E,EACF4E,EACGC,KAAI,CAACvF,EAAW2F,IACRlF,KAAKmF,KAAK5F,EAAI0F,EAAYC,MAElC5F,QAAO,CAACC,EAAWC,IACXD,EAAIC,GACV,GAAK,UAAEb,KAAKkG,GACnBzQ,KAAKI,OAAOyL,SAAWA,EAEvB,IAAIC,EAAsB,GAC1B,IAAK,IAAIuE,EAAI,EAAGA,EAAI,UAAE9F,KAAKtC,EAAKG,eAAgBiI,IAAK,CACnD,IAAIW,EAAcnB,EACfa,KAAKvF,GACGA,EAAEkF,KAEVY,QAAQ9F,GACK,GAALA,IAGP+F,EACFF,EAAY9F,QAAO,CAACC,EAAWC,IACtBD,EAAIC,GACV,GAAK,UAAEb,KAAKyG,GAEbG,EAAeH,EAAYN,KAAKvF,GAC3BS,KAAK+E,IAAI/E,KAAKgF,IAAIzF,EAAI+F,GAAe,KAG1CE,EAActB,EACfY,KAAKvF,GACGA,EAAEkF,KAEVY,QAAQ9F,GACK,GAALA,IAGPkG,EACFD,EAAYlG,QAAO,CAACC,EAAWC,IACtBD,EAAIC,GACV,GAAK,UAAEb,KAAK6G,GAEbE,EAAeF,EAAYV,KAAKvF,GAC3BS,KAAK+E,IAAI/E,KAAKgF,IAAIzF,EAAIkG,GAAe,KAG9CvF,EAAUuD,KACR8B,EACGT,KAAI,CAACvF,EAAWhD,IACRyD,KAAKmF,KAAK5F,EAAImG,EAAanJ,MAEnC+C,QAAO,CAACC,EAAWC,IACXD,EAAIC,GACV,GAAK,UAAEb,KAAKyG,IAGrBhR,KAAKI,OAAO0L,UAAYA,EAG1BO,EAAazM,EAAMgG,OAAOwG,EAAO,GACjCE,EAAa1M,EAAMgG,OAAOwG,EAAO,KAS/BsD,EAJA,UAAEhH,YAAYT,EAAKkF,cACnB,UAAE5C,KAAKtC,EAAKkF,aAAe,GAC3B,UAAEzE,YAAYT,EAAKkF,YAAY,GAAG,UAAE5C,KAAKtC,EAAKkF,YAAY,IAAM,IAEtDlF,EAAK2E,YAAY,GAAG,UAAErC,KAAKtC,EAAK2E,YAAY,IAAM,GAElD3E,EAAKkF,YAAY,GAAG,UAAE5C,KAAKtC,EAAKkF,YAAY,IAAM,GAI9D,IAAIoE,EAAY,UAAEhH,KAAK6B,GACnBoF,EAAW,UAAEjH,KAAKtC,EAAKqC,SAC3BkC,EAAU,UAAEiF,KAAKvB,MAAMqB,GAAY,GACnCvR,KAAKI,OAAOc,SAAW,GAEvB,IAAK,IAAIiH,EAAI,EAAGA,EAAIqJ,EAAUrJ,IACxB,UAAEO,YAAY1I,KAAKI,OAAOc,SAAS+G,EAAKqC,QAAQnC,GAAG,OACrDnI,KAAKI,OAAOc,SAAS+G,EAAKqC,QAAQnC,GAAG,IAAM,GAE7CnI,KAAKI,OAAOc,SAAS+G,EAAKqC,QAAQnC,GAAG,KAAO,EAC5CqE,EAAQvE,EAAKqC,QAAQnC,GAAG,KAAO,EAGjC,IAAK,IAAIA,EAAI,EAAGA,EAAI,UAAEoC,KAAKiC,GAAUrE,IACnCqE,EAAQrE,GAAKqE,EAAQrE,GAAKqE,EAAQrE,EAAI,GAIxC,IAAK,IAAIA,EAAI,EAAGA,EAAI,UAAEoC,KAAK6B,GAAQjE,IAAK,CACtC,IAAIuJ,EAAUzJ,EAAK2E,YAAY,GAAGzE,GAClC,GAAIuJ,EAAU,EACZ,SAGF,IAAIC,EAAI,IAAInH,KAAK/C,EAAKkE,WACtBgG,EAAEC,QAAQD,EAAEE,WAAanC,EAAUgC,IAEnC1R,KAAKoB,cAAcyL,QAAQ,CAAC,CAACV,EAAMhE,GAAIkE,EAAWlE,GAAImE,EAAWnE,MACjEnI,KAAKyB,eAAeoL,QAAQ,CAC1B,CAAC8E,EAAGpF,EAASpE,GAAI4C,EAAW5C,GAAIqE,EAAQrE,MAG5CnI,KAAK8R,WAAW9R,KAAKyB,eAAgB,GAG/BqN,sBACNiD,EACAC,EACA/J,GAGA,IAAIgI,EAAM,GACV,IAAK,IAAI9H,EAAI,EAAGA,EAAI6J,EAAY7J,IAC1B,UAAE8J,IAAIhK,EAAME,GACd8H,EAAIZ,KAAKpH,EAAKE,IAEd8H,EAAIZ,KAAK,MAIb0C,EAAOlF,QAAQ,CAACoD,IAKVtC,eAAelF,GACrB,IAAIiF,EAAc,EAClB,GAAI,UAAEnD,KAAK9B,EAASyJ,aAAa,GAAGC,OAAOC,UAAY,EACrD,GAAI,UAAEC,QAAQ5J,EAASyJ,aAAa,GAAGC,OAAOG,YAAa,CACzD,IAAIC,EAAgB,UAAEzN,IAAI2D,EAASyJ,aAAa,GAAGC,OAAOG,YACtD,UAAE7D,SAAS8D,KACb7E,EAAc6E,EAAgB9J,EAAS+J,kBAGzC7J,QAAQqD,MACN,kEAEF0B,EACEjF,EAASyJ,aAAa,GAAGC,OAAOG,WAAa7J,EAAS+J,gBAErD,CACL,IAAIC,EAAW,UAAEC,QAAQjK,EAASyJ,aAAa,GAAGS,SAClD,GAAI,UAAEC,SAASH,GAAW,CACxB,IAAIF,EAAgB,UAAEzN,IACpB2D,EAASyJ,aAAa,GAAGS,QAAQF,GAAUH,YAEzC,UAAE7D,SAAS8D,KACb7E,EAAc6E,EAAgB9J,EAAS+J,kBAGzC7J,QAAQqD,MACN,6DAIN,OAAO0B,EAGDI,aAAarF,GACnB,IAAIoF,EAAY,EAEhB,GAAIpF,EAASoK,WAAW,GAAGV,OAAOC,SAAS/J,OAAS,EAClD,GAAI,UAAEgK,QAAQ5J,EAASoK,WAAW,GAAGV,OAAOG,YAAa,CACvD,IAAIC,EAAgB,UAAEzN,IAAI2D,EAASoK,WAAW,GAAGV,OAAOG,YACpD,UAAE7D,SAAS8D,GACb1E,EAAY0E,EAAgB9J,EAAS+J,YAErC7J,QAAQqD,MACN,8DAIJrD,QAAQqD,MACN,gEAEF6B,EACEpF,EAASoK,WAAW,GAAGV,OAAOG,WAAa7J,EAAS+J,gBAEnD,CACL,IAAIC,EAAW,UAAEC,QAAQjK,EAASoK,WAAW,GAAGF,SAChD,GAAI,UAAEC,SAASH,GAAW,CACxB,IAAIF,EAAgB,UAAEzN,IACpB2D,EAASoK,WAAW,GAAGF,QAAQF,GAAUH,YAEvC,UAAE7D,SAAS8D,GACb1E,EAAY0E,EAAgB9J,EAAS+J,YAErC7J,QAAQqD,MACN,4DAUR,OAJK,UAAEtD,YAAYD,EAASsE,QAAUtE,EAASsE,MAAQ,IACrDc,EAAYpF,EAASqK,yBAA2BrK,EAAS+J,aAGpD3E,EAGDI,iBAAiBxF,EAA4BiF,GACnD,IAAIM,EAAgB,EAOpB,OAJEA,EADEvF,EAASsK,oBAAsB,EACjBtK,EAASuK,mBAAqBvK,EAAS+J,YAEvC9E,EAEXM,EAGDI,eAAe3F,GACrB,IAAI0F,EAAc,EAIlB,OAHK,UAAEzF,YAAYD,EAASP,gBAAkBO,EAASP,cAAgB,IACrEiG,EAAc1F,EAASwK,iBAAmBxK,EAAS+J,aAE9CrE,EAGDlF,gBAAgBhB,GAMtB,IAAIiL,EACJ,GANAlT,KAAK8B,iBAAiB6F,WACpB,EACA3H,KAAK8B,iBAAiB8F,mBAIA,GAApBK,EAAK0E,YAAkB,CACzB,IAAIwG,EAAY,GAChB,GAAIlL,EAAKmL,mBAAqB,IAC5BD,EAAU9D,KAAKpH,EAAKoL,gBAAgB,GAAGC,MAAM,KAAK,IAClDtT,KAAK8B,iBAAiByR,OAAO,CAACJ,EAAU,GAAI,IAC5CD,EAAe,MACV,CACL,IAAK,IAAI/K,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAKoL,iBAAkBlL,IAChDgL,EAAU9D,KAAKpH,EAAKoL,gBAAgBlL,GAAGmL,MAAM,KAAK,IAClDtT,KAAK8B,iBAAiByR,OAAO,CAACJ,EAAUhL,GAAI,IAE9C+K,EAAe,UAAE3I,KAAK4I,GAGxB,IAAIK,EAAe,UAAE/B,KAAKvB,MAAMgD,GAAe,GAC3CO,EAAW,UAAEhC,KAAKvB,MAAMgD,GAAe,GAC3C,IAAK,IAAI/K,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAKyL,OAAO,IAAKvL,IAE1C,IAAK,IAAIkI,EAAI,EAAGA,EAAI6C,EAAc7C,IAE5BpI,EAAK0L,aAAa1L,EAAKyL,OAAO,GAAGvL,KAAOkI,IAC1CoD,EAASpD,IAAM,EAEXpI,EAAK+B,SAAS7B,IAAMF,EAAK+C,YAAY7C,KACvCqL,EAAanD,IAAM,IAGvBrQ,KAAK8B,iBAAiB8R,SAASvD,EAAG,EAAGmD,EAAanD,GAAKoD,EAASpD,KAMhEnH,eAAejB,GAGrB,GAFAjI,KAAK6B,gBAAgB8F,WAAW,EAAG3H,KAAK6B,gBAAgB+F,mBAEhC,GAApBK,EAAK0E,YAAkB,CAEzB,IAAIkH,EAAe,GAEnB,GACkC,GAAhC,UAAEtJ,KAAKtC,EAAK6L,mBACX,UAAEpL,YAAYT,EAAKmL,qBAClBnL,EAAKmL,mBAAqB,KAC5B,CACA,IAAIW,EAAe,UAAEC,UAAU/L,EAAK6L,iBACpCC,EAAaE,MAAK,CAAC9I,EAAWC,IACrBD,EAAIC,IAEb,IAAI8I,EAAS,GACb,IAAK,IAAI/L,EAAI,EAAGA,EAAI,UAAEoC,KAAKwJ,GAAe5L,IAExC+L,EAAO7E,KAAKpH,EAAK6L,gBAAgBK,QAAQJ,EAAa5L,KACtDnI,KAAK6B,gBAAgB0R,OAAO,CAC1BtL,EAAKoL,gBAAgBa,EAAO/L,IAAImL,MAAM,KAAK,GAC3C,IAEFO,EAAaxE,KAAKlH,QAGpB,IAAK,IAAIA,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAKG,eAAgBD,IAC9CnI,KAAK6B,gBAAgB0R,OAAO,CAAC,UAAYpL,EAAI,GAAI,IACjD0L,EAAaxE,KAAKlH,GAItB,IAAIiM,EAAc,UAAE3C,KAAKvB,MAAM,UAAE3F,KAAKsJ,IAAgB,GAClDQ,EAAa,EAEjB,IAAK,IAAIlM,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAK+B,UAAW7B,IAAK,EACrB,GAArBF,EAAK+B,SAAS7B,IAChBkM,IAGF,IAAK,IAAIhE,EAAI,EAAGA,EAAI,UAAE9F,KAAKsJ,GAAexD,IACpCpI,EAAK+B,SAAS7B,IAAM0L,EAAaxD,KAA2B,GAArBpI,EAAK+B,SAAS7B,IACvDiM,EAAY/D,KAEdrQ,KAAK6B,gBAAgB+R,SAASvD,EAAG,EAAG+D,EAAY/D,GAAKgE,QAGpD,CACLrU,KAAK6B,gBAAgB0R,OAAO,CAAC,cAAe,IAC5CvT,KAAK6B,gBAAgB0R,OAAO,CAAC,aAAc,IAE3C,IAAIa,EAAc,UAAE3C,KAAKvB,MAAM,GAAI,GAC/BmE,EAAa,EACbjI,EAAQ,GAEZ,IAAK,IAAIjE,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAK+C,aAAc7C,IACxCF,EAAK+C,YAAY7C,IAAMF,EAAK+B,SAAS7B,GACvCiE,EAAMiD,KAAK,GAEXjD,EAAMiD,KAAK,GAIf,IAAK,IAAIlH,EAAI,EAAGA,EAAI,UAAEoC,KAAK6B,GAAQjE,IAAK,CACtCkM,IAEA,IAAK,IAAIhE,EAAI,EAAGA,EAAI,EAAGA,IACjBjE,EAAMjE,IAAMkI,IACd+D,EAAY/D,IAAM,GAEpBrQ,KAAK6B,gBAAgB+R,SAASvD,EAAG,EAAG+D,EAAY/D,GAAKgE,KAMrDlL,eAAelB,GACrBjI,KAAK4B,gBAAgB+F,WAAW,EAAG3H,KAAK4B,gBAAgBgG,mBACxD,IAAI0M,EAAa,GACjB,IAAK,IAAInM,EAAI,EAAGA,EAAIF,EAAKqM,WAAYnM,IACnCmM,EAAWjF,KAAKlH,EAAEoM,YAIpB,IAAK,IAAIpM,EAAI,EAAGA,EAAI,UAAEoC,KAAK+J,GAAanM,IACtCnI,KAAK4B,gBAAgB2R,OAAO,CAACe,EAAWnM,GAAI,IAG9C,IAAIqM,EAAc,UAAE/C,KAAKvB,MAAM,UAAE3F,KAAK+J,IAAc,GAEpD,IAAK,IAAInM,EAAI,EAAGA,EAAI,UAAEoC,KAAKtC,EAAKgD,SAAU9C,IACxC,IAAyB,GAArBF,EAAK+B,SAAS7B,GAChBqM,EAAY,KACZxU,KAAK4B,gBAAgBgS,SACnB,EACA,EACAY,EAAY,GAAK,UAAEjK,KAAKtC,EAAKgD,eAG/B,IAAK,IAAIoF,EAAI,EAAGA,EAAI,UAAE9F,KAAK+J,GAAajE,IAClCpI,EAAKgD,QAAQ9C,GAAGoM,YAAcD,EAAWjE,IAC3CmE,EAAYnE,KAEdrQ,KAAK4B,gBAAgBgS,SACnBvD,EACA,EACAmE,EAAYnE,GAAK,UAAE9F,KAAKtC,EAAKgD,UAO/BjC,eAAef,GAIrB,GAFAjI,KAAKwB,gBAAgBmG,WAAW,EAAG3H,KAAKwB,gBAAgBoG,mBAEpDK,EAAK0E,YAAc,EAAG,CACxB,MAAM8H,EAAUC,OAAOC,KAAK1M,EAAK2M,qBAAqBvM,OAAS,EAE/D,IAAK,IAAIF,EAAI,EAAGA,EAAIF,EAAK2M,oBAAoBH,GAASpM,OAAQF,IAAK,CACjE,IAAI0M,EACAC,EACAC,EACAC,EAEJ,IACM/M,EAAK2M,oBAAoBH,GAAStM,GAAK,EACzC0M,EAAK,MAELA,EACE5M,EAAK2M,oBAAoBH,GAAStM,GAClCF,EAAKgN,qBAAqBR,GAAStM,GACrC0M,EAAKjJ,KAAKgF,IAAIhF,KAAKzB,MAAM0K,KAE3B,MACAA,EAAK,KAGP,IACM5M,EAAK2M,oBAAoB,GAAGzM,GAAK,EACnC2M,EAAM,MAENA,EACE7M,EAAK2M,oBAAoB,GAAGzM,GAAKF,EAAKgN,qBAAqB,GAAG9M,GAChE2M,EAAMlJ,KAAKgF,IAAIhF,KAAKzB,MAAM2K,KAE5B,MACAA,EAAM,KAGR,IAMIC,EAJmC,MAAnC9M,EAAKiN,wBAAwB/M,IAC7BF,EAAKiN,wBAAwB/M,GAAK,QACEgN,IAApClN,EAAKiN,wBAAwB/M,GAET,KAGlBF,EAAKiN,wBAAwB/M,GAAKF,EAAKgF,gBAAgB9E,GAE3D,MACA4M,EAAoB,KAGtB,IACEC,EAA2B/M,EAAKmN,yBAAyBjN,GACzD,MACA6M,EAA2B,KAG7BhV,KAAKwB,gBAAgBqL,QAAQ,CAC3B,CAAC1E,EAAG4M,EAAmBF,EAAIC,EAAKE,OA8DhC5L,oBAAoB3B,G,MAC1B,IAAI4N,EAAUrV,KAAKoB,cAAcwG,kBACjC5H,KAAKsV,QAAUD,EACf,IAAIE,EAAuBvV,KAAK4C,WAAW4S,WAG3C,GAAI/N,EAAKgO,cAAgBhO,EAAKiO,YAC5B,GAAIL,GAAW,IAEbE,EAAgBpP,MAAMC,MAAQ,EAC9BmP,EAAgBpP,MAAME,IAAMgP,MACvB,CACL,IAAIM,EAAUN,EAAU,UAAE9K,KAAc,QAAT,EAAA9C,EAAKQ,YAAI,eAAEuG,mBAC1C7F,QAAQC,IAAI,UAAW+M,GACvBJ,EAAgBpP,MAAMC,MAAQiP,EAAU,IACxCE,EAAgBpP,MAAME,IAAMgP,OAEzB,GAAI5N,EAAKiO,YAAa,CAC3B,IAAIE,EAAU,IACdL,EAAgBpP,MAAMC,MAAQiP,EAAUO,EACxCL,EAAgBpP,MAAME,IAAMgP,EACxBE,EAAgBpP,MAAMC,MAAQ,IAChCmP,EAAgBpP,MAAMC,MAAQ,GAIlCpG,KAAKyC,SAASoT,WAAW7V,KAAKoE,iBAC9BpE,KAAK4C,WAAWkT,SAAS,CACvB3P,MAAO,CACLC,MAAOmP,EAAgBpP,MAAMC,MAC7BC,IAAKkP,EAAgBpP,MAAME,OAG/BrG,KAAKsC,cAAcyT,KAAK/V,KAAKoB,eAGvBkI,eAAe7B,GACrB,IAAI4N,EAAUrV,KAAKwB,gBAAgBoG,kBAE/BoO,EAAyBhW,KAAKyD,aAAa+R,WAG/C,GAAI/N,EAAKgO,cAAgBhO,EAAKiO,YACxBL,GAAW,KACbW,EAAkB7P,MAAMC,MAAQ,EAChC4P,EAAkB7P,MAAME,IAAMgP,IAE9BW,EAAkB7P,MAAMC,MAAQiP,EAAU,IAC1CW,EAAkB7P,MAAME,IAAMgP,QAE3B,GAAI5N,EAAKiO,YAAa,CAC3B,IAAIE,EAAU,IACdI,EAAkB7P,MAAMC,MAAQiP,EAAUO,EAC1CI,EAAkB7P,MAAME,IAAMgP,EAC1BW,EAAkB7P,MAAMC,MAAQ,IAClC4P,EAAkB7P,MAAMC,MAAQ,GAIpCpG,KAAKuD,WAAWsS,WAAW7V,KAAK2G,mBAChC3G,KAAKyD,aAAaqS,SAAS,CACzB3P,MAAO,CACLC,MAAO4P,EAAkB7P,MAAMC,MAC/BC,IAAK2P,EAAkB7P,MAAME,OAGjCrG,KAAKqD,gBAAgB0S,KAAK/V,KAAKwB,iBAGzB6H,cAAc5B,GACpB,IAAIwO,EAAwBjW,KAAKmD,YAAYqS,WACzCU,EAAO,IAAI1L,KAAKxK,KAAKyB,eAAe0U,eAAe,GAAGtR,KACtDuR,EAAO,IAAI5L,KAAKxK,KAAKyB,eAAe0U,eAAe,GAAGrR,MAEtD2C,EAAKgO,aAAehO,EAAKiO,eAC3BO,EAAiB9P,MAAMC,MAAQ8P,EAC/BD,EAAiB9P,MAAME,IAAM+P,GAG/BpW,KAAKmD,YAAY2S,SAAS,CACxB3P,MAAO,CACLC,MAAO6P,EAAiB9P,MAAMC,MAC9BC,IAAK4P,EAAiB9P,MAAME,OAGhCrG,KAAKiD,UAAU4S,WAAW7V,KAAKsG,kBAC/BtG,KAAK+C,eAAegT,KAAK/V,KAAKyB,gBAGxB8H,kBACNvJ,KAAKmE,YAAY4R,KAAK/V,KAAK8B,iBAAkB9B,KAAKuH,oBAG5CiC,kBACNxJ,KAAK8D,QAAQiS,KAAK/V,KAAK2B,iBAAkB3B,KAAKgH,gBAGxCyC,iBACNzJ,KAAKkE,WAAW6R,KAAK/V,KAAK6B,gBAAiB7B,KAAKsH,mBAG1CoC,iBACN1J,KAAKgE,WAAW+R,KAAK/V,KAAK4B,gBAAiB5B,KAAKmH,mBAG1CkP,iBAAiBpO,GAEvBjI,KAAKsW,oBAAsB,CACzBxP,WAAY,UACZzC,MAAO4D,EAAKsO,UAAU,GAAKtO,EAAKuO,YAChCjS,OAAQ0D,EAAK0G,eAAe,GAAK1G,EAAK4G,UACtC5H,OAAQ,CACNC,SAAU,OAEZzC,MAAO,CACLC,MAAO,kBACPE,WAAY,CACVC,IAAK,EACLC,IAAKmD,EAAKsO,UAAU,GAAKtO,EAAKuO,cAGlC7R,MAAO,CACLD,MAAO,kBACPE,WAAY,CACVC,IAAK,EACLC,IAAKmD,EAAK0G,eAAe,GAAK1G,EAAK4G,aAIzC7O,KAAKsW,oBAAoB7R,MAAQ,CAC/BC,MAAO,kBACPE,WAAY,CACVC,IAAK,EACLC,IAAKmD,EAAKsO,UAAU,GAAKtO,EAAKuO,cAGlCxW,KAAKsW,oBAAoB3R,MAAQ,CAC/BD,MAAO,kBACPE,WAAY,CACVC,IAAK,EACLC,IAAKmD,EAAK0G,eAAe,GAAK1G,EAAK4G,YAGvC,IAAI4H,EAASzW,KAAK+B,kBAAkB+F,qBACpC9H,KAAK8O,sBAAsB9O,KAAK+B,kBAAmB0U,EAAQ,CACzD,EAAG,EACH,CAACA,EAAS,GAAI,IAEhB,IAAIpB,EAAUrV,KAAK+B,kBAAkB6F,kBAErC5H,KAAK0W,mBAAqB,CACxBrR,UAAW,aACXC,YAAa,gBACbC,QAASvF,KAAKsW,qBAEhBtW,KAAK2W,aAAe,IAAItV,OAAOC,cAAcoB,aAC3C1C,KAAK0W,oBAEP1W,KAAK2W,aAAaC,aAAa5W,KAAK+B,mBACpC8U,OAAOC,iBAAiB,gBAAiBC,IAErC/W,KAAK+B,kBAAkB6R,SACrByB,EAAU,EACV,EACAzJ,KAAKoL,MAAMD,EAAIE,OAAOlI,IAExB/O,KAAK+B,kBAAkB6R,SACrByB,EAAU,EACVoB,EAAS,EACT7K,KAAKoL,MAAMD,EAAIE,OAAOjI,IAExBhP,KAAK2W,aAAaZ,UAKhBmB,mBACNC,EACAC,EACAnP,EACA8O,GAEA,GAAIK,EAAK,CACPA,EAAIC,UAAY,OAChBD,EAAIE,SACF,EACA,EACArP,EAAKsO,UAAU,GAAKtO,EAAKuO,YACzBvO,EAAK0G,eAAe,GAAK1G,EAAK4G,WAGhC,IAAK,IAAIiC,KAAOiG,EAAIE,OAAOM,cAAe,CACxC,IAAIlT,EACF0S,EAAIE,OAAOM,cAAczG,GAAU,IACnCiG,EAAIE,OAAOM,cAAczG,GAAU,IACjCvM,EACFwS,EAAIE,OAAOM,cAAczG,GAAU,IACnCiG,EAAIE,OAAOM,cAAczG,GAAU,IACrCsG,EAAII,YACJJ,EAAIK,KACF,UAAET,MAAMD,EAAIE,OAAOM,cAAczG,GAAU,KAC3C,UAAEkG,MAAMG,EAAI5S,OAASwS,EAAIE,OAAOM,cAAczG,GAAU,KACxDzM,GACCE,GAEH6S,EAAIM,WA8EF5N,kBAAkB7B,GACxB,IAAIkP,EAAMQ,SAASC,cAAc,oBACjCT,EAAI9S,MAAQ4D,EAAKsO,UAAU,GAAKtO,EAAKuO,YACrCW,EAAI5S,OAAS0D,EAAK0G,eAAe,GAAK1G,EAAK4G,UAC3C,IAAIuI,EAAMD,EAAIU,WAAW,MACzBhB,OAAOC,iBAAiB,gBAAiBC,IAChB,GAAnBA,EAAIE,OAAOa,MACb9X,KAAKkX,mBAAmBC,EAAKC,EAAKnP,EAAM8O,GAGnB,GAAnBA,EAAIE,OAAOa,KACbV,EAAIC,UAAY,QACY,GAAnBN,EAAIE,OAAOa,OACpBV,EAAIC,UAAY,OAGlBD,MAAAA,GAAAA,EAAKI,YACL,IAAIzI,EAAI,UAAEiI,MAAMD,EAAIE,OAAOlI,GACvBC,EAAI,UAAEgI,MAAMG,EAAI5S,OAASwS,EAAIE,OAAOjI,GACxCoI,MAAAA,GAAAA,EAAKW,IAAIhJ,EAAGC,EAAG,EAAG,EAAa,EAAVpD,KAAKoM,IAAQ,GAClCZ,MAAAA,GAAAA,EAAK3F,UAID5H,eAAe5B,EAAwBgQ,GAC7CjY,KAAK6G,kBAAkB1B,OAAS,GAChC,IAAK,IAAIgD,EAAI,EAAGA,EAAInI,KAAK0B,eAAeoG,qBAAsBK,IACf,YAAzCnI,KAAK0B,eAAewW,eAAe/P,GACrCnI,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAEG,KAAM,OAAQlD,MAAO,QACZ,UAAzCpF,KAAK0B,eAAewW,eAAe/P,GAC5CnI,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAEG,KAAM,OAAQlD,MAAO,SACZ,QAAzCpF,KAAK0B,eAAewW,eAAe/P,GAC5CnI,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAEG,KAAM,OAAQlD,MAAO,SACZ,aAAzCpF,KAAK0B,eAAewW,eAAe/P,GAC5CnI,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAEG,KAAM,OAAQlD,MAAO,OACZ,cAAzCpF,KAAK0B,eAAewW,eAAe/P,GAC5CnI,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAE/C,MAAO,QACE,cAAzCpF,KAAK0B,eAAewW,eAAe/P,GAC5CnI,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAE/C,MAAO,OACE,iBAAzCpF,KAAK0B,eAAewW,eAAe/P,GAC5CnI,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAE/C,MAAO,SACE,iBAAzCpF,KAAK0B,eAAewW,eAAe/P,GAC5CnI,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAE/C,MAAO,SACvCpF,KAAK0B,eAAewW,eAAe/P,GAAGgQ,SAAS,UACxDnY,KAAK6G,kBAAkB1B,OAAOgD,EAAI,GAAK,CAAEG,KAAM,OAAQlD,MAAO,UAIlEpF,KAAK6G,kBAAkBtC,OAAS0D,EAAK0G,eAAe,GACpD3O,KAAK6G,kBAAkBxC,MAAQ4D,EAAK0G,eAAe,GACnD3O,KAAK6G,kBAAkBpC,MAAQ,CAC7BC,MAAO,kBACPE,WAAY,CACVC,IAAK,EACLC,IAAKmD,EAAK0G,eAAe,KAG7B3O,KAAK6G,kBAAkBlC,MAAQ,CAC7BD,MAAO,kBACPE,WAAY,CACVC,IAAK,EACLC,IAAKmD,EAAK0G,eAAe,KAGxB3O,KAAKE,oBACRF,KAAK4D,WAAWmS,KAAK/V,KAAK0B,eAAgB1B,KAAK6G,mBAI3CiL,WACN7J,EACAmQ,GAEgB,IAAI/W,OAAOC,cAAc+W,WAAW,CAClDC,QAAS,SAEDC,OAAOtQ,EAAMmQ,GAGjBI,aAAavQ,EAAsCmQ,GACzC,IAAI/W,OAAOC,cAAcmX,aAAa,CACpDC,eAAgB,IAERH,OAAOtQ,EAAMmQ,GAGjBO,YAAY1Q,EAAsCmQ,GACxD,IAAIQ,EAAY,IAAIvX,OAAOC,cAAcuX,YACrCC,EAAK,GAAKnZ,EAAY0I,OAAS,GACnC,IAAK,IAAIF,EAAI,EAAGA,EAAIxI,EAAY0I,OAAQF,IACtCyQ,EAAUG,SAAS5Q,EAAI2Q,GAAK3Q,EAAI,GAAK2Q,EAAI,OAAQnZ,EAAYwI,IAE/DyQ,EAAUL,OAAOtQ,EAAMmQ,M,gGCh9D3B,gCACA,OACA,OACA,OACA,sCACA,gCAGA,SACA,SAIMY,EADU,UAASC,UACEC,MACrBC,EAAO,UAASC,WAEhBC,EAAY,yBAKZzZ,GAJWoZ,EAAWM,MAAMD,GAEhBL,EAAWM,MADV,wCAEAH,EAAKD,IAAI,WACd,IAAI,EAAArZ,OAElB,iBAQEC,YAAYC,GACVC,KAAKuZ,SAAWxZ,EAChBC,KAAKyH,KAAO,CACV+R,KAAMH,EACNI,KAAM,GACNC,KAAM,GACNC,IAAK,KACLC,KAAM,KACNnE,aAAa,EACbC,aAAa,GAEf1V,KAAKkC,OAAS,IAAI,EAAA2X,OAAO9Z,GACzBC,KAAK4J,cAAe,EACpB5J,KAAK8Z,2BACL9Z,KAAK+Z,qBAGAC,6BAA6BC,GAClCA,EAAKnD,iBAAiB,SAAUC,I,MAG9B,GAFAA,EAAImD,kBACJnD,EAAIoD,iBACAna,KAAK4J,aAAc,CACrB,IAAIwQ,EAAsB,QAAd,EAAApa,KAAKyH,KAAKQ,YAAI,eAAEoS,MAC5BlB,EAAKD,IAAI,QAAQkB,KAASE,MAC1Bta,KAAKua,eAAeC,QAAOzO,IACrBA,GACFpD,QAAQqD,MAAM,kCAAkCD,QAGpD/L,KAAK4J,cAAe,EAEtB5J,KAAKyH,KAAKiS,KAAO1Z,KAAKyH,KAAKgS,KAAKgB,SAASR,EAAKS,QAAQC,SACtD3a,KAAKyH,KAAKiO,aAAc,KAIrBqE,qBACLlD,OAAOC,iBAAiB,UAAWC,IACjC/W,KAAKua,eAAeK,eAAeJ,YAIhCV,2BACL,IAAIe,EAAc7a,KAAKuZ,SAASsB,YAChCA,EAAY/D,iBAAiB,SAAS7U,MAAO8U,I,MAC3CA,EAAImD,kBACJnD,EAAIoD,iBACJ,IAAIC,EAAsB,QAAd,EAAApa,KAAKyH,KAAKQ,YAAI,eAAEoS,MAC5B,GAAIra,KAAK4J,aACPiR,EAAYtP,UAAY,0BACxB4N,EAAKD,IAAI,QAAQkB,KAASE,MAC1Bta,KAAKua,eAAeC,QAAOzO,IACrBA,GACFpD,QAAQqD,MAAM,kCAAkCD,QAGpDoN,EAAKD,IAAI,QAAQkB,KAASE,MAC1Bta,KAAK4J,cAAe,MACf,CACLiR,EAAYtP,UAAY,6BACxB,IAAIuP,EAAiB3B,EAAKD,IAAI,UAAUkB,KAAS/K,OAAO0L,IACxD/a,KAAKua,eAAiBpB,EAAKD,IAAI,UAAUkB,KAASU,KAC9C,UAAElI,SAASkI,IACb3B,EAAKD,IAAI,UAAUkB,KAASY,OAAO,CACjC,CAACF,IAAiB,IAGtB3B,EAAKD,IAAI,QAAQkB,KAASa,GAAG,SAASC,IACpC,IAAIC,EAAQ,IACNC,YAAY,eAAgB,CAAEnE,OAAQiE,EAAKG,QAEjDxE,OAAOyE,cAAcH,MAEvBnb,KAAK4J,cAAe,MAKnB3H,uBAAuBgY,GAC5B,IACE,IAAIsB,QAAiB3b,EAAM4b,YAAYxb,KAAKyH,KAAK+R,MAEjD+B,EAAStH,MAAK,CAAC9I,EAAQC,KACrB,IAAIqQ,EAAQtQ,EAAEuO,KAAKgC,cACfC,EAAQvQ,EAAEsO,KAAKgC,cAEnB,OAAID,EAAQE,GACF,EAGNF,EAAQE,EACH,EAGF,KAGT3b,KAAKyH,KAAKgS,KAAO8B,EAEjB,IAAK,IAAIpT,EAAI,EAAGA,EAAIoT,EAASlT,OAAQF,IAAK,CACxC,IAAIyT,EAAMjE,SAASkE,cAAc,UACjCD,EAAIlB,MAAQvS,EAAEoM,WACdqH,EAAIrQ,UAAYgQ,EAASpT,GAAGuR,KAC5BO,EAAK6B,YAAYF,GAGnB5b,KAAKyH,KAAKiS,KAAO1Z,KAAKyH,KAAKgS,KAAK,GAAGkB,SACnC3a,KAAKyH,KAAKiO,aAAc,EACxB,IAAIqG,QAAuBnc,EAAMoc,eAAehc,KAAKyH,KAAKiS,MAG1D1Z,KAAKic,YAAYF,GAEjB,MAAO/P,GACPrD,QAAQqD,MAAM,oBAAqBA,IAM/BkQ,YAAYjU,GAElB,IAAIqH,EAAW,GAEf,IAAK,IAAI6M,KAAYlU,EACnB,GAAIA,EAAKmU,eAAeD,GACtB,IAAK,IAAIE,KAAYpU,EAAKkU,GACpBlU,EAAKkU,GAAUC,eAAeC,KAChC/M,EAAI+M,GAAYpU,EAAKkU,GAAUE,IAMvC,OAAO/M,EAGDrN,kBAAkBgG,GAExBjI,KAAKyH,KAAKQ,KAAOjI,KAAKkc,YAAYjU,GAClCjI,KAAKsc,iBAAiBtc,KAAKyH,KAAKQ,MAGhC,IAAIsU,QAAiB3c,EAAM4c,uBAAuBxc,KAAKyH,KAAKiS,MAC5D/Q,QAAQC,IAAI,6BAA8B2T,EAAShS,KAAO,IAAM,MAChEvK,KAAKyH,KAAKkS,IAAM4C,EAASE,WACzBzc,KAAKyH,KAAKkE,UAAY,IAAInB,KAAK+R,EAASG,SACxC/T,QAAQC,IAAI5I,KAAKyH,KAAKkE,WAMlB3L,KAAKyH,KAAKiO,aACZ1V,KAAKkC,OAAOsF,oBAAoBxH,KAAKyH,KAAM,CAACmC,aAAc5J,KAAK4J,eAC/D5J,KAAK2c,kBACL3c,KAAKyH,KAAKiO,aAAc,EACxB1V,KAAKyH,KAAKgO,aAAc,GACfzV,KAAKyH,KAAKgO,cACnBzV,KAAKkC,OAAOsG,YAAYxI,KAAKyH,KAAM,CAACmC,aAAc5J,KAAK4J,eACvD5J,KAAKyH,KAAKgO,aAAc,EACxBzV,KAAK2c,mBAIFC,YAAY3C,GACjBja,KAAK6c,OAAS,IAAI,UAAW5C,GAGvBqC,iBAAiBrU,GACnBjI,KAAKyH,KAAKiO,YACZ1V,KAAK6c,OAAOC,IAAI7U,GAEhBjI,KAAK6c,OAAO7B,OAAO/S,GAIfhG,wBACN,IACE,IAAIsa,QAAiB3c,EAAM4c,uBAAuBxc,KAAKyH,KAAKiS,MAY5D,GAVI1Z,KAAKyH,KAAKkS,KAAO4C,EAASE,YAC5Bzc,KAAKyH,KAAKkS,IAAM4C,EAASE,WACzBzc,KAAKyH,KAAKkE,UAAY,IAAInB,KAAK+R,EAASG,SACxC/T,QAAQC,IAAI5I,KAAKyH,KAAKkE,WACtB3L,KAAKyH,KAAKgO,aAAc,EACxB9M,QAAQC,IAAI,wBAA0B5I,KAAKyH,KAAKkS,MAEhD3Z,KAAKyH,KAAKgO,aAAc,EAGG,GAAzBzV,KAAKyH,KAAKiO,aAAgD,GAAzB1V,KAAKyH,KAAKgO,YAAqB,CAClE,IAAIsG,QAAuBnc,EAAMoc,eAAehc,KAAKyH,KAAKiS,MAE1D1Z,KAAKic,YAAYF,QAEjBgB,YAAW,KACT/c,KAAK2c,oBACJ,KAEL,MAAO3Q,GACPrD,QAAQqD,MAAM,yBAA0BA,GAE1C,OAAO,K,6BC1OX,OACA,sCACA,OAWA,UAASgR,cATc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBACnBC,SAAU,8EAIZ,eAEA,IAAIC,EACF7F,SAASC,cAAc,cAGrB6F,EACF9F,SAASC,cAAc,WAGrB7X,EAAU,CACZyC,QAASmV,SAASC,cAAc,0BAChCnV,SAAUkV,SAASC,cAAc,qBACjChV,WAAY+U,SAASC,cAAc,uBACnC5U,SAAU2U,SAASC,cAAc,oBACjC3U,UAAW0U,SAASC,cAAc,eAClCzU,YAAawU,SAASC,cAAc,iBACpCtU,UAAWqU,SAASC,cAAc,qBAClCrU,WAAYoU,SAASC,cAAc,gBACnCnU,aAAckU,SAASC,cAAc,kBACrChU,WAAY+T,SAASC,cAAc,gBAEnC9T,QAAS6T,SAASC,cAAc,kBAChC1T,WAAYyT,SAASC,cAAc,gBACnCzT,YAAawT,SAASC,cAAc,kBACpC5T,WAAY2T,SAASC,cAAc,gBAEnCtM,WAAYqM,SAASC,cAAc,uBACnCpM,WAAYmM,SAASC,cAAc,gBACnCnM,cAAekM,SAASC,cAAc,mBACtClM,YAAaiM,SAASC,cAAc,iBACpC8F,SAAU/F,SAASC,cAAc,mBACjC+F,aAAchG,SAASC,cAAc,kBACrCgG,YAAajG,SAASC,cAAc,kBACpCiG,UAAWlG,SAASC,cAAc,kBAClCiD,YAAalD,SAASC,cAAc,sBAGtC,MAAMkG,EAAK,IAAI,EAAAC,SAAShe,GACxB+d,EAAGlB,YAAYa,GACfK,EAAG9D,6BAA6BwD,GAChCM,EAAGE,iBAAiBR,GA8EpB,IAAIS,EAAW,IAAI,UAASC,KAAKC,mBACjCF,EAASG,SAAS,qDAClB,UAASF,OAAOG,oBAAoBC,MAAK,SAASC,GAC5CA,EAAOC,KAEZ7V,QAAQC,IAAI,iCAAmC2V,EAAOC,KAAKC,MAAQ,iBAEzD,UAASP,OAAOQ,YAE1B/V,QAAQC,IAAI,8CAIZ,UAASsV,OAAOS,mBAAmBV,O,oFCnJpC,K,OAAA,yBACA,OACA,OAEA,MACMjF,EADU,UAASC,UACEC,MAE3B,cACEpZ,eAEOmC,kBAAkBuX,EAAcoF,GACrC,IAAIrD,QAAiBvC,EAAWM,MAAME,GAAMqF,UAExCC,GAAO,IAAItU,MAAOuU,cAClBC,EAAa,GAEjB,IAAK,IAAIC,KAAQ1D,EAAS2D,SAAU,CAClC,IAAIC,QACInf,KAAKwb,YAAYhC,EAAOyF,EAAKvF,KAAO,IAAKkF,GAEjDI,EAAQ,IAAIA,KAAUG,GAGxB,IAAK,IAAIhX,EAAI,EAAGA,EAAIoT,EAAS6D,MAAM/W,OAAQF,IACtB,iBAAT,EACJoT,EAAS6D,MAAMjX,GAAGuR,KAAK2F,SAAST,IAClCI,EAAM3P,KAAK,CACTsL,SAAUY,EAAS6D,MAAMjX,GAAGmX,SAC5B5F,KAAM6B,EAAS6D,MAAMjX,GAAGuR,OAGnBe,SAASc,EAAS6D,MAAMjX,GAAGuR,KAAK6F,MAAM,EAAG,KAAOT,EAAO,GAChEE,EAAM3P,KAAK,CACTsL,SAAUY,EAAS6D,MAAMjX,GAAGmX,SAC5B5F,KAAM6B,EAAS6D,MAAMjX,GAAGuR,OAK9B,OAAOsF,EAGF/c,qBAAqBuX,GAU1B,OATcR,EAAWM,MAAME,SAEdR,EAAWM,MAAME,GAAMgG,iBAAiBlB,MAAKrc,MAAOwd,UAC9CC,MAAMD,IACXE,SACfC,OAAMC,IACPlX,QAAQqD,MAAM,qBAAsB6T,MAMjC5d,6BAA6BuX,GAClC,IAAIsG,EAAU9G,EAAWM,MAAME,GAE/B,aADqBsG,EAAQC,cAIxBna,OAAOqC,EAAa+X,GACzB,IAAIC,EAAe,GACnB,IAAK,IAAI9X,EAAI,EAAGA,EAAIF,EAAKI,OAAQF,IAC/B,GAAIA,EAAI6X,EAAI,EAAG,CACb,IAAI1Q,EAAMrH,EAAKsX,MAAM,EAAGpX,EAAI,GAC5B8X,EAAa9X,GAAKmH,EAAIpE,QAAO,CAACC,EAAQC,IAC7BD,EAAIC,IAEb6U,EAAa9X,IAAOA,EAAI,MACnB,CACL,IAAImH,EAAMrH,EAAKsX,MAAMpX,EAAI6X,EAAI,EAAG7X,EAAI,GACpC8X,EAAa9X,GAAKmH,EAAIpE,QAAO,CAACC,EAAWC,IAChCD,EAAIC,IAEb6U,EAAa9X,IAAM6X,EAGvB,OAAOC,EAGFC,aAAa/U,EAAWC,GAC7B,OAAOQ,KAAK+E,IAAI/E,KAAKgF,IAAIzF,EAAIC,GAAI,OCjFjC+U,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBlL,IAAjBmL,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjDI,GAAIJ,EACJK,QAAQ,EACRH,QAAS,IAUV,OANAI,EAAoBN,GAAUO,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOE,QAAS,EAGTF,EAAOD,QAIfH,EAAoBS,EAAIF,EL5BpBjhB,EAAW,GACf0gB,EAAoBU,EAAI,CAACvC,EAAQwC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,EAAAA,EACnB,IAAShZ,EAAI,EAAGA,EAAIzI,EAAS2I,OAAQF,IAAK,CAGzC,IAFA,IAAK4Y,EAAUC,EAAIC,GAAYvhB,EAASyI,GACpCiZ,GAAY,EACP/Q,EAAI,EAAGA,EAAI0Q,EAAS1Y,OAAQgI,MACpB,EAAX4Q,GAAsBC,GAAgBD,IAAavM,OAAOC,KAAKyL,EAAoBU,GAAGO,OAAOtG,GAASqF,EAAoBU,EAAE/F,GAAKgG,EAAS1Q,MAC9I0Q,EAASO,OAAOjR,IAAK,IAErB+Q,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACb1hB,EAAS4hB,OAAOnZ,IAAK,GACrB,IAAIoZ,EAAIP,SACE7L,IAANoM,IAAiBhD,EAASgD,IAGhC,OAAOhD,EAvBN0C,EAAWA,GAAY,EACvB,IAAI,IAAI9Y,EAAIzI,EAAS2I,OAAQF,EAAI,GAAKzI,EAASyI,EAAI,GAAG,GAAK8Y,EAAU9Y,IAAKzI,EAASyI,GAAKzI,EAASyI,EAAI,GACrGzI,EAASyI,GAAK,CAAC4Y,EAAUC,EAAIC,IMJ/Bb,EAAoBoB,EAAI,CAACjB,EAASkB,KACjC,IAAI,IAAI1G,KAAO0G,EACXrB,EAAoBsB,EAAED,EAAY1G,KAASqF,EAAoBsB,EAAEnB,EAASxF,IAC5ErG,OAAOiN,eAAepB,EAASxF,EAAK,CAAE6G,YAAY,EAAMC,IAAKJ,EAAW1G,MCJ3EqF,EAAoB0B,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO/hB,MAAQ,IAAIgiB,SAAS,cAAb,GACd,MAAOnC,GACR,GAAsB,iBAAXhJ,OAAqB,OAAOA,QALjB,GCAxBuJ,EAAoB6B,IAAOzB,KAC1BA,EAAS9L,OAAOwN,OAAO1B,IACX2B,WAAU3B,EAAO2B,SAAW,IACxCzN,OAAOiN,eAAenB,EAAQ,UAAW,CACxCoB,YAAY,EACZ9E,IAAK,KACJ,MAAM,IAAIsF,MAAM,0FAA4F5B,EAAOC,OAG9GD,GCTRJ,EAAoBsB,EAAI,CAACW,EAAKC,IAAU5N,OAAO6N,UAAUnG,eAAewE,KAAKyB,EAAKC,GCClFlC,EAAoBmB,EAAKhB,IACH,oBAAXiC,QAA0BA,OAAOC,aAC1C/N,OAAOiN,eAAepB,EAASiC,OAAOC,YAAa,CAAE/H,MAAO,WAE7DhG,OAAOiN,eAAepB,EAAS,aAAc,CAAE7F,OAAO,KCLvD0F,EAAoBsC,IAAOlC,IAC1BA,EAAOmC,MAAQ,GACVnC,EAAO2B,WAAU3B,EAAO2B,SAAW,IACjC3B,G,MCER,IAAIoC,EAAkB,CACrB,IAAK,GAaNxC,EAAoBU,EAAEzQ,EAAKwS,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4B9a,KACvD,IAGIoY,EAAUwC,GAHT9B,EAAUiC,EAAaC,GAAWhb,EAGhBE,EAAI,EAC3B,GAAG4Y,EAASmC,MAAMzC,GAAgC,IAAxBmC,EAAgBnC,KAAa,CACtD,IAAIJ,KAAY2C,EACZ5C,EAAoBsB,EAAEsB,EAAa3C,KACrCD,EAAoBS,EAAER,GAAY2C,EAAY3C,IAGhD,GAAG4C,EAAS,IAAI1E,EAAS0E,EAAQ7C,GAGlC,IADG2C,GAA4BA,EAA2B9a,GACrDE,EAAI4Y,EAAS1Y,OAAQF,IACzB0a,EAAU9B,EAAS5Y,GAChBiY,EAAoBsB,EAAEkB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgB7B,EAAS5Y,IAAM,EAEhC,OAAOiY,EAAoBU,EAAEvC,IAG1B4E,EAAqBC,KAA2B,qBAAIA,KAA2B,sBAAK,GACxFD,EAAmBE,QAAQP,EAAqBnf,KAAK,KAAM,IAC3Dwf,EAAmB9T,KAAOyT,EAAqBnf,KAAK,KAAMwf,EAAmB9T,KAAK1L,KAAKwf,K,GC7CvF/C,EAAoBU,OAAE3L,EAAW,CAAC,MAAM,IAAOiL,EAAoB,OACnE,IAAIkD,EAAsBlD,EAAoBU,OAAE3L,EAAW,CAAC,MAAM,IAAOiL,EAAoB,OAC7FkD,EAAsBlD,EAAoBU,EAAEwC,I","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/charts.ts","webpack:///./src/liveplot.ts","webpack:///./src/main.ts","webpack:///./src/utils.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/harmony module decorator","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import _, { last, sample } from 'lodash';\nimport { FileType, LiveplotDataType } from './types';\nimport { Utils } from './utils';\n\nconst colorMapJet = [\n  '#00008F',\n  '#00009F',\n  '#0000AF',\n  '#0000BF',\n  '#0000CF',\n  '#0000DF',\n  '#0000EF',\n  '#0000FF',\n  '#0010FF',\n  '#0020FF',\n  '#0030FF',\n  '#0040FF',\n  '#0050FF',\n  '#0060FF',\n  '#0070FF',\n  '#0080FF',\n  '#008FFF',\n  '#009FFF',\n  '#00AFFF',\n  '#00BFFF',\n  '#00CFFF',\n  '#00DFFF',\n  '#00EFFF',\n  '#00FFFF',\n  '#10FFEF',\n  '#20FFDF',\n  '#30FFCF',\n  '#40FFBF',\n  '#50FFAF',\n  '#60FF9F',\n  '#70FF8F',\n  '#80FF80',\n  '#8FFF70',\n  '#9FFF60',\n  '#AFFF50',\n  '#BFFF40',\n  '#CFFF30',\n  '#DFFF20',\n  '#EFFF10',\n  '#FFFF00',\n  '#FFEF00',\n  '#FFDF00',\n  '#FFCF00',\n  '#FFBF00',\n  '#FFAF00',\n  '#FF9F00',\n  '#FF8F00',\n  '#FF8000',\n  '#FF7000',\n  '#FF6000',\n  '#FF5000',\n  '#FF4000',\n  '#FF3000',\n  '#FF2000',\n  '#FF1000',\n  '#FF0000',\n  '#EF0000',\n  '#DF0000',\n  '#CF0000',\n  '#BF0000',\n  '#AF0000',\n  '#9F0000',\n  '#8F0000',\n  '#800000',\n];\n\nconst utils = new Utils();\n\nexport class Charts {\n  public elemObject: any;\n  public perfDataTable: google.visualization.DataTable;\n  public cumulDataTable: google.visualization.DataTable;\n  public xyPosDataTable: google.visualization.DataTable;\n  public rxnTimeDataTable: google.visualization.DataTable;\n  public rewardDataTable: google.visualization.DataTable;\n  public choiceDataTable: google.visualization.DataTable;\n  public objPerfDataTable: google.visualization.DataTable;\n  public realtimeDataTable: google.visualization.DataTable;\n  public healthDataTable: google.visualization.DataTable;\n\n  public perfDashboard: google.visualization.Dashboard;\n  public trialDashboard: google.visualization.Dashboard;\n  public healthDashboard: google.visualization.Dashboard;\n\n  public perfPlot: google.visualization.ChartWrapper;\n  public perfPlotConfig: google.visualization.ChartSpecs;\n  public perfPlotOptions: google.visualization.LineChartOptions;\n  public perfFilter: google.visualization.ControlWrapper;\n  public perfFilterConfig: google.visualization.ControlWrapperOptions;\n  public perfFilterOptions: Object;\n\n  public trialPlot: google.visualization.ChartWrapper;\n  public trialPlotConfig: google.visualization.ChartSpecs;\n  public trialPlotOptions: google.visualization.AreaChartOptions;\n  public trialFilter: google.visualization.ControlWrapper;\n  public trialFilterConfig: google.visualization.ControlWrapperOptions;\n  public trialFilterOptions: Object;\n\n  public healthPlot: google.visualization.ChartWrapper;\n  public healthPlotConfig: google.visualization.ChartSpecs;\n  public healthPlotOptions: google.visualization.ScatterChartOptions;\n  public healthFilter: google.visualization.ControlWrapper;\n  public healthFilterConfig: google.visualization.ControlWrapperOptions;\n  public healthFilterOptions: Object;\n\n  public screenPlot: google.visualization.ComboChart;\n  public screenPlotOptions: google.visualization.ComboChartOptions;\n\n  public realtimePlot: google.visualization.ChartWrapper;\n  public realtimePlotConfig: google.visualization.ChartSpecs;\n  public realtimePlotOptions: google.visualization.ComboChartOptions;\n  public realtimePlotActive: boolean;\n  public realtimeRowDataAdded: boolean;\n  public rtData: any;\n\n  public rxnPlot: google.visualization.Histogram;\n  public rxnPlotOptions: google.visualization.HistogramOptions;\n\n  public rewardPlot: google.visualization.ColumnChart;\n  public rewardPlotOptions: google.visualization.ColumnChartOptions;\n\n  public choicePlot: google.visualization.ColumnChart;\n  public choicePlotOptions: google.visualization.ColumnChartOptions;\n\n  public objPerfPlot: google.visualization.ColumnChart;\n  public objPerfPlotOptions: google.visualization.ColumnChartOptions;\n\n  private vitals: any;\n  private nTrials: number;\n\n  constructor(elemObj: any) {\n    this.elemObject = elemObj;\n    this.realtimePlotActive = false;\n    this.setupCharts();\n\n    this.vitals = {\n      subject: null,\n      pctCorrect: 0,\n      trials: 0,\n      time: 0,\n      batteryLeft: 0,\n      batteryUsed: 0,\n      rewardEstimate: 0,\n      automator: '',\n      automatorStage: 0,\n      automatorStageName: '',\n      numReward: 0,\n      rfidTag: '',\n      rfidTime: 0,\n      tagCount: {},\n    };\n  }\n\n  public setupDataTables() {\n    this.perfDataTable = new google.visualization.DataTable();\n    this.healthDataTable = new google.visualization.DataTable();\n    this.cumulDataTable = new google.visualization.DataTable();\n    this.xyPosDataTable = new google.visualization.DataTable();\n    this.rxnTimeDataTable = new google.visualization.DataTable();\n    this.rewardDataTable = new google.visualization.DataTable();\n    this.choiceDataTable = new google.visualization.DataTable();\n    this.objPerfDataTable = new google.visualization.DataTable();\n    this.realtimeDataTable = new google.visualization.DataTable();\n    this.rtData = {};\n  }\n\n  public async setupCharts() {\n    await google.charts.load('50', { packages: ['corechart', 'controls'] });\n    this.setupChartOptions();\n    this.setupDataTables();\n\n    this.perfDashboard = new google.visualization.Dashboard(\n      this.elemObject.perfDiv\n    );\n    this.perfPlot = new google.visualization.ChartWrapper(this.perfPlotConfig);\n    this.perfFilter = new google.visualization.ControlWrapper(\n      this.perfFilterConfig\n    );\n\n    this.trialDashboard = new google.visualization.Dashboard(\n      this.elemObject.trialDiv\n    );\n    this.trialPlot = new google.visualization.ChartWrapper(\n      this.trialPlotConfig\n    );\n    this.trialFilter = new google.visualization.ControlWrapper(\n      this.trialFilterConfig\n    );\n\n    this.healthDashboard = new google.visualization.Dashboard(\n      this.elemObject.healthDiv\n    );\n    this.healthPlot = new google.visualization.ChartWrapper(\n      this.healthPlotConfig\n    );\n    this.healthFilter = new google.visualization.ControlWrapper(\n      this.healthFilterConfig\n    );\n\n    this.perfDashboard.bind(this.perfFilter, this.perfPlot);\n    this.trialDashboard.bind(this.trialFilter, this.trialPlot);\n    this.healthDashboard.bind(this.healthFilter, this.healthPlot);\n\n    this.screenPlot = new google.visualization.ComboChart(\n      this.elemObject.screenPlot\n    );\n    // this.realtimePlot = (\n    //   new google.visualization.ChartWrapper(this.realtimePlotConfig)\n    // );\n    this.rxnPlot = new google.visualization.Histogram(this.elemObject.rxnPlot);\n    this.rewardPlot = new google.visualization.ColumnChart(\n      this.elemObject.rewardPlot\n    );\n    this.choicePlot = new google.visualization.ColumnChart(\n      this.elemObject.choicePlot\n    );\n    this.objPerfPlot = new google.visualization.ColumnChart(\n      this.elemObject.objPerfPlot\n    );\n  }\n\n  public setupChartOptions() {\n    this.perfPlotOptions = {\n      width: this.elemObject.perfPlot.clientWidth,\n      height: this.elemObject.perfPlot.clientHeight,\n      hAxis: { title: 'Trial#' },\n      vAxis: { title: 'Correct (%)', viewWindow: { min: 0, max: 1.0 } },\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true,\n      },\n      series: {\n        0: { color: '#43459d' },\n        1: { color: '#e2431e' },\n      },\n    };\n\n    this.perfPlotConfig = {\n      chartType: 'LineChart',\n      containerId: 'performance-plot',\n      options: this.perfPlotOptions,\n    };\n    this.perfFilterOptions = {\n      filterColumnLabel: 'currentTrial',\n      ui: {\n        chartType: 'LineChart',\n        chartOptions: {\n          smooth: 20,\n          hAxis: { baselineColor: 'none', title: 'Trial#' },\n          vAxis: { title: '%', viewWindow: { min: 0, max: 1.0 } },\n          width: this.elemObject.perfFilter.clientWidth,\n          height: this.elemObject.perfFilter.clientHeight,\n          animation: { duration: 1000, easing: 'out' },\n        },\n        chartView: {\n          columns: [0, 1],\n        },\n        minRangeSize: 2,\n      },\n    };\n    this.perfFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'performance-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.perfFilterOptions,\n    };\n    this.trialPlotOptions = {\n      width: this.elemObject.trialPlot.clientWidth,\n      height: this.elemObject.trialPlot.clientHeight,\n      areaOpacity: 0.5,\n      hAxis: { title: 'Time (h) ' },\n      vAxes: {\n        0: { title: 'Trial count' },\n        1: { title: 'RFID' },\n      },\n      animation: {\n        duration: 500,\n        easing: 'linear',\n      },\n      series: {\n        0: { targetAxisIndex: 0 },\n        1: { targetAxisIndex: 0 },\n        2: { targetAxisIndex: 1 },\n      },\n    };\n    this.trialPlotConfig = {\n      chartType: 'AreaChart',\n      containerId: 'trial-plot',\n      options: this.trialPlotOptions,\n    };\n    this.trialFilterOptions = {\n      filterColumnLabel: 'time',\n      ui: {\n        chartType: 'LineChart',\n        chartOptions: {\n          hAxis: { baselineColor: 'none', title: 'Time' },\n          vAxis: { title: '#' },\n          width: this.elemObject.trialFilter.clientWidth,\n          height: this.elemObject.trialFilter.clientHeight,\n          animation: { duration: 1000, easing: 'out' },\n        },\n      },\n      chartView: {\n        columns: [0, 1],\n      },\n    };\n    this.trialFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'trial-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.trialFilterOptions,\n    };\n\n    this.healthPlotOptions = {\n      width: this.elemObject.healthPlot.clientWidth,\n      height: this.elemObject.healthPlot.clientHeight,\n      hAxis: { title: 'Trial#' },\n      vAxis: { title: 'Time (ms)' },\n      // animation: {\n      //   duration: 500,\n      //   easing: 'linear',\n      //   startup: true\n      // }\n    };\n\n    this.healthPlotConfig = {\n      chartType: 'ScatterChart',\n      containerId: 'health-plot',\n      options: this.healthPlotOptions,\n    };\n    this.healthFilterOptions = {\n      filterColumnLabel: 'trial',\n      ui: {\n        chartType: 'ScatterChart',\n        chartOptions: {\n          smooth: 20,\n          hAxis: { baselineColor: 'none', title: 'Trial#' },\n          vAxis: { title: 'ms' },\n          width: this.elemObject.healthFilter.clientWidth,\n          height: this.elemObject.healthFilter.clientHeight,\n          // animation: { duration: 1000, easing: 'linear' }\n        },\n      },\n    };\n    this.healthFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'health-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.healthFilterOptions,\n    };\n\n    // this.healthPlotOptions = {\n    //   width: this.elemObject.healthPlot.clientWidth,\n    //   height: this.elemObject.healthPlot.clientHeight,\n    //   hAxis: { title: 'Trial #' },\n    //   vAxis: { title: 'Time (ms)' },\n    //   animation: {\n    //     duration: 500,\n    //     easing: 'linear',\n    //     startup: true\n    //   }\n    // };\n    // this.healthPlotConfig = {\n    //   chartType: 'ScatterChart',\n    //   containerId: 'health-plot',\n    //   options: this.healthPlotOptions\n    // };\n    // this.healthFilterOptions = {\n    //   filterColumnLabel: 'trial',\n    //   ui: {\n    //     chartType: 'ScatterChart',\n    //     chartOptions: {\n    //       hAxis: { baselineColor: 'none', title: 'Trial #' },\n    //       vAxis: { title: 'ms' },\n    //       width: this.elemObject.healthFilter.clientWidth,\n    //       height: this.elemObject.healthFilter.clientHeight,\n    //       animation: { duration: 1000, easing: 'out' }\n    //     },\n    //     minRangeSize: 2\n    //   }\n    // };\n    // this.healthFilterConfig = {\n    //   controlType: 'ChartRangeFilter',\n    //   containerId: 'health-filter',\n    //   state: { range: { start: 0, end: 100 } },\n    //   options: this.healthFilterOptions\n    // };\n\n    this.screenPlotOptions = {\n      seriesType: 'scatter',\n      pointSize: 1,\n    };\n    this.rxnPlotOptions = {\n      width: this.elemObject.rxnPlot.clientWidth,\n      height: this.elemObject.rxnPlot.clientHeight,\n      title: 'Reaction Time (ms)',\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true,\n      },\n      legend: { position: 'none' },\n    };\n    this.rewardPlotOptions = {\n      width: this.elemObject.rewardPlot.clientWidth,\n      height: this.elemObject.rewardPlot.clientHeight,\n      title: 'Amount of Reward',\n      hAxis: { title: 'reward amount' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      legend: { position: 'none' },\n    };\n    this.choicePlotOptions = {\n      width: this.elemObject.choicePlot.clientWidth,\n      height: this.elemObject.choicePlot.clientHeight,\n      hAxis: { title: 'Choice' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      legend: { position: 'none' },\n    };\n    this.objPerfPlotOptions = {\n      width: this.elemObject.objPerfPlot.clientWidth,\n      height: this.elemObject.objPerfPlot.clientHeight,\n      hAxis: { title: 'Objects' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      title: 'Object Performance',\n      legend: { position: 'none' },\n    };\n  }\n\n  public initializeChartData(file: FileType, plotOptions: any) {\n    // Remove rows and columns\n    // console.log(this.perfDataTable);\n    this.perfDataTable.removeRows(0, this.perfDataTable.getNumberOfRows());\n    this.perfDataTable.removeColumns(\n      0,\n      this.perfDataTable.getNumberOfColumns()\n    );\n\n    this.cumulDataTable.removeRows(0, this.cumulDataTable.getNumberOfRows());\n    this.cumulDataTable.removeColumns(\n      0,\n      this.cumulDataTable.getNumberOfColumns()\n    );\n\n    this.healthDataTable.removeRows(0, this.healthDataTable.getNumberOfRows());\n    this.healthDataTable.removeColumns(\n      0,\n      this.healthDataTable.getNumberOfColumns()\n    );\n\n    this.xyPosDataTable.removeRows(0, this.xyPosDataTable.getNumberOfRows());\n    this.xyPosDataTable.removeColumns(\n      0,\n      this.xyPosDataTable.getNumberOfColumns()\n    );\n\n    this.realtimeDataTable.removeRows(\n      0,\n      this.realtimeDataTable.getNumberOfRows()\n    );\n    this.realtimeDataTable.removeColumns(\n      0,\n      this.realtimeDataTable.getNumberOfColumns()\n    );\n    this.realtimePlotActive = false;\n    this.realtimeRowDataAdded = false;\n    this.rtData['test'] = [];\n    this.rtData['choice'] = [];\n\n    this.rxnTimeDataTable.removeRows(\n      0,\n      this.rxnTimeDataTable.getNumberOfRows()\n    );\n    this.rxnTimeDataTable.removeColumns(\n      0,\n      this.rxnTimeDataTable.getNumberOfColumns()\n    );\n\n    this.rewardDataTable.removeRows(0, this.rewardDataTable.getNumberOfRows());\n    this.rewardDataTable.removeColumns(\n      0,\n      this.rewardDataTable.getNumberOfColumns()\n    );\n\n    this.choiceDataTable.removeRows(0, this.choiceDataTable.getNumberOfRows());\n    this.choiceDataTable.removeColumns(\n      0,\n      this.choiceDataTable.getNumberOfColumns()\n    );\n\n    this.objPerfDataTable.removeRows(\n      0,\n      this.objPerfDataTable.getNumberOfRows()\n    );\n    this.objPerfDataTable.removeColumns(\n      0,\n      this.objPerfDataTable.getNumberOfColumns()\n    );\n\n    // Add columns\n    this.perfDataTable.addColumn('number', 'currentTrial');\n    this.perfDataTable.addColumn('number', 'current');\n    this.perfDataTable.addColumn('number', '100trialsAvg');\n\n    this.cumulDataTable.addColumn('datetime', 'time');\n    this.cumulDataTable.addColumn('number', 'Trials');\n    this.cumulDataTable.addColumn('number', 'Performance');\n    this.cumulDataTable.addColumn('number', 'RFID');\n    // this.cumulDataTable.addColumn('number', 'Weight');\n\n    this.rxnTimeDataTable.addColumn('string', 'success');\n    this.rxnTimeDataTable.addColumn('number', 'durationMS');\n\n    /**\n     * xyPosDataTable Guide\n     * 0: x\n     * 1: y fix (box)\n     * 2: y sample (box)\n     * 3: y test1 (box) | y same (box)\n     * 4: y test2 (box) | y different (box)\n     * 5: y Fix_reward (dots)\n     * 6: y Fix_punish (dots)\n     * 7: y Target_reward (dots)\n     * 8: y Target_punish (dots)\n     */\n    this.xyPosDataTable.addColumn('number', 'xpos');\n    this.xyPosDataTable.addColumn('number', 'Fixation');\n    this.xyPosDataTable.addColumn('number', 'Sample');\n    this.realtimeDataTable.addColumn('number', 'globalX');\n    this.realtimeDataTable.addColumn('number', 'fixY');\n    this.realtimeDataTable.addColumn('number', 'sampleY');\n\n    if (file.data!.SameDifferent <= 0) {\n      for (let i = 0; i < file.data!.TestGridIndex.length; i++) {\n        this.xyPosDataTable.addColumn('number', `Test${i + 1}`);\n        this.realtimeDataTable.addColumn('number', `testY${i + 1}`);\n      }\n    } else if (file.data!.SameDifferent > 0) {\n      this.xyPosDataTable.addColumn('number', 'Same');\n      this.xyPosDataTable.addColumn('number', 'Different');\n      this.realtimeDataTable.addColumn('number', 'sameY');\n      this.realtimeDataTable.addColumn('number', 'differentY');\n    }\n\n    this.xyPosDataTable.addColumn('number', 'Fix_Reward');\n    this.xyPosDataTable.addColumn('number', 'Fix_Punish');\n    this.xyPosDataTable.addColumn('number', 'Target_Reward');\n    this.xyPosDataTable.addColumn('number', 'Target_Punish');\n\n    this.realtimeDataTable.addColumn('number', 'curY');\n    this.realtimeDataTable.addColumn({ type: 'string', role: 'style' });\n\n    this.rewardDataTable.addColumn('string', 'reard size');\n    this.rewardDataTable.addColumn('number', 'nrewards');\n\n    this.choiceDataTable.addColumn('string', 'choice');\n    this.choiceDataTable.addColumn('number', '# of responses');\n\n    this.objPerfDataTable.addColumn('string', 'object');\n    this.objPerfDataTable.addColumn('number', 'performance');\n\n    this.healthDataTable.addColumn('number', 'trial');\n    this.healthDataTable.addColumn('number', 'sample command');\n    this.healthDataTable.addColumn('number', 'tdisplay_last');\n    this.healthDataTable.addColumn('number', 'tdisplay_first');\n    this.healthDataTable.addColumn('number', 'eye interval');\n\n    this.updatePlots(file, plotOptions);\n  }\n\n  public updatePlots(file: FileType, plotOptions: any) {\n    let fileData: LiveplotDataType;\n    if (!_.isUndefined(file.data)) {\n      fileData = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n    console.log('plot updated');\n    this.loadVitals(file);\n    this.loadVitalsText(file);\n    // console.log('vitals', this.vitals);\n    this.loadPerformanceData(file);\n    this.loadHealthData(fileData);\n    this.loadObjPerfData(fileData);\n    this.loadChoiceData(fileData);\n    this.loadRewardData(fileData);\n    this.drawPerformancePlot(file);\n    this.drawTrialPlot(file);\n    this.drawHealthPlot(file);\n    this.drawObjPerfPlot();\n    this.drawRxnTimePlot();\n    this.drawChoicePlot();\n    this.drawRewardPlot();\n    this.loadTouchSDText();\n    let streamActive = plotOptions.streamActive;\n    this.drawScreenPlot(fileData, streamActive);\n    if (streamActive && !this.realtimePlotActive) {\n      // console.log('hello');\n      this.drawRealtimePlot2(fileData);\n      this.realtimePlotActive = true;\n    }\n  }\n\n  private loadVitals(file: FileType) {\n    let data;\n    if (!_.isUndefined(file.data)) {\n      data = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n\n    this.vitals.subject = data.Subject;\n    this.vitals.trials = data.Response.length;\n\n    // Convert milliseconds to minutes\n    let startTime = data.StartTime;\n    this.vitals.time = _.round(\n      _.round(_.toNumber(_.last(startTime)) - startTime[0]) / 60000\n    );\n\n    /**\n     * RFID Processing\n     * Only supports current data format\n     * file.data.RFIDTag = {\n     *   0: [0, 2020-10-27T19:19:19.999Z, 00782A7E88A4],\n     *   1: [],\n     *   ...\n     * };\n     */\n    let rfidTag = data.RFIDTag;\n    if (!_.isUndefined(rfidTag) && _.size(rfidTag) > 0) {\n      this.vitals.rfidTag = rfidTag[_.size(rfidTag) - 1][2];\n      this.vitals.rfidTime = new Date(\n        rfidTag[_.size(rfidTag) - 1][1]\n      ).toLocaleTimeString('en-US');\n    } else {\n      this.vitals.rfidTag = null;\n      this.vitals.rfidTime = null;\n    }\n\n    // Automator, AutomatorStage, AutomatorStageName\n    if (_.isUndefined(data.Automator)) {\n      this.vitals.automator = null;\n    } else {\n      this.vitals.automator = file.data.Automator;\n    }\n\n    if (_.isUndefined(data.CurrentAutomatorStage)) {\n      this.vitals.automatorStage = null;\n    } else {\n      this.vitals.automatorStage = data.CurrentAutomatorStage;\n    }\n\n    if (_.isUndefined(data.CurrentAutomatorStageName)) {\n      this.vitals.automatorStageName = null;\n    } else {\n      this.vitals.automatorStageName = data.CurrentAutomatorStageName;\n    }\n\n    // Battery, only supports current data format\n    let battery = data.Battery;\n    if (!_.isUndefined(battery) && _.size(battery) > 0) {\n      this.vitals.batteryLeft = _.round(battery[_.size(battery) - 1][2] * 100);\n      this.vitals.batteryUsed = _.round(\n        battery[0][2] * 100 - this.vitals.batteryLeft\n      );\n    } else {\n      this.vitals.batteryLeft = null;\n      this.vitals.batteryUsed = null;\n    }\n\n    // Performance\n    let numCorrect = 0;\n    for (let i = 0; i < _.size(data.CorrectItem); i++) {\n      if (data.CorrectItem[i] == data.Response[i]) {\n        numCorrect++;\n      }\n    }\n\n    this.vitals.numCorrect = numCorrect;\n    this.vitals.pctCorrect = _.round((100 * numCorrect) / data.Response.length);\n\n    if (!_.isUndefined(data.NReward)) {\n      this.vitals.numReward = data.NReward.reduce((a: number, b: number) => {\n        return a + b;\n      }, 0);\n    }\n\n    this.vitals.rewardEstimate = 0;\n    if (!_.isUndefined(data.RewardPer1000Trials)) {\n      this.vitals.rewardEstimate = _.round(\n        (data.RewardPer1000Trials * this.vitals.numReward) / 1000\n      );\n    }\n  }\n\n  private loadVitalsText(file: FileType) {\n    this.elemObject.perfVitals.innerHTML = `${this.vitals.subject}: ${this.vitals.pctCorrect}% (n = ${this.vitals.numCorrect} out of ${this.vitals.trials}, r=${this.vitals.numReward}=${this.vitals.rewardEstimate}mL, ${this.vitals.time} mins)`;\n\n    // TODO: add this.vitals.tagCount data\n    this.elemObject.rfidVitals.innerHTML = `RFID: ${this.vitals.rfidTag} (${this.vitals.rfidTime})`;\n\n    this.elemObject.batteryVitals.innerHTML = `Battery: ${this.vitals.batteryLeft}% (-${this.vitals.batteryUsed}%)`;\n\n    this.elemObject.trialVitals.innerHTML = `Last Trial: ${file.dateSaved!.toLocaleTimeString(\n      'en-US'\n    )}`;\n  }\n\n  private loadTouchSDText() {\n    try {\n      this.screenPlotOptions.title = `Touch Locations -- standard dev: \\n Fixation: ${\n        Math.round(this.vitals.stdevFix * 10) / 10\n      } pixels`;\n      for (let i = 0; i < this.vitals.stdevTest.length; i++) {\n        this.screenPlotOptions.title =\n          this.screenPlotOptions.title +\n          `\\n Target ${i}: ${Math.round(this.vitals.stdevTest[i] * 10) / 10}`;\n      }\n    } catch (err) {\n      console.error('Error loading touch SD text', err);\n    }\n  }\n\n  private loadPerformanceData(file: FileType) {\n    // Typechecking file.data\n    let data;\n    if (!_.isUndefined(file.data)) {\n      data = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n\n    this.perfDataTable.removeRows(0, this.perfDataTable.getNumberOfRows());\n    this.cumulDataTable.removeRows(0, this.cumulDataTable.getNumberOfRows());\n    this.rxnTimeDataTable.removeRows(\n      0,\n      this.rxnTimeDataTable.getNumberOfRows()\n    );\n    this.xyPosDataTable.removeRows(0, this.xyPosDataTable.getNumberOfRows());\n\n    // Create Data Table\n    let xData = [];\n    let yData: number[] = [];\n    let yDataSmall = []; // keeps 5 recent\n    let yDataLarge = []; // keeps 100 recent\n    let numTotal = [];\n    let numCorrect: number[] = [];\n    let tCurrent = [];\n    let numRFID = [];\n    let xPos: number;\n    let yPos: number;\n    let touchevent: number[][] = [];\n    let rt = [];\n\n    // performance\n    for (let i = 0; i < data.CorrectItem.length; i++) {\n      if (data.CorrectItem[i] == data.Response[i]) {\n        yData[i] = 1; // correct\n      } else {\n        yData[i] = 0; // incorrect\n      }\n\n      xData[i] = i;\n\n      // Cumulative trials & correct trials\n      numTotal[i] = xData.length;\n      if (i > 0) {\n        numCorrect[i] = numCorrect[i - 1] + yData[i];\n      } else if (i == 0) {\n        numCorrect[i] = yData[i];\n      }\n    }\n\n    for (let i = 0; i < data.NReward.length; i++) {\n      if (data.RewardStage == 0) {\n        rt[i] = data.FixationXYT[2][i] - data.StartTime[i];\n        this.rxnTimeDataTable.addRows([\n          [file.data.FixationTouchEvent[i], rt[i]],\n        ]);\n      } else if (data.NRSVP > 0) {\n        rt[i] = data.SampleFixationXYT[2][i] - data.SampleStartTime[i];\n        this.rxnTimeDataTable.addRows([\n          [data.SampleFixationTouchEvent[i], rt[i]],\n        ]);\n      } else {\n        rt[i] = data.ResponseXYT[2][i] - data.SampleStartTime[i];\n        if (data.Response[i] == -1) {\n          this.rxnTimeDataTable.addRows([['timeout', data.ChoiceTimeOut]]);\n        } else if (data.CorrectItem[i] == data.Response[i]) {\n          this.rxnTimeDataTable.addRows([['correct', rt[i]]]);\n        } else {\n          this.rxnTimeDataTable.addRows([['wrong', rt[i]]]);\n        }\n      }\n    }\n\n    // console.log(rt);\n\n    /**\n     * Touch XY\n     * Store fixation in odd indices and choice in even\n     * All touchevents. touchevent has a length that is twice the length\n     * of file.data.FixationXYT or file.data.ResponseXYT\n     */\n    if (\n      !_.isUndefined(data.ResponseXYT) &&\n      _.size(data.ResponseXYT) > 0 &&\n      _.size(file.data.ResponseXYT[0]) > 0\n    ) {\n      for (let i = 0; i < _.size(data.FixationXYT[0]) * 2; i += 2) {\n        touchevent[i] = [];\n        touchevent[i + 1] = [];\n        touchevent[i][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i + 1][0] = file.data.ResponseXYT[0][i / 2];\n        touchevent[i][1] = file.data.FixationXYT[1][i / 2];\n        touchevent[i + 1][1] = file.data.ResponseXYT[1][i / 2];\n      }\n    } else {\n      for (let i = 0; i < _.size(data.FixationXYT[0]) * 2; i += 2) {\n        touchevent[i] = [];\n        touchevent[i + 1] = [];\n        touchevent[i][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i + 1][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i][1] = file.data.FixationXYT[1][i / 2];\n        touchevent[i + 1][1] = file.data.FixationXYT[1][i / 2];\n      }\n    }\n\n    // Sample & Test Boxes -- Draw them as a bounding box in the touch plot\n    let numColumnXYPos = this.xyPosDataTable.getNumberOfColumns();\n    let numColRealtime = this.realtimeDataTable.getNumberOfColumns();\n    let sampleWidth = this.getSampleWidth(file.data);\n    let sampleHeight = sampleWidth;\n    let testWidth = this.getTestWidth(file.data);\n    let testHeight = testWidth;\n\n    // Fixation & Choice Boxes\n    let fixationWidth = this.getFixationWidth(file.data, sampleWidth);\n    let fixationHeight = fixationWidth;\n    let choiceWidth = this.getChoiceWidth(file.data);\n    let choiceHeight = choiceWidth;\n\n    /**\n     * NOTE for positioning elements:\n     * grid x, y is offset || fixation & response x, y is not\n     */\n\n    // FIXATION\n    let numDisplayElems = 1;\n    // let xyPosArray = [];\n    let fixX: number;\n    let fixY: number;\n    let maxFixationGridIndex = _.max(file.data.FixationGridIndex);\n    if (_.isNumber(maxFixationGridIndex)) {\n      fixX = file.data.XGridCenter[maxFixationGridIndex];\n      fixY =\n        file.data.ViewportPixels[1] -\n        (file.data.YGridCenter[maxFixationGridIndex] + file.data.offsettop);\n      // console.log('fixY', fixY);\n    } else {\n      throw 'data.FixationGridIndex is not of type number[]';\n    }\n\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX - fixationWidth / 2,\n      1: fixY - fixationHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX + fixationWidth / 2,\n      1: fixY - fixationHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX + fixationWidth / 2,\n      1: fixY + fixationHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX - fixationWidth / 2,\n      1: fixY + fixationHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: fixX - fixationWidth / 2,\n      1: fixY - fixationHeight / 2,\n    });\n\n    if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n      console.log('realtime not active');\n      this.rtData['fixation'] = {\n        x: fixX,\n        y: fixY,\n        width: fixationWidth,\n        height: fixationHeight,\n      };\n    }\n\n    // SAMPLE\n    numDisplayElems = 2;\n    let sampleX: number;\n    let sampleY: number;\n    let maxSampleGridIndex = _.max(data.SampleGridIndex);\n\n    if (data.RewardStage > 0) {\n      if (_.isNumber(maxSampleGridIndex)) {\n        sampleX = data.XGridCenter[maxSampleGridIndex];\n        sampleY =\n          data.ViewportPixels[1] -\n          (data.YGridCenter[maxSampleGridIndex] + data.offsettop);\n      } else {\n        throw 'data.SampleGridIndex is not of type number[]';\n      }\n    } else {\n      sampleX = fixX;\n      sampleY = fixY;\n    }\n\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX - sampleWidth / 2,\n      2: sampleY - sampleHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX + sampleWidth / 2,\n      2: sampleY - sampleHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX + sampleWidth / 2,\n      2: sampleY + sampleHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX - sampleWidth / 2,\n      2: sampleY + sampleHeight / 2,\n    });\n    this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n      0: sampleX - sampleWidth / 2,\n      2: sampleY - sampleHeight / 2,\n    });\n\n    if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n      this.rtData['sample'] = {\n        x: sampleX,\n        y: sampleY,\n        width: sampleWidth,\n        height: sampleHeight,\n      };\n    }\n\n    // TEST:\n    let testX: number[] = [];\n    let testY: number[] = [];\n\n    if (data.RewardStage != 0) {\n      for (let i = 0; i < _.size(data.TestGridIndex); i++) {\n        // If Same-Different, only show the first test\n        if (data.SameDifferent > 0 || data.NRSVP > 0) {\n          break;\n        }\n\n        numDisplayElems++;\n        if (data.NRSVP > 0) {\n          testX.push(data.XGridCenter[maxSampleGridIndex as number]);\n          testY.push(\n            data.ViewportPixels[1] -\n              (data.YGridCenter[maxSampleGridIndex as number] + data.offsettop)\n          );\n        } else {\n          testX.push(data.XGridCenter[data.TestGridIndex[i]]);\n          testY.push(\n            data.ViewportPixels[1] -\n              (data.YGridCenter[data.TestGridIndex[i]] + data.offsettop)\n          );\n        }\n\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] - testWidth / 2,\n          [numDisplayElems]: testY[i] - testHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] + testWidth / 2,\n          [numDisplayElems]: testY[i] - testHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] + testWidth / 2,\n          [numDisplayElems]: testY[i] + testHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] - testWidth / 2,\n          [numDisplayElems]: testY[i] + testHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: testX[i] - testWidth / 2,\n          [numDisplayElems]: testY[i] - testHeight / 2,\n        });\n\n        if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n          let tmp = {\n            x: testX[i],\n            y: testY[i],\n            width: testWidth,\n            height: testHeight,\n          };\n          this.rtData['test'].push(tmp);\n        }\n      }\n    }\n\n    // CHOICE:\n    let choiceX: number[] = [];\n    let choiceY: number[] = [];\n\n    if (data.RewardStage != 0 && data.SameDifferent > 0) {\n      for (let i = 0; i < _.size(data.ChoiceGridIndex); i++) {\n        numDisplayElems++;\n        choiceX.push(data.XGridCenter[data.ChoiceGridIndex[i]]);\n        choiceY.push(\n          data.ViewportPixels[1] -\n            (data.YGridCenter[data.ChoiceGridIndex[i]] + data.offsettop)\n        );\n\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] - choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] - choiceHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] + choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] - choiceHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] + choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] + choiceHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] - choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] + choiceHeight / 2,\n        });\n        this.generateAndAddRowData(this.xyPosDataTable, numColumnXYPos, {\n          0: choiceX[i] - choiceWidth / 2,\n          [numDisplayElems]: choiceY[i] - choiceHeight / 2,\n        });\n\n        // realtime not active\n        if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n          this.rtData['choice'].push({\n            x: choiceX[i],\n            y: choiceY[i],\n            width: choiceWidth,\n            height: choiceHeight,\n          });\n        }\n      }\n    }\n    this.realtimeRowDataAdded = true;\n\n    let fixXPos: number[] = [];\n    let fixYPos: number[] = [];\n    let testXPos: number[][] = [];\n    let testYPos: number[][] = [];\n    let numTarget = [0, 0];\n\n    for (let i = 0; i < touchevent.length; i++) {\n      xPos = touchevent[i][0];\n      yPos = data.ViewportPixels[1] - touchevent[i][1];\n\n      let yDataIndex: number;\n      if (i % 2 == 0) {\n        yDataIndex = i / 2;\n      } else {\n        yDataIndex = (i - 1) / 2;\n      }\n\n      if (xPos != -1) {\n        let arr = new Array(numColumnXYPos);\n        arr[0] = xPos;\n\n        if (i % 2 == 0) {\n          fixXPos.push(xPos);\n          fixYPos.push(yPos);\n\n          if (yData[yDataIndex] == 1) {\n            arr[numDisplayElems + 1] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          } else {\n            arr[numDisplayElems + 2] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          }\n        } else {\n          let testXPosArr: number[] = [];\n          let testYPosArr: number[] = [];\n\n          for (let j = 0; j < _.size(data.TestGridIndex); j++) {\n            if (data.Response[yDataIndex] == j) {\n              testXPosArr.push(xPos);\n              testYPosArr.push(yPos);\n              numTarget[j] += 1;\n            } else {\n              testXPosArr.push(0);\n              testYPosArr.push(0);\n            }\n\n            testXPos.push(testXPosArr);\n            testYPos.push(testYPosArr);\n          }\n\n          if (yData[yDataIndex] == 1) {\n            arr[numDisplayElems + 3] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          } else {\n            arr[numDisplayElems + 4] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          }\n        }\n      }\n\n      let meanFixXPos = _.mean(fixXPos);\n      let meanFixYPos = _.mean(fixYPos);\n      let distFixXPos = fixXPos.map((a: number) => {\n        return Math.pow(Math.abs(a - meanFixXPos), 2);\n      });\n      let distFixYPos = fixYPos.map((a: number) => {\n        return Math.pow(Math.abs(a - meanFixYPos), 2);\n      });\n      let stdevFix =\n        distFixXPos\n          .map((a: number, idx: number) => {\n            return Math.sqrt(a + distFixYPos[idx]);\n          })\n          .reduce((a: number, b: number) => {\n            return a + b;\n          }, 0) / _.size(distFixXPos);\n      this.vitals.stdevFix = stdevFix;\n\n      let stdevTest: number[] = [];\n      for (let j = 0; j < _.size(data.TestGridIndex); j++) {\n        let allTestXPos = testXPos\n          .map((a: number[]) => {\n            return a[j];\n          })\n          .filter((a: number) => {\n            return a != 0;\n          });\n\n        let meanTestXPos =\n          allTestXPos.reduce((a: number, b: number) => {\n            return a + b;\n          }, 0) / _.size(allTestXPos);\n\n        let distTestXPos = allTestXPos.map((a: number) => {\n          return Math.pow(Math.abs(a - meanTestXPos), 2);\n        });\n\n        let allTestYPos = testYPos\n          .map((a: number[]) => {\n            return a[j];\n          })\n          .filter((a: number) => {\n            return a != 0;\n          });\n\n        let meanTestYPos =\n          allTestYPos.reduce((a: number, b: number) => {\n            return a + b;\n          }, 0) / _.size(allTestYPos);\n\n        let distTestYPos = allTestYPos.map((a: number) => {\n          return Math.pow(Math.abs(a - meanTestYPos), 2);\n        });\n\n        stdevTest.push(\n          distTestXPos\n            .map((a: number, i: number) => {\n              return Math.sqrt(a + distTestYPos[i]);\n            })\n            .reduce((a: number, b: number) => {\n              return a + b;\n            }, 0) / _.size(allTestXPos)\n        );\n      }\n      this.vitals.stdevTest = stdevTest;\n    }\n\n    yDataSmall = utils.smooth(yData, 5);\n    yDataLarge = utils.smooth(yData, 100);\n\n    // Calculate timeEnd\n    let timeEnd: number;\n    if (\n      _.isUndefined(data.ResponseXYT) ||\n      _.size(data.ResponseXYT) < 1 ||\n      _.isUndefined(data.ResponseXYT[2][_.size(data.ResponseXYT[2]) - 1])\n    ) {\n      timeEnd = data.FixationXYT[2][_.size(data.FixationXYT[2]) - 1];\n    } else {\n      timeEnd = data.ResponseXYT[2][_.size(data.ResponseXYT[2]) - 1];\n    }\n\n    // RFID\n    let numTrials = _.size(yData);\n    let numReads = _.size(data.RFIDTag);\n    numRFID = _.fill(Array(numTrials), 0);\n    this.vitals.tagCount = {};\n\n    for (let i = 0; i < numReads; i++) {\n      if (_.isUndefined(this.vitals.tagCount[data.RFIDTag[i][2]])) {\n        this.vitals.tagCount[data.RFIDTag[i][2]] = 0;\n      }\n      this.vitals.tagCount[data.RFIDTag[i][2]] += 1;\n      numRFID[data.RFIDTag[i][0]] += 1;\n    }\n\n    for (let i = 1; i < _.size(numRFID); i++) {\n      numRFID[i] = numRFID[i] + numRFID[i - 1];\n    }\n\n    // Adding rest of the data\n    for (let i = 0; i < _.size(yData); i++) {\n      let timeFix = data.FixationXYT[2][i]; // in milliseconds\n      if (timeFix < 0) {\n        continue;\n      }\n\n      let t = new Date(file.dateSaved!);\n      t.setTime(t.getTime() - (timeEnd - timeFix));\n\n      this.perfDataTable.addRows([[xData[i], yDataSmall[i], yDataLarge[i]]]);\n      this.cumulDataTable.addRows([\n        [t, numTotal[i], numCorrect[i], numRFID[i]],\n      ]);\n    }\n    this.formatDate(this.cumulDataTable, 0);\n  }\n\n  private generateAndAddRowData(\n    target: google.visualization.DataTable,\n    numColumns: number,\n    data: Record<number, number | string>\n  ) {\n    // console.log('data', data);\n    let arr = [];\n    for (let i = 0; i < numColumns; i++) {\n      if (_.has(data, i)) {\n        arr.push(data[i]);\n      } else {\n        arr.push(null);\n      }\n    }\n    // console.log('arr:', arr);\n    target.addRows([arr]);\n  }\n\n  // TODO: deal with case where SampleScenes[0].OBJECTS[firstKey].sizeInches is an\n  // Array of arrays -- i.e. scene movie\n  private getSampleWidth(fileData: LiveplotDataType) {\n    let sampleWidth = 0;\n    if (_.size(fileData.SampleScenes[0].IMAGES.imageidx) > 0) {\n      if (_.isArray(fileData.SampleScenes[0].IMAGES.sizeInches)) {\n        let maxSizeInches = _.max(fileData.SampleScenes[0].IMAGES.sizeInches);\n        if (_.isNumber(maxSizeInches)) {\n          sampleWidth = maxSizeInches * fileData.ViewportPPI;\n        }\n      } else {\n        console.error(\n          'SampleScenes[0].IMAGES.sizeInches is not an array. Please fix!'\n        );\n        sampleWidth =\n          fileData.SampleScenes[0].IMAGES.sizeInches * fileData.ViewportPPI;\n      }\n    } else {\n      let firstKey = _.findKey(fileData.SampleScenes[0].OBJECTS);\n      if (_.isString(firstKey)) {\n        let maxSizeInches = _.max(\n          fileData.SampleScenes[0].OBJECTS[firstKey].sizeInches\n        );\n        if (_.isNumber(maxSizeInches)) {\n          sampleWidth = maxSizeInches * fileData.ViewportPPI;\n        }\n      } else {\n        console.error(\n          'firstKey of SampleScenes[0].OBJECTS is not of type string'\n        );\n      }\n    }\n    return sampleWidth;\n  }\n\n  private getTestWidth(fileData: LiveplotDataType) {\n    let testWidth = 0;\n\n    if (fileData.TestScenes[0].IMAGES.imageidx.length > 0) {\n      if (_.isArray(fileData.TestScenes[0].IMAGES.sizeInches)) {\n        let maxSizeInches = _.max(fileData.TestScenes[0].IMAGES.sizeInches);\n        if (_.isNumber(maxSizeInches)) {\n          testWidth = maxSizeInches * fileData.ViewportPPI;\n        } else {\n          console.error(\n            'TestScenes[0].IMAGES.sizeInches is not of type number'\n          );\n        }\n      } else {\n        console.error(\n          'TestScenes[0].IMAGES.sizeInches is not an array. Please fix!'\n        );\n        testWidth =\n          fileData.TestScenes[0].IMAGES.sizeInches * fileData.ViewportPPI;\n      }\n    } else {\n      let firstKey = _.findKey(fileData.TestScenes[0].OBJECTS);\n      if (_.isString(firstKey)) {\n        let maxSizeInches = _.max(\n          fileData.TestScenes[0].OBJECTS[firstKey].sizeInches\n        );\n        if (_.isNumber(maxSizeInches)) {\n          testWidth = maxSizeInches * fileData.ViewportPPI;\n        } else {\n          console.error(\n            'firstKey of TestScenes[0].OBJECTS is not of type string'\n          );\n        }\n      }\n    }\n\n    if (!_.isUndefined(fileData.NRSVP) && fileData.NRSVP > 0) {\n      testWidth = fileData.SampleFixationSizeInches * fileData.ViewportPPI;\n    }\n\n    return testWidth;\n  }\n\n  private getFixationWidth(fileData: LiveplotDataType, sampleWidth: number) {\n    let fixationWidth = 0;\n\n    if (fileData.FixationUsesSample <= 0) {\n      fixationWidth = fileData.FixationSizeInches * fileData.ViewportPPI;\n    } else {\n      fixationWidth = sampleWidth;\n    }\n    return fixationWidth;\n  }\n\n  private getChoiceWidth(fileData: LiveplotDataType) {\n    let choiceWidth = 0;\n    if (!_.isUndefined(fileData.SameDifferent) && fileData.SameDifferent > 0) {\n      choiceWidth = fileData.ChoiceSizeInches * fileData.ViewportPPI;\n    }\n    return choiceWidth;\n  }\n\n  private loadObjPerfData(data: LiveplotDataType) {\n    this.objPerfDataTable.removeRows(\n      0,\n      this.objPerfDataTable.getNumberOfRows()\n    );\n\n    let lenSampleObj: number;\n    if (data.RewardStage == 1) {\n      let sampleObj = [];\n      if (data.NTrialsPerBagBlock > 5000) {\n        sampleObj.push(data.ImageBagsSample[0].split('/')[5]);\n        this.objPerfDataTable.addRow([sampleObj[0], 0]);\n        lenSampleObj = 1;\n      } else {\n        for (let i = 0; i < _.size(data.ImageBagsSample); i++) {\n          sampleObj.push(data.ImageBagsSample[i].split('/')[5]);\n          this.objPerfDataTable.addRow([sampleObj[i], 0]);\n        }\n        lenSampleObj = _.size(sampleObj);\n      }\n\n      let NDiffObjPerf = _.fill(Array(lenSampleObj), 0);\n      let NDiffObj = _.fill(Array(lenSampleObj), 0);\n      for (let i = 0; i < _.size(data.Sample[0]); i++) {\n        // For i trials\n        for (let j = 0; j < lenSampleObj; j++) {\n          // If sample was that object\n          if (data.SampleBagIdx[data.Sample[0][i]] == j) {\n            NDiffObj[j] += 1;\n            // If correct\n            if (data.Response[i] == data.CorrectItem[i]) {\n              NDiffObjPerf[j] += 1;\n            }\n          }\n          this.objPerfDataTable.setValue(j, 1, NDiffObjPerf[j] / NDiffObj[j]);\n        }\n      }\n    }\n  }\n\n  private loadChoiceData(data: LiveplotDataType) {\n    this.choiceDataTable.removeRows(0, this.choiceDataTable.getNumberOfRows());\n\n    if (data.RewardStage != 0) {\n      // let possibleResp = _.fill(Array(_.size(data.ObjectGridIndex)), 0);\n      let possibleResp = [];\n\n      if (\n        _.size(data.ObjectGridIndex) != 0 &&\n        (_.isUndefined(data.NTrialsPerBagBlock) ||\n          data.NTrialsPerBagBlock < 1000)\n      ) {\n        let objGridIndex = _.cloneDeep(data.ObjectGridIndex);\n        objGridIndex.sort((a: number, b: number) => {\n          return a - b;\n        });\n        let allind = [];\n        for (let i = 0; i < _.size(objGridIndex); i++) {\n          // allind.push(_.findIndex(data.ObjectGridIndex, objGridIndex[i]));\n          allind.push(data.ObjectGridIndex.indexOf(objGridIndex[i]));\n          this.choiceDataTable.addRow([\n            data.ImageBagsSample[allind[i]].split('/')[5],\n            0,\n          ]);\n          possibleResp.push(i);\n        }\n      } else {\n        for (let i = 0; i < _.size(data.TestGridIndex); i++) {\n          this.choiceDataTable.addRow(['choice' + (i + 1), 0]);\n          possibleResp.push(i);\n        }\n      }\n\n      let NDiffChoice = _.fill(Array(_.size(possibleResp)), 0);\n      let NAllChoice = 0;\n\n      for (let i = 0; i < _.size(data.Response); i++) {\n        if (data.Response[i] != -1) {\n          NAllChoice++;\n        }\n\n        for (let j = 0; j < _.size(possibleResp); j++) {\n          if (data.Response[i] == possibleResp[j] && data.Response[i] != -1) {\n            NDiffChoice[j]++;\n          }\n          this.choiceDataTable.setValue(j, 1, NDiffChoice[j] / NAllChoice);\n        }\n      }\n    } else {\n      this.choiceDataTable.addRow(['outside Fix', 0]);\n      this.choiceDataTable.addRow(['inside Fix', 0]);\n\n      let NDiffChoice = _.fill(Array(2), 0);\n      let NAllChoice = 0;\n      let yData = [];\n\n      for (let i = 0; i < _.size(data.CorrectItem); i++) {\n        if (data.CorrectItem[i] == data.Response[i]) {\n          yData.push(1);\n        } else {\n          yData.push(0);\n        }\n      }\n\n      for (let i = 0; i < _.size(yData); i++) {\n        NAllChoice++;\n\n        for (let j = 0; j < 2; j++) {\n          if (yData[i] == j) {\n            NDiffChoice[j] += 1;\n          }\n          this.choiceDataTable.setValue(j, 1, NDiffChoice[j] / NAllChoice);\n        }\n      }\n    }\n  }\n\n  private loadRewardData(data: LiveplotDataType) {\n    this.rewardDataTable.removeRows(0, this.rewardDataTable.getNumberOfRows());\n    let NRewardMax = [];\n    for (let i = 0; i < data.NRewardMax; i++) {\n      NRewardMax.push(i.toString());\n    }\n    // NRewardMax.unshift('-1');\n\n    for (let i = 0; i < _.size(NRewardMax); i++) {\n      this.rewardDataTable.addRow([NRewardMax[i], 0]);\n    }\n\n    let NDiffReward = _.fill(Array(_.size(NRewardMax)), 0);\n\n    for (let i = 0; i < _.size(data.NReward); i++) {\n      if (data.Response[i] == -1) {\n        NDiffReward[0]++;\n        this.rewardDataTable.setValue(\n          0,\n          1,\n          NDiffReward[0] / _.size(data.NReward)\n        );\n      } else {\n        for (let j = 1; j < _.size(NRewardMax); j++) {\n          if (data.NReward[i].toString() == NRewardMax[j]) {\n            NDiffReward[j]++;\n          }\n          this.rewardDataTable.setValue(\n            j,\n            1,\n            NDiffReward[j] / _.size(data.NReward)\n          );\n        }\n      }\n    }\n  }\n\n  private loadHealthData(data: LiveplotDataType) {\n    // console.log('[loadHealthData::fileData]', data);\n    this.healthDataTable.removeRows(0, this.healthDataTable.getNumberOfRows());\n\n    if (data.RewardStage > 0) {\n      const lastIdx = Object.keys(data.TSequenceActualClip).length - 1;\n\n      for (let i = 0; i < data.TSequenceActualClip[lastIdx].length; i++) {\n        let dt: any;\n        let dt2: any;\n        let sampleCmdInterval: any;\n        let eyeTrackerSampleInterval: any;\n\n        try {\n          if (data.TSequenceActualClip[lastIdx][i] < 0) {\n            dt = null;\n          } else {\n            dt =\n              data.TSequenceActualClip[lastIdx][i] -\n              data.TSequenceDesiredClip[lastIdx][i];\n            dt = Math.abs(Math.round(dt));\n          }\n        } catch {\n          dt = null;\n        }\n\n        try {\n          if (data.TSequenceActualClip[1][i] < 0) {\n            dt2 = null;\n          } else {\n            dt2 =\n              data.TSequenceActualClip[1][i] - data.TSequenceDesiredClip[1][i];\n            dt2 = Math.abs(Math.round(dt2));\n          }\n        } catch {\n          dt2 = null;\n        }\n\n        try {\n          if (\n            data.SampleCommandReturnTime[i] == null ||\n            data.SampleCommandReturnTime[i] < 0 ||\n            data.SampleCommandReturnTime[i] === undefined\n          ) {\n            sampleCmdInterval = null;\n          } else {\n            sampleCmdInterval =\n              data.SampleCommandReturnTime[i] - data.SampleStartTime[i];\n          }\n        } catch {\n          sampleCmdInterval = null;\n        }\n\n        try {\n          eyeTrackerSampleInterval = data.EyetrackerSampleInterval[i];\n        } catch {\n          eyeTrackerSampleInterval = null;\n        }\n\n        this.healthDataTable.addRows([\n          [i, sampleCmdInterval, dt, dt2, eyeTrackerSampleInterval],\n        ]);\n      }\n    }\n\n    // if (data.Eye.TrackEye > 0 && data.RewardStage > 0) {\n    //   // EYETRACKING\n    //   let lastIdx = Object.keys(data.TSequenceActualClip).length - 1;\n\n    //   for (let i = 0; i < data.TSequenceActualClip[lastIdx].length; i++) {\n    //     let dt: any;\n    //     let dt2: any;\n\n    //     if (data.TSequenceActualClip[lastIdx][i] < 0) {\n    //       dt = null;\n    //     } else {\n    //       dt =\n    //         data.TSequenceActualClip[lastIdx][i] -\n    //         data.TSequenceDesiredClip[lastIdx][i];\n    //       dt = Math.abs(Math.round(dt));\n    //     }\n\n    //     if (data.TSequenceActualClip[1][i] < 0) {\n    //       dt2 = null;\n    //     } else {\n    //       dt2 =\n    //         data.TSequenceActualClip[1][i] - data.TSequenceDesiredClip[1][i];\n    //       dt2 = Math.abs(Math.round(dt2));\n    //     }\n\n    //     let sampleCmdInterval: any;\n    //     if (\n    //       data.SampleCommandReturnTime[i] == null ||\n    //       data.SampleCommandReturnTime[i] < 0 ||\n    //       data.SampleCommandReturnTime[i] === undefined\n    //     ) {\n    //       sampleCmdInterval = null;\n    //     } else {\n    //       sampleCmdInterval =\n    //         data.SampleCommandReturnTime[i] - data.SampleStartTime[i];\n    //     }\n\n    //     this.healthDataTable.addRows([\n    //       [i, sampleCmdInterval, dt, dt2, data.EyetrackerSampleInterval[i]],\n    //     ]);\n    //   }\n    // } else if (data.Eye.TrackEye == 0 && data.RewardStage > 0) {\n    //   let lastIdx = Object.keys(data.TSequenceActualClip).length - 1;\n    //   for (let i = 0; i < data.TSequenceActualClip[lastIdx].length; i++) {\n    //     let dt =\n    //       data.TSequenceActualClip[lastIdx][i] -\n    //       data.TSequenceDesiredClip[lastIdx][i];\n    //     dt = Math.abs(Math.round(dt));\n\n    //     let dt2 =\n    //       data.TSequenceActualClip[1][i] - data.TSequenceDesiredClip[1][i];\n    //     dt2 = Math.abs(Math.round(dt2));\n    //     this.healthDataTable.addRows([[i, null, dt, dt2, null]]);\n    //   }\n    // }\n  }\n\n  private drawPerformancePlot(file: FileType) {\n    let numRows = this.perfDataTable.getNumberOfRows();\n    this.nTrials = numRows;\n    let perfFilterState: any = this.perfFilter.getState();\n\n    // updating perfFilter\n    if (file.dataChanged && !file.fileChanged) {\n      if (numRows <= 100) {\n        // expand window size automatically up to 100\n        perfFilterState.range.start = 0;\n        perfFilterState.range.end = numRows;\n      } else {\n        let dTrials = numRows - _.size(file.data?.FixationGridIndex);\n        console.log('dtrials', dTrials);\n        perfFilterState.range.start = numRows - 100;\n        perfFilterState.range.end = numRows;\n      }\n    } else if (file.fileChanged) {\n      let dSlider = 100;\n      perfFilterState.range.start = numRows - dSlider;\n      perfFilterState.range.end = numRows;\n      if (perfFilterState.range.start < 0) {\n        perfFilterState.range.start = 0;\n      }\n    }\n\n    this.perfPlot.setOptions(this.perfPlotOptions);\n    this.perfFilter.setState({\n      range: {\n        start: perfFilterState.range.start,\n        end: perfFilterState.range.end,\n      },\n    });\n    this.perfDashboard.draw(this.perfDataTable);\n  }\n\n  private drawHealthPlot(file: FileType) {\n    let numRows = this.healthDataTable.getNumberOfRows();\n    // console.log('[drawHealthPlot::numRows]:', numRows);\n    let healthFilterState: any = this.healthFilter.getState();\n    // console.log('[drawHealthPlot::healthFilterState]:', healthFilterState);\n\n    if (file.dataChanged && !file.fileChanged) {\n      if (numRows <= 100) {\n        healthFilterState.range.start = 0;\n        healthFilterState.range.end = numRows;\n      } else {\n        healthFilterState.range.start = numRows - 100;\n        healthFilterState.range.end = numRows;\n      }\n    } else if (file.fileChanged) {\n      let dSlider = 100;\n      healthFilterState.range.start = numRows - dSlider;\n      healthFilterState.range.end = numRows;\n      if (healthFilterState.range.start < 0) {\n        healthFilterState.range.start = 0;\n      }\n    }\n\n    this.healthPlot.setOptions(this.healthPlotOptions);\n    this.healthFilter.setState({\n      range: {\n        start: healthFilterState.range.start,\n        end: healthFilterState.range.end,\n      },\n    });\n    this.healthDashboard.draw(this.healthDataTable);\n  }\n\n  private drawTrialPlot(file: FileType) {\n    let trialFilterState: any = this.trialFilter.getState();\n    let tmin = new Date(this.cumulDataTable.getColumnRange(0).min);\n    let tmax = new Date(this.cumulDataTable.getColumnRange(0).max);\n\n    if (file.dataChanged || file.fileChanged) {\n      trialFilterState.range.start = tmin;\n      trialFilterState.range.end = tmax;\n    }\n\n    this.trialFilter.setState({\n      range: {\n        start: trialFilterState.range.start,\n        end: trialFilterState.range.end,\n      },\n    });\n    this.trialPlot.setOptions(this.trialPlotOptions);\n    this.trialDashboard.draw(this.cumulDataTable);\n  }\n\n  private drawObjPerfPlot() {\n    this.objPerfPlot.draw(this.objPerfDataTable, this.objPerfPlotOptions);\n  }\n\n  private drawRxnTimePlot() {\n    this.rxnPlot.draw(this.rxnTimeDataTable, this.rxnPlotOptions);\n  }\n\n  private drawChoicePlot() {\n    this.choicePlot.draw(this.choiceDataTable, this.choicePlotOptions);\n  }\n\n  private drawRewardPlot() {\n    this.rewardPlot.draw(this.rewardDataTable, this.rewardPlotOptions);\n  }\n\n  private drawRealtimePlot(data: LiveplotDataType) {\n    let idx = 0;\n    this.realtimePlotOptions = {\n      seriesType: 'scatter',\n      width: data.workspace[2] * data.CanvasRatio,\n      height: data.ViewportPixels[1] - data.offsettop,\n      legend: {\n        position: 'top',\n      },\n      hAxis: {\n        title: 'X position (px)',\n        viewWindow: {\n          min: 0,\n          max: data.workspace[2] * data.CanvasRatio,\n        },\n      },\n      vAxis: {\n        title: 'Y position (px)',\n        viewWindow: {\n          min: 0,\n          max: data.ViewportPixels[1] - data.offsettop,\n        },\n      },\n    };\n    this.realtimePlotOptions.hAxis = {\n      title: 'X position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.workspace[2] * data.CanvasRatio,\n      },\n    };\n    this.realtimePlotOptions.vAxis = {\n      title: 'Y position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[1] - data.offsettop,\n      },\n    };\n    let numCol = this.realtimeDataTable.getNumberOfColumns();\n    this.generateAndAddRowData(this.realtimeDataTable, numCol, {\n      0: 0,\n      [numCol - 2]: 0,\n    });\n    let numRows = this.realtimeDataTable.getNumberOfRows();\n\n    this.realtimePlotConfig = {\n      chartType: 'ComboChart',\n      containerId: 'realtime-plot',\n      options: this.realtimePlotOptions,\n    };\n    this.realtimePlot = new google.visualization.ChartWrapper(\n      this.realtimePlotConfig\n    );\n    this.realtimePlot.setDataTable(this.realtimeDataTable);\n    window.addEventListener('data_arrived', (evt: CustomEventInit) => {\n      if (idx % 2 == 0) {\n        this.realtimeDataTable.setValue(\n          numRows - 1,\n          0,\n          Math.floor(evt.detail.x)\n        );\n        this.realtimeDataTable.setValue(\n          numRows - 1,\n          numCol - 2,\n          Math.floor(evt.detail.y)\n        );\n        this.realtimePlot.draw();\n      }\n    });\n  }\n\n  private drawStaticElements(\n    cvs: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null,\n    data: LiveplotDataType,\n    evt: CustomEventInit\n  ) {\n    if (ctx) {\n      ctx.fillStyle = 'gray';\n      ctx.fillRect(\n        0,\n        0,\n        data.workspace[2] * data.CanvasRatio,\n        data.ViewportPixels[1] - data.offsettop\n      );\n\n      for (let idx in evt.detail.boundingBoxes) {\n        let width =\n          evt.detail.boundingBoxes[idx]['x_1'] -\n          evt.detail.boundingBoxes[idx]['x_0'];\n        let height =\n          evt.detail.boundingBoxes[idx]['y_1'] -\n          evt.detail.boundingBoxes[idx]['y_0'];\n        ctx.beginPath();\n        ctx.rect(\n          _.floor(evt.detail.boundingBoxes[idx]['x_0']),\n          _.floor(cvs.height - evt.detail.boundingBoxes[idx]['y_0']),\n          width,\n          -height\n        );\n        ctx.stroke();\n      }\n    }\n    // if (ctx) {\n    //   ctx.fillStyle = 'gray';\n    //   ctx.fillRect(\n    //     0,\n    //     0,\n    //     data.workspace[2] * data.CanvasRatio,\n    //     data.ViewportPixels[1] - data.offsettop\n    //   );\n\n    //   // Fixation\n    //   if (data.FixationUsesSample < 1) {\n    //     ctx.strokeStyle = '#0000FF';\n    //     ctx.beginPath();\n    //     ctx.arc(\n    //       this.rtData.fixation.x,\n    //       cvs.height - this.rtData.fixation.y,\n    //       this.rtData.fixation.width / 2,\n    //       0,\n    //       Math.PI * 2,\n    //       true\n    //     );\n    //     ctx.stroke();\n    //   }\n\n    //   // Sample\n    //   ctx.strokeStyle = '#000000'; // black\n    //   ctx.beginPath();\n    //   ctx.rect(\n    //     this.rtData.sample.x - this.rtData.sample.width / 2,\n    //     cvs.height - (this.rtData.sample.y + this.rtData.sample.height / 2),\n    //     this.rtData.sample.width,\n    //     this.rtData.sample.height\n    //   );\n    //   ctx.stroke();\n\n    //   // Test\n    //   for (let i = 0; i < _.size(this.rtData['test']); i++) {\n    //     console.log('test');\n    //     ctx.beginPath();\n    //     ctx.rect(\n    //       this.rtData['test'][i].x - this.rtData['test'][i].width / 2,\n    //       cvs.height - (this.rtData['test'][i].y + this.rtData['test'][i].height / 2),\n    //       this.rtData['test'][i].width,\n    //       this.rtData['test'][i].height\n    //     );\n    //     ctx.stroke();\n    //   }\n\n    //   // Choice\n    //   for (let i = 0; i < _.size(this.rtData['choice']); i++) {\n    //     ctx.beginPath();\n    //     ctx.rect(\n    //       this.rtData['choice'][i].x - this.rtData['choice'][i].width / 2,\n    //       cvs.height - (this.rtData['choice'][i].y + this.rtData['choice'][i].height / 2),\n    //       this.rtData['choice'][i].width,\n    //       this.rtData['choice'][i].height\n    //     );\n    //     ctx.stroke();\n    //   }\n\n    //   let fixWinSz = data.FixationWindowSizeInches;\n\n    //   if (_.isNumber(fixWinSz) && fixWinSz > 0) {\n    //     ctx.strokeStyle = '#FFFF00'; // yellow\n    //     ctx.strokeRect(\n    //       this.rtData.fixation.x - _.floor(fixWinSz / 2 * data.ViewportPPI),\n    //       cvs.height\n    //       - (this.rtData.fixation.y + _.floor(fixWinSz / 2 * data.ViewportPPI)),\n    //       _.floor(fixWinSz * data.ViewportPPI),\n    //       _.floor(fixWinSz * data.ViewportPPI)\n    //     );\n    //   }\n    // }\n  }\n\n  private drawRealtimePlot2(data: LiveplotDataType) {\n    let cvs = document.querySelector('#realtime-canvas') as HTMLCanvasElement;\n    cvs.width = data.workspace[2] * data.CanvasRatio;\n    cvs.height = data.ViewportPixels[1] - data.offsettop;\n    let ctx = cvs.getContext('2d') as CanvasRenderingContext2D;\n    window.addEventListener('data_arrived', (evt: CustomEventInit) => {\n      if (evt.detail.meta == 2) {\n        this.drawStaticElements(cvs, ctx, data, evt);\n      }\n\n      if (evt.detail.meta == 1) {\n        ctx.fillStyle = 'green';\n      } else if (evt.detail.meta == 0) {\n        ctx.fillStyle = 'red';\n      }\n\n      ctx?.beginPath();\n      let x = _.floor(evt.detail.x);\n      let y = _.floor(cvs.height - evt.detail.y);\n      ctx?.arc(x, y, 2, 0, Math.PI * 2, true);\n      ctx?.fill();\n    });\n  }\n\n  private drawScreenPlot(data: LiveplotDataType, screenActive: boolean) {\n    this.screenPlotOptions.series = [];\n    for (let i = 0; i < this.xyPosDataTable.getNumberOfColumns(); i++) {\n      if (this.xyPosDataTable.getColumnLabel(i) == 'Fixation') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'gray' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Sample') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'black' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Same') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'green' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Different') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'red' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Fix_Reward') {\n        this.screenPlotOptions.series[i - 1] = { color: 'blue' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Fix_Punish') {\n        this.screenPlotOptions.series[i - 1] = { color: 'red' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Target_Reward') {\n        this.screenPlotOptions.series[i - 1] = { color: 'green' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Target_Punish') {\n        this.screenPlotOptions.series[i - 1] = { color: 'black' };\n      } else if (this.xyPosDataTable.getColumnLabel(i).includes('Test')) {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'black' };\n      }\n    }\n\n    this.screenPlotOptions.height = data.ViewportPixels[1];\n    this.screenPlotOptions.width = data.ViewportPixels[0];\n    this.screenPlotOptions.hAxis = {\n      title: 'X position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[0],\n      },\n    };\n    this.screenPlotOptions.vAxis = {\n      title: 'Y position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[1],\n      },\n    };\n    if (!this.realtimePlotActive) {\n      this.screenPlot.draw(this.xyPosDataTable, this.screenPlotOptions);\n    }\n  }\n\n  private formatDate(\n    data: google.visualization.DataTable,\n    colIdx: number\n  ): void {\n    let formatter = new google.visualization.DateFormat({\n      pattern: 'h aa',\n    });\n    formatter.format(data, colIdx);\n  }\n\n  private formatNumber(data: google.visualization.DataTable, colIdx: number) {\n    let formatter = new google.visualization.NumberFormat({\n      fractionDigits: 2,\n    });\n    formatter.format(data, colIdx);\n  }\n\n  private formatColor(data: google.visualization.DataTable, colIdx: number) {\n    let formatter = new google.visualization.ColorFormat();\n    let dx = 1 / (colorMapJet.length - 1);\n    for (let i = 0; i < colorMapJet.length; i++) {\n      formatter.addRange(i * dx, (i + 1) * dx, 'gray', colorMapJet[i]);\n    }\n    formatter.format(data, colIdx);\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport JSONEditor from 'jsoneditor';\nimport _ from 'lodash';\n// import 'jsoneditor/dist/jsoneditor.css'\n// import './jsoneditor.css';\nimport { Utils } from './utils';\nimport { Charts } from './charts';\nimport { FileType, LiveplotDataType } from './types';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\nconst rtdb = firebase.database();\n\nconst DATA_PATH = 'mkturkfiles/datafiles/'\nconst DATA_REF = storageRef.child(DATA_PATH);\nconst PARAM_PATH = 'mkturkfiles/parameterfiles/subjects/';\nconst PARAM_REF = storageRef.child(PARAM_PATH);\nconst AGENTS_REF = rtdb.ref('agents/');\nconst utils = new Utils;\n\nexport class Liveplot {\n  public file: FileType;\n  public elemObjs: any;\n  public editor: JSONEditor;\n  public charts: Charts;\n  public streamActive: boolean;\n  public agentClientRef: firebase.database.Reference;\n\n  constructor(elemObj: any) {\n    this.elemObjs = elemObj;\n    this.file = {\n      path: DATA_PATH,\n      list: [],\n      name: '',\n      ver: null,\n      date: null,\n      dataChanged: false,\n      fileChanged: false,\n    };\n    this.charts = new Charts(elemObj);\n    this.streamActive = false;\n    this.requestRealtimeBtnAction();\n    this.onDisconnectAction();\n  }\n\n  public fileSelectionChangedListener(elem: HTMLSelectElement) {\n    elem.addEventListener('input', (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      if (this.streamActive) {\n        let agent = this.file.data?.Agent!;\n        rtdb.ref(`data/${agent}`).off();\n        this.agentClientRef.remove(err => {\n          if (err) {\n            console.error(`Error Removing agentClientRef: ${err}`);\n          }\n        });\n        this.streamActive = false;\n      }\n      this.file.name = this.file.list[parseInt(elem.value)].fullpath;\n      this.file.fileChanged = true;\n    });\n  }\n\n  public onDisconnectAction() {\n    window.addEventListener('unload', (evt: Event) => {\n      this.agentClientRef.onDisconnect().remove();\n    });\n  }\n\n  public requestRealtimeBtnAction() {\n    let realtimeBtn = this.elemObjs.realtimeBtn;\n    realtimeBtn.addEventListener('click', async (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      let agent = this.file.data?.Agent!;\n      if (this.streamActive) {\n        realtimeBtn.innerHTML = 'Request Realtime Stream';\n        rtdb.ref(`data/${agent}`).off();\n        this.agentClientRef.remove(err => {\n          if (err) {\n            console.error(`Error Removing agentClientRef: ${err}`);\n          }\n        });\n        rtdb.ref(`data/${agent}`).off();\n        this.streamActive = false;\n      } else {\n        realtimeBtn.innerHTML = 'Deactivate Realtime Stream';\n        let agentClientKey = rtdb.ref(`agents/${agent}`).push().key;\n        this.agentClientRef = rtdb.ref(`agents/${agent}/${agentClientKey}`);\n        if (_.isString(agentClientKey)) {\n          rtdb.ref(`agents/${agent}`).update({\n            [agentClientKey]: true\n          });\n        }\n        rtdb.ref(`data/${agent}`).on('value', snap => {\n          let event = (\n            new CustomEvent('data_arrived', { detail: snap.val() })\n          );\n          window.dispatchEvent(event);\n        });\n        this.streamActive = true;\n      }\n    });\n  }\n\n  public async populateFileList(elem: HTMLSelectElement) {\n    try {\n      let fileList = await utils.getFileList(this.file.path);\n\n      fileList.sort((a: any, b: any) => {\n        let nameA = a.name.toUpperCase();\n        let nameB = b.name.toUpperCase();\n\n        if (nameA > nameB) {\n          return -1;\n        }\n\n        if (nameA < nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n\n      this.file.list = fileList;\n\n      for (let i = 0; i < fileList.length; i++) {\n        let opt = document.createElement('option');\n        opt.value = i.toString();\n        opt.innerHTML = fileList[i].name;\n        elem.appendChild(opt);\n      }\n\n      this.file.name = this.file.list[0].fullpath;\n      this.file.fileChanged = true;\n      let rawStorageFile = await utils.getStorageFile(this.file.name);\n      // console.log('rawFile', rawStorageFile);\n      \n      this.processData(rawStorageFile);\n\n    } catch (error) {\n      console.error('ERROR #file-list:', error);\n    }\n\n\n  }\n\n  private flattenData(data: any) {\n\n    let tmp: any = {};\n\n    for (let outerKey in data) {\n      if (data.hasOwnProperty(outerKey)) {\n        for (let innerKey in data[outerKey]) {\n          if (data[outerKey].hasOwnProperty(innerKey)) {\n            tmp[innerKey] = data[outerKey][innerKey];\n          }\n        }\n      }\n    }\n\n    return tmp;\n  }\n\n  private async processData(data: any) {\n\n    this.file.data = this.flattenData(data);\n    this.loadDataToEditor(this.file.data);\n    // console.log(this.file.data);\n\n    let metadata = await utils.getStorageFileMetadata(this.file.name);\n    console.log('Success! Loaded File Size:', metadata.size / 1000, 'KB');\n    this.file.ver = metadata.generation;\n    this.file.dateSaved = new Date(metadata.updated);\n    console.log(this.file.dateSaved);\n\n    // this.file.data.CurrentDate = (\n    //   new Date(this.file.data.CurrentDate).valueOf()\n    // );\n\n    if (this.file.fileChanged) {\n      this.charts.initializeChartData(this.file, {streamActive: this.streamActive});\n      this.checkFileStatus();\n      this.file.fileChanged = false;\n      this.file.dataChanged = false;\n    } else if (this.file.dataChanged) {\n      this.charts.updatePlots(this.file, {streamActive: this.streamActive});\n      this.file.dataChanged = false;\n      this.checkFileStatus();\n    }\n  }\n\n  public setupEditor(elem: HTMLDivElement) {\n    this.editor = new JSONEditor(elem);\n  }\n\n  private loadDataToEditor(data: any) {\n    if (this.file.fileChanged) {\n      this.editor.set(data);\n    } else {\n      this.editor.update(data);\n    }\n  }\n\n  private async checkFileStatus() {\n    try {\n      let metadata = await utils.getStorageFileMetadata(this.file.name);\n\n      if (this.file.ver != metadata.generation) {\n        this.file.ver = metadata.generation;\n        this.file.dateSaved = new Date(metadata.updated);\n        console.log(this.file.dateSaved);\n        this.file.dataChanged = true;\n        console.log('File was updated ver=' + this.file.ver)\n      } else {\n        this.file.dataChanged = false;\n      }\n\n      if (this.file.fileChanged == true || this.file.dataChanged == true) {\n        let rawStorageFile = await utils.getStorageFile(this.file.name);\n        // console.log('rawFile', rawStorageFile);\n        this.processData(rawStorageFile);\n      } else {\n        setTimeout(() => {\n          this.checkFileStatus()\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('checkFileStatus Error:', error);\n    }\n    return false; // why needed\n  } \n\n}\n","import './styles.css'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA0fbv2VqE-AfF6V_nxSSXCEqaTlBlZnTI\",\n  authDomain: \"sandbox-ce2c5.firebaseapp.com\",\n  databaseURL: \"https://sandbox-ce2c5.firebaseio.com\",\n  projectId: \"sandbox-ce2c5\",\n  storageBucket: \"sandbox-ce2c5.appspot.com\",\n  messagingSenderId: \"1003719887944\",\n  clientId: \"1003719887944-rlc06cjecqrp9fgvmvo56vqop1otm9ht.apps.googleusercontent.com\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nimport { Liveplot } from './liveplot';\n\nlet fileListSelector = (\n  document.querySelector('#file-list') as HTMLSelectElement\n);\n\nlet editorDiv = (\n  document.querySelector('#editor') as HTMLDivElement\n);\n\nlet elemObj = {\n  perfDiv: document.querySelector('#performance-dashboard') as HTMLDivElement,\n  perfPlot: document.querySelector('#performance-plot') as HTMLDivElement,\n  perfFilter: document.querySelector('#performance-filter') as HTMLDivElement,\n  trialDiv: document.querySelector('#trial-dashboard') as HTMLDivElement,\n  trialPlot: document.querySelector('#trial-plot') as HTMLDivElement,\n  trialFilter: document.querySelector('#trial-filter') as HTMLDivElement,\n  healthDiv: document.querySelector('#health-dashboard') as HTMLDivElement,\n  healthPlot: document.querySelector('#health-plot') as HTMLDivElement,\n  healthFilter: document.querySelector('#health-filter') as HTMLDivElement,\n  screenPlot: document.querySelector('#screen-plot') as HTMLDivElement,\n  // realtimePlot: document.querySelector('#realtime-plot') as HTMLDivElement,\n  rxnPlot: document.querySelector('#reaction-plot') as HTMLDivElement,\n  choicePlot: document.querySelector('#choice-plot') as HTMLDivElement,\n  objPerfPlot: document.querySelector('#obj-perf-plot') as HTMLDivElement,\n  rewardPlot: document.querySelector('#reward-plot') as HTMLDivElement,\n  \n  perfVitals: document.querySelector('#performance-vitals') as HTMLSpanElement,\n  rfidVitals: document.querySelector('#rfid-vitals') as HTMLSpanElement,\n  batteryVitals: document.querySelector('#battery-vitals') as HTMLSpanElement,\n  trialVitals: document.querySelector('#trial-vitals') as HTMLSpanElement,\n  fixStdev: document.querySelector('#fixation-stdev') as HTMLSpanElement,\n  tarZeroStdev: document.querySelector('#target0-stdev') as HTMLSpanElement,\n  tarOneStdev: document.querySelector('#target1-stdev') as HTMLSpanElement,\n  sdTextDiv: document.querySelector('#touch-sd-text') as HTMLDivElement,\n  realtimeBtn: document.querySelector('#request-realtime') as HTMLButtonElement,\n};\n\nconst lp = new Liveplot(elemObj);\nlp.setupEditor(editorDiv);\nlp.fileSelectionChangedListener(fileListSelector);\nlp.populateFileList(fileListSelector);\n\n\n\n\n\n\n\n// fileListSelector.addEventListener('change', evt => {\n//   evt.preventDefault();\n//   evt.stopPropagation();\n//   console.log('New File!');\n//   file.name = file.fileList[parseInt(fileListSelector.value)].fullpath;\n//   file.fileChanged = true;\n//   console.log('file name:', file.name);\n//   console.log('file path', file.path);\n// });\n\n// let file: any = {\n//   path: DATA_PATH,\n//   list: [],\n//   fileList: [],\n//   name: '',\n//   data: null,\n//   ver: null,\n//   date: null,\n//   dateChanged: false,\n//   fileChanged: false\n// };\n\n// console.log('hello hector');\n\n\n// async function populateDropdownMenu() {\n//   try {\n//     let fileList = await utils.getFileList(file.path);\n    \n\n//     fileList.sort((a: any, b: any) => {\n//       let nameA = a.name.toUpperCase();\n//       let nameB = b.name.toUpperCase();\n\n//       if (nameA > nameB) {\n//         return -1;\n//       }\n\n//       if (nameA < nameB) {\n//         return 1;\n//       }\n\n//       return 0;\n//     });\n\n//     file.fileList = fileList;\n    \n\n//     for (let i = 0; i < fileList.length; i++) {\n//       let opt = document.createElement('option');\n//       opt.value = i.toString();\n//       opt.innerHTML = fileList[i].name;\n//       fileListSelector.appendChild(opt);\n//     }\n    \n//     file.name = file.fileList[0].fullpath;\n//     file.fileChanged = true;\n  \n//   } catch (error) {\n//     console.error('ERROR #file-list:', error);\n//   }\n// }\n\n// populateDropdownMenu();\n\n\n// async function loadAndRenderEditor(filePath: string) {\n//   let dataFile = utils.getStorageFile(filePath);\n// }\n\nlet provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\nfirebase.auth().getRedirectResult().then(function(result) {\n  if (result.user) {\n    // User just signed in. you can get the result.credential.\n\tconsole.log('Sign-In Redirect Result, USER ' + result.user.email + ' is signed in')\n  }\n  else if (firebase.auth().currentUser) {\n    // User already signed in.\n\tconsole.log('Sign-In Redirect Result, USER is signed in')\n  }\n  else {\n    // No user signed in, update your UI, show the redirect sign-in screen.\n\tfirebase.auth().signInWithRedirect(provider)\n  }\n});","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\n\nexport class Utils {\n  constructor() {}\n\n  public async getFileList(path: string, ext?: string) {\n    let fileList = await storageRef.child(path).listAll();\n    /* only keep files within the last 2 years*/\n    let year = new Date().getFullYear();\n    let files: any = [];\n\n    for (let item of fileList.prefixes) {\n      let subFileList = (\n        await this.getFileList(path + item.name + '/', ext)\n      );\n      files = [...files, ...subFileList];\n    }\n\n    for (let i = 0; i < fileList.items.length; i++) {\n      if (typeof(ext) == 'string') {\n        if (fileList.items[i].name.endsWith(ext)) { // if file extension is correct\n          files.push({\n            fullpath: fileList.items[i].fullPath,\n            name: fileList.items[i].name\n          });\n        }\n      } else if (parseInt(fileList.items[i].name.slice(0, 4)) >= year - 1) {\n        files.push({\n          fullpath: fileList.items[i].fullPath,\n          name: fileList.items[i].name\n        });\n      }\n    }\n\n    return files;\n  }\n\n  public async getStorageFile(path: string) {\n    let fileRef = storageRef.child(path);\n    // console.log('fileRef:', fileRef);\n    let file = await storageRef.child(path).getDownloadURL().then(async (url: string) => {\n      let response = await fetch(url);\n      return response.json();\n    }).catch(e => {\n      console.error('Error Getting URL:', e);\n    });\n    // console.log('file:', file);\n    return file;\n  }\n\n  public async getStorageFileMetadata(path: string) {\n    let fileRef = storageRef.child(path);\n    let metadata = await fileRef.getMetadata();\n    return metadata;\n  }\n\n  public smooth(data: any[], n: number) {\n    let smoothedData = [];\n    for (let i = 0; i < data.length; i++) {\n      if (i < n - 1) {\n        let tmp = data.slice(0, i + 1);\n        smoothedData[i] = tmp.reduce((a: any, b: any) => {\n          return a + b;\n        });\n        smoothedData[i] /= (i + 1);\n      } else {\n        let tmp = data.slice(i - n + 1, i + 1);\n        smoothedData[i] = tmp.reduce((a: number, b: number) => {\n          return a + b;\n        });\n        smoothedData[i] /= n;\n      }\n    }\n    return smoothedData;\n  }\n\n  public calcDistance(a: number, b: number) {\n    return Math.pow(Math.abs(a - b), 2);\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkliveplot\"] = self[\"webpackChunkliveplot\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [941], () => (__webpack_require__(519)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [941], () => (__webpack_require__(593)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","colorMapJet","utils","Utils","constructor","elemObj","this","elemObject","realtimePlotActive","setupCharts","vitals","subject","pctCorrect","trials","time","batteryLeft","batteryUsed","rewardEstimate","automator","automatorStage","automatorStageName","numReward","rfidTag","rfidTime","tagCount","setupDataTables","perfDataTable","google","visualization","DataTable","healthDataTable","cumulDataTable","xyPosDataTable","rxnTimeDataTable","rewardDataTable","choiceDataTable","objPerfDataTable","realtimeDataTable","rtData","async","charts","load","packages","setupChartOptions","perfDashboard","Dashboard","perfDiv","perfPlot","ChartWrapper","perfPlotConfig","perfFilter","ControlWrapper","perfFilterConfig","trialDashboard","trialDiv","trialPlot","trialPlotConfig","trialFilter","trialFilterConfig","healthDashboard","healthDiv","healthPlot","healthPlotConfig","healthFilter","healthFilterConfig","bind","screenPlot","ComboChart","rxnPlot","Histogram","rewardPlot","ColumnChart","choicePlot","objPerfPlot","perfPlotOptions","width","clientWidth","height","clientHeight","hAxis","title","vAxis","viewWindow","min","max","animation","duration","easing","startup","series","color","chartType","containerId","options","perfFilterOptions","filterColumnLabel","ui","chartOptions","smooth","baselineColor","chartView","columns","minRangeSize","controlType","state","range","start","end","trialPlotOptions","areaOpacity","vAxes","targetAxisIndex","trialFilterOptions","healthPlotOptions","healthFilterOptions","screenPlotOptions","seriesType","pointSize","rxnPlotOptions","legend","position","rewardPlotOptions","minValue","maxValue","choicePlotOptions","objPerfPlotOptions","initializeChartData","file","plotOptions","removeRows","getNumberOfRows","removeColumns","getNumberOfColumns","realtimeRowDataAdded","addColumn","data","SameDifferent","i","TestGridIndex","length","type","role","updatePlots","fileData","isUndefined","console","log","loadVitals","loadVitalsText","loadPerformanceData","loadHealthData","loadObjPerfData","loadChoiceData","loadRewardData","drawPerformancePlot","drawTrialPlot","drawHealthPlot","drawObjPerfPlot","drawRxnTimePlot","drawChoicePlot","drawRewardPlot","loadTouchSDText","streamActive","drawScreenPlot","drawRealtimePlot2","Subject","Response","startTime","StartTime","round","toNumber","last","RFIDTag","size","Date","toLocaleTimeString","Automator","CurrentAutomatorStage","CurrentAutomatorStageName","battery","Battery","numCorrect","CorrectItem","NReward","reduce","a","b","RewardPer1000Trials","perfVitals","innerHTML","rfidVitals","batteryVitals","trialVitals","dateSaved","Math","stdevFix","stdevTest","err","error","xPos","yPos","xData","yData","yDataSmall","yDataLarge","numTotal","numRFID","touchevent","rt","RewardStage","FixationXYT","addRows","FixationTouchEvent","NRSVP","SampleFixationXYT","SampleStartTime","SampleFixationTouchEvent","ResponseXYT","ChoiceTimeOut","fixX","fixY","sampleX","sampleY","numColumnXYPos","sampleWidth","getSampleWidth","sampleHeight","testWidth","getTestWidth","testHeight","fixationWidth","getFixationWidth","fixationHeight","choiceWidth","getChoiceWidth","choiceHeight","numDisplayElems","maxFixationGridIndex","FixationGridIndex","isNumber","XGridCenter","ViewportPixels","YGridCenter","offsettop","generateAndAddRowData","x","y","maxSampleGridIndex","SampleGridIndex","testX","testY","push","tmp","choiceX","choiceY","ChoiceGridIndex","timeEnd","fixXPos","fixYPos","testXPos","testYPos","numTarget","yDataIndex","arr","Array","testXPosArr","testYPosArr","j","meanFixXPos","mean","meanFixYPos","distFixXPos","map","pow","abs","distFixYPos","idx","sqrt","allTestXPos","filter","meanTestXPos","distTestXPos","allTestYPos","meanTestYPos","distTestYPos","numTrials","numReads","fill","timeFix","t","setTime","getTime","formatDate","target","numColumns","has","SampleScenes","IMAGES","imageidx","isArray","sizeInches","maxSizeInches","ViewportPPI","firstKey","findKey","OBJECTS","isString","TestScenes","SampleFixationSizeInches","FixationUsesSample","FixationSizeInches","ChoiceSizeInches","lenSampleObj","sampleObj","NTrialsPerBagBlock","ImageBagsSample","split","addRow","NDiffObjPerf","NDiffObj","Sample","SampleBagIdx","setValue","possibleResp","ObjectGridIndex","objGridIndex","cloneDeep","sort","allind","indexOf","NDiffChoice","NAllChoice","NRewardMax","toString","NDiffReward","lastIdx","Object","keys","TSequenceActualClip","dt","dt2","sampleCmdInterval","eyeTrackerSampleInterval","TSequenceDesiredClip","SampleCommandReturnTime","undefined","EyetrackerSampleInterval","numRows","nTrials","perfFilterState","getState","dataChanged","fileChanged","dTrials","dSlider","setOptions","setState","draw","healthFilterState","trialFilterState","tmin","getColumnRange","tmax","drawRealtimePlot","realtimePlotOptions","workspace","CanvasRatio","numCol","realtimePlotConfig","realtimePlot","setDataTable","window","addEventListener","evt","floor","detail","drawStaticElements","cvs","ctx","fillStyle","fillRect","boundingBoxes","beginPath","rect","stroke","document","querySelector","getContext","meta","arc","PI","screenActive","getColumnLabel","includes","colIdx","DateFormat","pattern","format","formatNumber","NumberFormat","fractionDigits","formatColor","formatter","ColorFormat","dx","addRange","storageRef","storage","ref","rtdb","database","DATA_PATH","child","elemObjs","path","list","name","ver","date","Charts","requestRealtimeBtnAction","onDisconnectAction","fileSelectionChangedListener","elem","stopPropagation","preventDefault","agent","Agent","off","agentClientRef","remove","parseInt","value","fullpath","onDisconnect","realtimeBtn","agentClientKey","key","update","on","snap","event","CustomEvent","val","dispatchEvent","fileList","getFileList","nameA","toUpperCase","nameB","opt","createElement","appendChild","rawStorageFile","getStorageFile","processData","flattenData","outerKey","hasOwnProperty","innerKey","loadDataToEditor","metadata","getStorageFileMetadata","generation","updated","checkFileStatus","setupEditor","editor","set","setTimeout","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","clientId","fileListSelector","editorDiv","fixStdev","tarZeroStdev","tarOneStdev","sdTextDiv","lp","Liveplot","populateFileList","provider","auth","GoogleAuthProvider","addScope","getRedirectResult","then","result","user","email","currentUser","signInWithRedirect","ext","listAll","year","getFullYear","files","item","prefixes","subFileList","items","endsWith","fullPath","slice","getDownloadURL","url","fetch","json","catch","e","fileRef","getMetadata","n","smoothedData","calcDistance","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","hmd","create","children","Error","obj","prop","prototype","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","__webpack_exports__"],"sourceRoot":""}