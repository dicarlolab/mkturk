{"version":3,"sources":["webpack:///./src/charts.ts","webpack:///./src/liveplot.ts","webpack:///./src/main.ts","webpack:///./src/utils.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/harmony module decorator","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["colorMapJet","utils","Utils","elemObj","this","elemObject","realtimePlotActive","setupCharts","vitals","subject","pctCorrect","trials","time","batteryLeft","batteryUsed","rewardEstimate","automator","automatorStage","automatorStageName","numReward","rfidTag","rfidTime","tagCount","perfDataTable","google","visualization","DataTable","cumulDataTable","xyPosDataTable","rxnTimeDataTable","rewardDataTable","choiceDataTable","objPerfDataTable","realtimeDataTable","rtData","charts","load","packages","setupChartOptions","setupDataTables","perfDashboard","Dashboard","perfDiv","perfPlot","ChartWrapper","perfPlotConfig","perfFilter","ControlWrapper","perfFilterConfig","trialDashboard","trialDiv","trialPlot","trialPlotConfig","trialFilter","trialFilterConfig","bind","screenPlot","ComboChart","rxnPlot","Histogram","rewardPlot","ColumnChart","choicePlot","objPerfPlot","perfPlotOptions","width","clientWidth","height","clientHeight","hAxis","title","vAxis","viewWindow","min","max","animation","duration","easing","startup","series","0","color","1","chartType","containerId","options","perfFilterOptions","filterColumnLabel","ui","chartOptions","smooth","baselineColor","chartView","columns","minRangeSize","controlType","state","range","start","end","trialPlotOptions","areaOpacity","vAxes","targetAxisIndex","2","trialFilterOptions","screenPlotOptions","seriesType","pointSize","rxnPlotOptions","legend","position","rewardPlotOptions","minValue","maxValue","choicePlotOptions","objPerfPlotOptions","file","plotOptions","removeRows","getNumberOfRows","removeColumns","getNumberOfColumns","realtimeRowDataAdded","addColumn","data","SameDifferent","i","TestGridIndex","length","updatePlots","fileData","isUndefined","console","log","loadVitals","loadVitalsText","loadPerformanceData","loadObjPerfData","loadChoiceData","loadRewardData","drawPerformancePlot","drawTrialPlot","drawObjPerfPlot","drawRxnTimePlot","drawChoicePlot","drawRewardPlot","loadTouchSDText","streamActive","drawScreenPlot","drawRealtimePlot2","Subject","Response","startTime","StartTime","round","toNumber","last","RFIDTag","size","Date","toLocaleTimeString","Automator","CurrentAutomatorStage","CurrentAutomatorStageName","battery","Battery","numCorrect","CorrectItem","NReward","reduce","a","b","RewardPer1000Trials","perfVitals","innerHTML","rfidVitals","batteryVitals","trialVitals","dateSaved","Math","stdevFix","stdevTest","err","error","xPos","yPos","xData","yData","yDataSmall","yDataLarge","numTotal","numRFID","touchevent","rt","RewardStage","FixationXYT","addRows","FixationTouchEvent","NRSVP","SampleFixationXYT","SampleStartTime","SampleFixationTouchEvent","ResponseXYT","ChoiceTimeOut","fixX","fixY","sampleX","sampleY","numColumnXYPos","sampleWidth","getSampleWidth","sampleHeight","testWidth","getTestWidth","testHeight","fixationWidth","getFixationWidth","fixationHeight","choiceWidth","getChoiceWidth","choiceHeight","numDisplayElems","maxFixationGridIndex","FixationGridIndex","isNumber","XGridCenter","ViewportPixels","YGridCenter","offsettop","generateAndAddRowData","x","y","maxSampleGridIndex","SampleGridIndex","testX","testY","push","tmp","choiceX","choiceY","ChoiceGridIndex","timeEnd","fixXPos","fixYPos","testXPos","testYPos","numTarget","yDataIndex","arr","Array","testXPosArr","testYPosArr","j","meanFixXPos","mean","meanFixYPos","distFixXPos","map","pow","abs","distFixYPos","idx","sqrt","allTestXPos","filter","meanTestXPos","distTestXPos","allTestYPos","meanTestYPos","distTestYPos","numTrials","numReads","fill","timeFix","t","setTime","getTime","formatDate","target","numColumns","has","SampleScenes","IMAGES","imageidx","isArray","sizeInches","maxSizeInches","ViewportPPI","firstKey","findKey","OBJECTS","isString","TestScenes","SampleFixationSizeInches","FixationUsesSample","FixationSizeInches","ChoiceSizeInches","lenSampleObj","sampleObj","NTrialsPerBagBlock","ImageBagsSample","split","addRow","NDiffObjPerf","NDiffObj","Sample","SampleBagIdx","setValue","possibleResp","ObjectGridIndex","objGridIndex","cloneDeep","sort","allind","indexOf","NDiffChoice","NAllChoice","NRewardMax","toString","NDiffReward","numRows","nTrials","perfFilterState","getState","dataChanged","fileChanged","dTrials","dSlider","setOptions","setState","draw","trialFilterState","tmin","getColumnRange","tmax","realtimePlotOptions","workspace","CanvasRatio","numCol","realtimePlotConfig","realtimePlot","setDataTable","window","addEventListener","evt","floor","detail","cvs","ctx","fillStyle","fillRect","boundingBoxes","beginPath","rect","stroke","document","querySelector","getContext","meta","drawStaticElements","arc","PI","screenActive","getColumnLabel","type","includes","colIdx","DateFormat","pattern","format","NumberFormat","fractionDigits","formatter","ColorFormat","dx","addRange","storageRef","storage","ref","rtdb","database","DATA_PATH","child","elemObjs","path","list","name","ver","date","Charts","requestRealtimeBtnAction","onDisconnectAction","elem","stopPropagation","preventDefault","agent","Agent","off","agentClientRef","remove","parseInt","value","fullpath","onDisconnect","realtimeBtn","async","agentClientKey","key","update","on","snap","event","CustomEvent","val","dispatchEvent","fileList","getFileList","nameA","toUpperCase","nameB","opt","createElement","appendChild","rawStorageFile","getStorageFile","processData","outerKey","hasOwnProperty","innerKey","flattenData","loadDataToEditor","metadata","getStorageFileMetadata","generation","updated","initializeChartData","checkFileStatus","editor","set","setTimeout","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","clientId","fileListSelector","editorDiv","fixStdev","tarZeroStdev","tarOneStdev","sdTextDiv","lp","Liveplot","setupEditor","fileSelectionChangedListener","populateFileList","provider","auth","GoogleAuthProvider","addScope","getRedirectResult","then","result","user","email","currentUser","signInWithRedirect","ext","listAll","year","getFullYear","files","item","prefixes","subFileList","items","endsWith","fullPath","slice","getDownloadURL","url","fetch","json","catch","e","fileRef","getMetadata","n","smoothedData","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","id","loaded","__webpack_modules__","call","m","d","definition","o","Object","defineProperty","enumerable","get","g","globalThis","Function","hmd","create","children","Error","obj","prop","prototype","r","Symbol","toStringTag","nmd","paths","installedChunks","179","deferredModules","checkDeferredModules","checkDeferredModulesImpl","deferredModule","fulfilled","depId","splice","s","chunkLoadingGlobal","webpackJsonpCallback","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","parentChunkLoadingFunction","shift","apply","self"],"mappings":"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","file":"main.bundle.js","sourcesContent":["import _ from 'lodash';\nimport { FileType, LiveplotDataType } from './types';\nimport { Utils } from './utils';\n\nconst colorMapJet = [\n  '#00008F','#00009F','#0000AF','#0000BF',\n  '#0000CF','#0000DF','#0000EF','#0000FF',\n  '#0010FF','#0020FF','#0030FF','#0040FF',\n  '#0050FF','#0060FF','#0070FF','#0080FF',\n  '#008FFF','#009FFF','#00AFFF','#00BFFF',\n  '#00CFFF','#00DFFF','#00EFFF','#00FFFF',\n  '#10FFEF','#20FFDF','#30FFCF','#40FFBF',\n  '#50FFAF','#60FF9F','#70FF8F','#80FF80',\n  '#8FFF70','#9FFF60','#AFFF50','#BFFF40',\n  '#CFFF30','#DFFF20','#EFFF10','#FFFF00',\n  '#FFEF00','#FFDF00','#FFCF00','#FFBF00',\n  '#FFAF00','#FF9F00','#FF8F00','#FF8000',\n  '#FF7000','#FF6000','#FF5000','#FF4000',\n  '#FF3000','#FF2000','#FF1000','#FF0000',\n  '#EF0000','#DF0000','#CF0000','#BF0000',\n  '#AF0000','#9F0000','#8F0000','#800000'\n];\n\nconst utils = new Utils();\n\n\nexport class Charts {\n\n  public elemObject: any;\n  public perfDataTable: google.visualization.DataTable;\n  public cumulDataTable: google.visualization.DataTable;\n  public xyPosDataTable: google.visualization.DataTable;\n  public rxnTimeDataTable: google.visualization.DataTable;\n  public rewardDataTable: google.visualization.DataTable;\n  public choiceDataTable: google.visualization.DataTable;\n  public objPerfDataTable: google.visualization.DataTable;\n  public realtimeDataTable: google.visualization.DataTable;\n\n  public perfDashboard: google.visualization.Dashboard;\n  public trialDashboard: google.visualization.Dashboard;\n\n  public perfPlot: google.visualization.ChartWrapper;\n  public perfPlotConfig: google.visualization.ChartSpecs;\n  public perfPlotOptions: google.visualization.LineChartOptions;\n  public perfFilter: google.visualization.ControlWrapper;\n  public perfFilterConfig: google.visualization.ControlWrapperOptions;\n  public perfFilterOptions: Object;\n\n  public trialPlot: google.visualization.ChartWrapper;\n  public trialPlotConfig: google.visualization.ChartSpecs;\n  public trialPlotOptions: google.visualization.AreaChartOptions;\n  public trialFilter: google.visualization.ControlWrapper;\n  public trialFilterConfig: google.visualization.ControlWrapperOptions;\n  public trialFilterOptions: Object;\n\n  public screenPlot: google.visualization.ComboChart;\n  public screenPlotOptions: google.visualization.ComboChartOptions;\n\n  public realtimePlot: google.visualization.ChartWrapper;\n  public realtimePlotConfig: google.visualization.ChartSpecs;\n  public realtimePlotOptions: google.visualization.ComboChartOptions;\n  public realtimePlotActive: boolean;\n  public realtimeRowDataAdded: boolean;\n  public rtData: any;\n\n  public rxnPlot: google.visualization.Histogram;\n  public rxnPlotOptions: google.visualization.HistogramOptions;\n\n  public rewardPlot: google.visualization.ColumnChart;\n  public rewardPlotOptions: google.visualization.ColumnChartOptions;\n\n  public choicePlot: google.visualization.ColumnChart;\n  public choicePlotOptions: google.visualization.ColumnChartOptions;\n\n  public objPerfPlot: google.visualization.ColumnChart;\n  public objPerfPlotOptions: google.visualization.ColumnChartOptions;\n\n  private vitals: any;\n  private nTrials: number;\n\n\n  constructor(elemObj: any) {\n    this.elemObject = elemObj;\n    this.realtimePlotActive = false;\n    this.setupCharts();\n\n    this.vitals = {\n      subject: null,\n      pctCorrect: 0,\n      trials: 0,\n      time: 0,\n      batteryLeft: 0,\n      batteryUsed: 0,\n      rewardEstimate: 0,\n      automator: '',\n      automatorStage: 0,\n      automatorStageName: '',\n      numReward: 0,\n      rfidTag: '',\n      rfidTime: 0,\n      tagCount: {}\n    }\n  }\n\n  public setupDataTables() {\n    this.perfDataTable = new google.visualization.DataTable();\n    this.cumulDataTable = new google.visualization.DataTable();\n    this.xyPosDataTable = new google.visualization.DataTable();\n    this.rxnTimeDataTable = new google.visualization.DataTable();\n    this.rewardDataTable = new google.visualization.DataTable();\n    this.choiceDataTable = new google.visualization.DataTable();\n    this.objPerfDataTable = new google.visualization.DataTable();\n    this.realtimeDataTable = new google.visualization.DataTable();\n    this.rtData = {};\n\n  }\n\n  public async setupCharts() {\n    await google.charts.load('current', { packages: ['corechart', 'controls'] });\n    this.setupChartOptions();\n    this.setupDataTables();\n\n    this.perfDashboard = (\n      new google.visualization.Dashboard(this.elemObject.perfDiv)\n    );\n    this.perfPlot = (\n      new google.visualization.ChartWrapper(this.perfPlotConfig)\n    );\n    this.perfFilter = (\n      new google.visualization.ControlWrapper(this.perfFilterConfig)\n    );\n\n    this.trialDashboard = (\n      new google.visualization.Dashboard(this.elemObject.trialDiv)\n    );\n    this.trialPlot = (\n      new google.visualization.ChartWrapper(this.trialPlotConfig)\n    );\n    this.trialFilter = (\n      new google.visualization.ControlWrapper(this.trialFilterConfig)\n    );\n\n    this.perfDashboard.bind(this.perfFilter, this.perfPlot);\n    this.trialDashboard.bind(this.trialFilter, this.trialPlot);\n\n    this.screenPlot = (\n      new google.visualization.ComboChart(this.elemObject.screenPlot)\n    );\n    // this.realtimePlot = (\n    //   new google.visualization.ChartWrapper(this.realtimePlotConfig)\n    // );\n    this.rxnPlot = (\n      new google.visualization.Histogram(this.elemObject.rxnPlot)\n    );\n    this.rewardPlot = (\n      new google.visualization.ColumnChart(this.elemObject.rewardPlot)\n    );\n    this.choicePlot = (\n      new google.visualization.ColumnChart(this.elemObject.choicePlot)\n    );\n    this.objPerfPlot = (\n      new google.visualization.ColumnChart(this.elemObject.objPerfPlot)\n    );\n\n  }\n\n  public setupChartOptions() {\n    \n    this.perfPlotOptions = {\n      width: this.elemObject.perfPlot.clientWidth,\n      height: this.elemObject.perfPlot.clientHeight,\n      hAxis: { title: 'Trial#' },\n      vAxis: { title: 'Correct (%)', viewWindow: { min: 0, max: 1.0 } },\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true\n      },\n      series: {\n        0: { color: '#43459d' },\n        1: { color: '#e2431e' }\n      }\n    };\n    this.perfPlotConfig = {\n      chartType: 'LineChart',\n      containerId: 'performance-plot',\n      options: this.perfPlotOptions\n    };\n    this.perfFilterOptions = {\n      filterColumnLabel: 'currentTrial',\n      ui: {\n        chartType: 'LineChart',\n        chartOptions: {\n          smooth: 20,\n          hAxis: { baselineColor: 'none', title: 'Trial#' },\n          vAxis: { title: '%', viewWindow: { min: 0, max: 1.0 } },\n          width: this.elemObject.perfFilter.clientWidth,\n          height: this.elemObject.perfFilter.clientHeight,\n          animation: { duration: 1000, easing: 'out' }\n        },\n        chartView: {\n          columns: [0, 1]\n        },\n        minRangeSize: 2\n      }\n    };\n    this.perfFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'performance-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.perfFilterOptions \n    };\n    this.trialPlotOptions = {\n      width: this.elemObject.trialPlot.clientWidth,\n      height: this.elemObject.trialPlot.clientHeight,\n      areaOpacity: 0.5,\n      hAxis: { title: 'Time (h) '},\n      vAxes: {\n        0: { title: 'Trial count' },\n        1: { title: 'RFID'}\n      },\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true\n      },\n      series: {\n        0: { targetAxisIndex: 0 },\n        1: { targetAxisIndex: 0 },\n        2: { targetAxisIndex: 1 }\n      }\n    };\n    this.trialPlotConfig = {\n      chartType: 'AreaChart',\n      containerId: 'trial-plot',\n      options: this.trialPlotOptions\n    };\n    this.trialFilterOptions = {\n      filterColumnLabel: 'time',\n      ui: {\n        chartType: 'LineChart',\n        chartOptions: {\n          hAxis: { baselineColor: 'none', title: 'Time' },\n          vAxis: { title: '#' },\n          width: this.elemObject.trialFilter.clientWidth,\n          height: this.elemObject.trialFilter.clientHeight,\n          animation: { duration: 1000, easing: 'out' }\n        }\n      },\n      chartView: {\n        columns: [0, 1]\n      }\n    };\n    this.trialFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'trial-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.trialFilterOptions\n    };\n\n\n    this.screenPlotOptions = {\n      seriesType: 'scatter',\n      pointSize: 1\n    };\n    this.rxnPlotOptions = {\n      width: this.elemObject.rxnPlot.clientWidth,\n      height: this.elemObject.rxnPlot.clientHeight,\n      title: 'Reaction Time (ms)',\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true\n      },\n      legend: { position: 'none' }\n    };\n    this.rewardPlotOptions = {\n      width: this.elemObject.rewardPlot.clientWidth,\n      height: this.elemObject.rewardPlot.clientHeight,\n      title: 'Amount of Reward',\n      hAxis: { title: 'reward amount' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      legend: { position: 'none' }\n    };\n    this.choicePlotOptions = {\n      width: this.elemObject.choicePlot.clientWidth,\n      height: this.elemObject.choicePlot.clientHeight,\n      hAxis: { title: 'Choice', },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      legend: { position: 'none' }\n    };\n    this.objPerfPlotOptions = {\n      width: this.elemObject.objPerfPlot.clientWidth,\n      height: this.elemObject.objPerfPlot.clientHeight,\n      hAxis: { title: 'Objects' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      title: 'Object Performance',\n      legend: { position: 'none' }\n    };\n\n  }\n\n  public initializeChartData(file: FileType, plotOptions: any) {\n    // Remove rows and columns\n    // console.log(this.perfDataTable);\n    this.perfDataTable\n      .removeRows(0, this.perfDataTable.getNumberOfRows());\n    this.perfDataTable\n      .removeColumns(0, this.perfDataTable.getNumberOfColumns());\n\n    this.cumulDataTable\n      .removeRows(0, this.cumulDataTable.getNumberOfRows());\n    this.cumulDataTable\n      .removeColumns(0, this.cumulDataTable.getNumberOfColumns());\n\n    this.xyPosDataTable\n      .removeRows(0, this.xyPosDataTable.getNumberOfRows());\n    this.xyPosDataTable\n      .removeColumns(0, this.xyPosDataTable.getNumberOfColumns());\n\n    this.realtimeDataTable\n      .removeRows(0, this.realtimeDataTable.getNumberOfRows());\n    this.realtimeDataTable\n      .removeColumns(0, this.realtimeDataTable.getNumberOfColumns());\n    this.realtimePlotActive = false;\n    this.realtimeRowDataAdded = false;\n    this.rtData['test'] = [];\n    this.rtData['choice'] = [];\n\n    this.rxnTimeDataTable\n      .removeRows(0, this.rxnTimeDataTable.getNumberOfRows());\n    this.rxnTimeDataTable\n      .removeColumns(0, this.rxnTimeDataTable.getNumberOfColumns());\n\n    this.rewardDataTable\n      .removeRows(0, this.rewardDataTable.getNumberOfRows());\n    this.rewardDataTable\n      .removeColumns(0, this.rewardDataTable.getNumberOfColumns());\n\n    this.choiceDataTable\n      .removeRows(0, this.choiceDataTable.getNumberOfRows());\n    this.choiceDataTable\n      .removeColumns(0, this.choiceDataTable.getNumberOfColumns());\n\n    this.objPerfDataTable\n      .removeRows(0, this.objPerfDataTable.getNumberOfRows());\n    this.objPerfDataTable\n      .removeColumns(0, this.objPerfDataTable.getNumberOfColumns());\n\n    // Add columns\n    this.perfDataTable.addColumn('number', 'currentTrial');\n    this.perfDataTable.addColumn('number', 'current');\n    this.perfDataTable.addColumn('number', '100trialsAvg');\n\n    this.cumulDataTable.addColumn('datetime', 'time');\n    this.cumulDataTable.addColumn('number', 'Trials');\n    this.cumulDataTable.addColumn('number', 'Performance');\n    this.cumulDataTable.addColumn('number', 'RFID');\n    // this.cumulDataTable.addColumn('number', 'Weight');\n\n    this.rxnTimeDataTable.addColumn('string', 'success');\n    this.rxnTimeDataTable.addColumn('number', 'durationMS');\n\n    /** \n     * xyPosDataTable Guide\n     * 0: x\n     * 1: y fix (box)\n     * 2: y sample (box)\n     * 3: y test1 (box) | y same (box)\n     * 4: y test2 (box) | y different (box)\n     * 5: y Fix_reward (dots)\n     * 6: y Fix_punish (dots)\n     * 7: y Target_reward (dots)\n     * 8: y Target_punish (dots)\n     */\n    this.xyPosDataTable.addColumn('number', 'xpos');\n    this.xyPosDataTable.addColumn('number', 'Fixation');\n    this.xyPosDataTable.addColumn('number', 'Sample');\n    this.realtimeDataTable.addColumn('number', 'globalX');\n    this.realtimeDataTable.addColumn('number', 'fixY');\n    this.realtimeDataTable.addColumn('number', 'sampleY');\n\n    if (file.data!.SameDifferent <= 0) {\n      for (let i = 0; i < file.data!.TestGridIndex.length; i++) {\n        this.xyPosDataTable.addColumn('number', `Test${i + 1}`);\n        this.realtimeDataTable.addColumn('number', `testY${i + 1}`);\n      }\n    } else if (file.data!.SameDifferent > 0) {\n      this.xyPosDataTable.addColumn('number', 'Same');\n      this.xyPosDataTable.addColumn('number', 'Different');\n      this.realtimeDataTable.addColumn('number', 'sameY');\n      this.realtimeDataTable.addColumn('number', 'differentY');\n    }\n\n\n    this.xyPosDataTable.addColumn('number', 'Fix_Reward');\n    this.xyPosDataTable.addColumn('number', 'Fix_Punish');\n    this.xyPosDataTable.addColumn('number', 'Target_Reward');\n    this.xyPosDataTable.addColumn('number', 'Target_Punish');\n\n    this.realtimeDataTable.addColumn('number', 'curY');\n    this.realtimeDataTable.addColumn({'type': 'string', 'role': 'style'});\n    \n    this.rewardDataTable.addColumn('string', 'reard size');\n    this.rewardDataTable.addColumn('number', 'nrewards');\n\n    this.choiceDataTable.addColumn('string', 'choice');\n    this.choiceDataTable.addColumn('number', '# of responses');\n\n    this.objPerfDataTable.addColumn('string', 'object');\n    this.objPerfDataTable.addColumn('number', 'performance');\n    this.updatePlots(file, plotOptions);\n\n  }\n\n  public updatePlots(file: FileType, plotOptions: any) {\n    let fileData: LiveplotDataType;\n    if (!_.isUndefined(file.data)) {\n      fileData = file.data;\n    } else {\n      throw 'file.data is Undefined'\n    }\n    console.log('plot updated');\n    this.loadVitals(file);\n    this.loadVitalsText(file);\n    // console.log('vitals', this.vitals);\n    this.loadPerformanceData(file);\n    this.loadObjPerfData(fileData);\n    this.loadChoiceData(fileData);\n    this.loadRewardData(fileData);\n    this.drawPerformancePlot(file);\n    this.drawTrialPlot(file);\n    this.drawObjPerfPlot();\n    this.drawRxnTimePlot();\n    this.drawChoicePlot();\n    this.drawRewardPlot();\n    this.loadTouchSDText();\n    let streamActive = plotOptions.streamActive;\n    this.drawScreenPlot(fileData, streamActive);\n    if (streamActive && !this.realtimePlotActive) {\n      // console.log('hello');\n      this.drawRealtimePlot2(fileData);\n      this.realtimePlotActive = true;\n    }\n\n  }\n\n  private loadVitals(file: FileType) {\n    let data;\n    if (!_.isUndefined(file.data)) {\n      data = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n\n    this.vitals.subject = data.Subject;\n    this.vitals.trials = data.Response.length;\n    \n    // Convert milliseconds to minutes\n    let startTime = data.StartTime;\n    this.vitals.time = (\n      _.round(_.round(_.toNumber(_.last(startTime)) - startTime[0]) / 60000)\n    );\n\n    /**\n     * RFID Processing\n     * Only supports current data format\n     * file.data.RFIDTag = {\n     *   0: [0, 2020-10-27T19:19:19.999Z, 00782A7E88A4],\n     *   1: [],\n     *   ...\n     * };\n     */\n    let rfidTag = data.RFIDTag;\n    if (!_.isUndefined(rfidTag) && _.size(rfidTag) > 0) {\n      this.vitals.rfidTag = rfidTag[_.size(rfidTag) - 1][2];\n      this.vitals.rfidTime = (\n        new Date(rfidTag[_.size(rfidTag) - 1][1]).toLocaleTimeString('en-US')\n      );\n    } else {\n      this.vitals.rfidTag = null;\n      this.vitals.rfidTime = null;\n    }\n\n    // Automator, AutomatorStage, AutomatorStageName\n    if (_.isUndefined(data.Automator)) {\n      this.vitals.automator = null;\n    } else {\n      this.vitals.automator = file.data.Automator;\n    }\n\n    if (_.isUndefined(data.CurrentAutomatorStage)) {\n      this.vitals.automatorStage = null;\n    } else {\n      this.vitals.automatorStage = data.CurrentAutomatorStage;\n    }\n\n    if (_.isUndefined(data.CurrentAutomatorStageName)) {\n      this.vitals.automatorStageName = null;\n    } else {\n      this.vitals.automatorStageName = data.CurrentAutomatorStageName;\n    }\n\n    // Battery, only supports current data format\n    let battery = data.Battery;\n    if (!_.isUndefined(battery) && _.size(battery) > 0) {\n      this.vitals.batteryLeft = _.round(battery[_.size(battery) - 1][2] * 100);\n      this.vitals.batteryUsed = (\n        _.round(battery[0][2] * 100 - this.vitals.batteryLeft)\n      );\n    } else {\n      this.vitals.batteryLeft = null;\n      this.vitals.batteryUsed = null;\n    }\n\n    // Performance\n    let numCorrect = 0;\n    for (let i = 0; i < _.size(data.CorrectItem); i++) {\n      if (data.CorrectItem[i] == data.Response[i]) {\n        numCorrect++;\n      }\n    }\n    \n    this.vitals.numCorrect = numCorrect;\n    this.vitals.pctCorrect = (\n      _.round(100 * numCorrect / data.Response.length)\n    );\n\n    if (!_.isUndefined(data.NReward)) {\n      this.vitals.numReward = (\n        data.NReward.reduce((a: number, b: number) => { \n          return a + b;\n        }, 0)\n      );\n    }\n\n    this.vitals.rewardEstimate = 0;\n    if (!_.isUndefined(data.RewardPer1000Trials)) {\n      this.vitals.rewardEstimate = (\n        _.round(data.RewardPer1000Trials * this.vitals.numReward / 1000)\n      );\n    }\n\n  }\n\n  private loadVitalsText(file: FileType) {\n    this.elemObject.perfVitals.innerHTML = (\n      `${this.vitals.subject}: ${this.vitals.pctCorrect}% (n = ${this.vitals.numCorrect} out of ${this.vitals.trials}, r=${this.vitals.numReward}=${this.vitals.rewardEstimate}mL, ${this.vitals.time} mins)` \n    );\n\n    // TODO: add this.vitals.tagCount data\n    this.elemObject.rfidVitals.innerHTML = (\n      `RFID: ${this.vitals.rfidTag} (${this.vitals.rfidTime})`\n    );\n\n    this.elemObject.batteryVitals.innerHTML = (\n      `Battery: ${this.vitals.batteryLeft}% (-${this.vitals.batteryUsed}%)`\n    );\n\n    this.elemObject.trialVitals.innerHTML = (\n      `Last Trial: ${file.dateSaved!.toLocaleTimeString('en-US')}`\n    );\n  }\n\n  private loadTouchSDText() {\n    try {\n      this.screenPlotOptions.title = `Touch Locations -- standard dev: \\n Fixation: ${Math.round(this.vitals.stdevFix * 10) / 10} pixels`;\n      for (let i = 0; i < this.vitals.stdevTest.length; i++) {\n        this.screenPlotOptions.title = this.screenPlotOptions.title + `\\n Target ${i}: ${Math.round(this.vitals.stdevTest[i] * 10) / 10}`; \n      }\n    } catch(err) {\n      console.error('Error loading touch SD text', err);\n    }\n  }\n\n  private loadPerformanceData(file: FileType) {\n    // Typechecking file.data\n    let data;\n    if (!_.isUndefined(file.data)) {\n      data = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n\n    this.perfDataTable.removeRows(\n      0, this.perfDataTable.getNumberOfRows()\n    );\n    this.cumulDataTable\n      .removeRows(0, this.cumulDataTable.getNumberOfRows());\n    this.rxnTimeDataTable\n      .removeRows(0, this.rxnTimeDataTable.getNumberOfRows());\n    this.xyPosDataTable\n      .removeRows(0, this.xyPosDataTable.getNumberOfRows());\n\n    // Create Data Table\n    let xData = [];\n    let yData: number[] = [];\n    let yDataSmall = []; // keeps 5 recent\n    let yDataLarge = []; // keeps 100 recent\n    let numTotal = [];\n    let numCorrect: number[] = [];\n    let tCurrent = [];\n    let numRFID = [];\n    let xPos: number;\n    let yPos: number;\n    let touchevent: number[][] = [];\n    let rt = [];\n\n    // performance\n    for (let i = 0; i < data.CorrectItem.length; i++) {\n      if (data.CorrectItem[i] == data.Response[i]) {\n        yData[i] = 1; // correct\n      } else {\n        yData[i] = 0; // incorrect\n      }\n\n      xData[i] = i;\n\n      // Cumulative trials & correct trials\n      numTotal[i] = xData.length;\n      if (i > 0) {\n        numCorrect[i] = numCorrect[i - 1] + yData[i];\n      } else if (i == 0) {\n        numCorrect[i] = yData[i];\n      }\n    }\n\n    for (let i = 0; i < data.NReward.length; i++) {\n      if (data.RewardStage == 0) {\n        rt[i] = data.FixationXYT[2][i] - data.StartTime[i];\n        this.rxnTimeDataTable.addRows(\n          [[file.data.FixationTouchEvent[i], rt[i]]]\n        );\n      } else if (data.NRSVP > 0) {\n        rt[i] = data.SampleFixationXYT[2][i] - data.SampleStartTime[i];\n        this.rxnTimeDataTable.addRows(\n          [[data.SampleFixationTouchEvent[i], rt[i]]]\n        );\n      } else {\n        rt[i] = data.ResponseXYT[2][i] - data.SampleStartTime[i];\n        if (data.Response[i] == -1) {\n          this.rxnTimeDataTable.addRows(\n            [['timeout', data.ChoiceTimeOut]]\n          );\n        } else if (data.CorrectItem[i] == data.Response[i]) {\n          this.rxnTimeDataTable.addRows(\n            [['correct', rt[i]]]\n          );\n        } else {\n          this.rxnTimeDataTable.addRows(\n            [['wrong', rt[i]]]\n          );\n        }\n      }\n    }\n\n    // console.log(rt);\n\n    /**\n     * Touch XY\n     * Store fixation in odd indices and choice in even\n     * All touchevents. touchevent has a length that is twice the length\n     * of file.data.FixationXYT or file.data.ResponseXYT\n     */\n    if (\n      !_.isUndefined(data.ResponseXYT) \n      && _.size(data.ResponseXYT) > 0\n      && _.size(file.data.ResponseXYT[0]) > 0\n    ) {\n      for (let i = 0; i < _.size(data.FixationXYT[0]) * 2; i += 2) {\n        touchevent[i] = [];\n        touchevent[i + 1] = [];\n        touchevent[i][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i + 1][0] = file.data.ResponseXYT[0][i / 2];\n        touchevent[i][1] = file.data.FixationXYT[1][i / 2];\n        touchevent[i + 1][1] = file.data.ResponseXYT[1][i / 2];\n      }\n    } else {\n      for (let i = 0; i < _.size(data.FixationXYT[0]) * 2; i += 2) {\n        touchevent[i] = [];\n        touchevent[i + 1] = [];\n        touchevent[i][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i + 1][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i][1] = file.data.FixationXYT[1][i / 2];\n        touchevent[i + 1][1] = file.data.FixationXYT[1][i / 2];\n      }\n    }\n\n    // Sample & Test Boxes -- Draw them as a bounding box in the touch plot\n    let numColumnXYPos = this.xyPosDataTable.getNumberOfColumns();\n    let numColRealtime = this.realtimeDataTable.getNumberOfColumns();\n    let sampleWidth = this.getSampleWidth(file.data);\n    let sampleHeight = sampleWidth;\n    let testWidth = this.getTestWidth(file.data);\n    let testHeight = testWidth;\n\n    // Fixation & Choice Boxes\n    let fixationWidth = this.getFixationWidth(file.data, sampleWidth);\n    let fixationHeight = fixationWidth;\n    let choiceWidth = this.getChoiceWidth(file.data);\n    let choiceHeight = choiceWidth;\n\n    /** \n     * NOTE for positioning elements:\n     * grid x, y is offset || fixation & response x, y is not\n    */\n\n    // FIXATION\n    let numDisplayElems = 1;\n    // let xyPosArray = [];\n    let fixX: number;\n    let fixY: number;\n    let maxFixationGridIndex = _.max(file.data.FixationGridIndex);\n    if (_.isNumber(maxFixationGridIndex)) {\n      fixX = file.data.XGridCenter[maxFixationGridIndex];\n      fixY = (\n        file.data.ViewportPixels[1] \n        - (file.data.YGridCenter[maxFixationGridIndex] + file.data.offsettop)\n      );\n      // console.log('fixY', fixY);\n    } else {\n      throw 'data.FixationGridIndex is not of type number[]';\n    }\n\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX - fixationWidth / 2, 1: fixY - fixationHeight / 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX + fixationWidth / 2, 1: fixY - fixationHeight / 2}\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX + fixationWidth / 2, 1: fixY + fixationHeight / 2}\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX - fixationWidth / 2, 1: fixY + fixationHeight / 2}\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX - fixationWidth / 2, 1: fixY - fixationHeight / 2}\n    );\n\n    if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n      console.log('realtime not active');\n      this.rtData['fixation'] = {\n        x: fixX,\n        y: fixY,\n        width: fixationWidth,\n        height: fixationHeight\n      };\n    }\n\n    // SAMPLE\n    numDisplayElems = 2;\n    let sampleX: number;\n    let sampleY: number;\n    let maxSampleGridIndex = _.max(data.SampleGridIndex);\n\n    if (data.RewardStage > 0) {\n      if (_.isNumber(maxSampleGridIndex)) {\n        sampleX = data.XGridCenter[maxSampleGridIndex];\n        sampleY = (\n          data.ViewportPixels[1]\n          - (data.YGridCenter[maxSampleGridIndex] + data.offsettop)\n        );\n      } else {\n        throw 'data.SampleGridIndex is not of type number[]';\n      }\n    } else {\n      sampleX = fixX;\n      sampleY = fixY;\n    }\n\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX - sampleWidth / 2, 2: sampleY - sampleHeight / 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX + sampleWidth / 2, 2: sampleY - sampleHeight/ 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX + sampleWidth / 2, 2: sampleY + sampleHeight / 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX - sampleWidth / 2, 2: sampleY + sampleHeight/ 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX - sampleWidth / 2, 2: sampleY - sampleHeight / 2 }\n    );\n\n    if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n      this.rtData['sample'] = {\n        x: sampleX,\n        y: sampleY,\n        width: sampleWidth,\n        height: sampleHeight\n      };\n    }\n\n    // TEST:\n    let testX: number[] = [];\n    let testY: number[] = [];\n\n    if (data.RewardStage != 0) {\n      for (let i = 0; i < _.size(data.TestGridIndex); i++) {\n        // If Same-Different, only show the first test\n        if (data.SameDifferent > 0 || data.NRSVP > 0) {\n          break;\n        }\n\n        numDisplayElems++;\n        if (data.NRSVP > 0) {\n          testX.push(data.XGridCenter[maxSampleGridIndex as number]);\n          testY.push(\n            data.ViewportPixels[1]\n            - (data.YGridCenter[maxSampleGridIndex as number] + data.offsettop)\n          );\n        } else {\n          testX.push(data.XGridCenter[data.TestGridIndex[i]]);\n          testY.push(\n            data.ViewportPixels[1]\n            - (data.YGridCenter[data.TestGridIndex[i]] + data.offsettop)\n          );\n        }\n\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] - testWidth / 2,\n            [numDisplayElems]: testY[i] - testHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] + testWidth / 2,\n            [numDisplayElems]: testY[i] - testHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] + testWidth / 2,\n            [numDisplayElems]: testY[i] + testHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] - testWidth / 2,\n            [numDisplayElems]: testY[i] + testHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] - testWidth / 2,\n            [numDisplayElems]: testY[i] - testHeight / 2\n          }\n        );\n\n        if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n          let tmp = {\n              x: testX[i],\n              y: testY[i],\n              width: testWidth,\n              height: testHeight\n          }\n          this.rtData['test'].push(tmp);\n        }\n      } \n    }\n\n    // CHOICE:\n    let choiceX: number[] = [];\n    let choiceY: number[] = [];\n\n    if (data.RewardStage != 0 && data.SameDifferent > 0) {\n      for (let i = 0; i < _.size(data.ChoiceGridIndex); i++) {\n        numDisplayElems++;\n        choiceX.push(data.XGridCenter[data.ChoiceGridIndex[i]]);\n        choiceY.push(\n          data.ViewportPixels[1]\n          - (data.YGridCenter[data.ChoiceGridIndex[i]] + data.offsettop)\n        );\n\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] - choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] - choiceHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] + choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] - choiceHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] + choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] + choiceHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] - choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] + choiceHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] - choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] - choiceHeight / 2\n          }\n        );\n        \n        // realtime not active\n        if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n          this.rtData['choice'].push(\n            {\n              x: choiceX[i],\n              y: choiceY[i],\n              width: choiceWidth,\n              height: choiceHeight\n            }\n          );\n        }\n        \n      }\n    }\n    this.realtimeRowDataAdded = true;\n\n    let fixXPos: number[] = [];\n    let fixYPos: number[] = [];\n    let testXPos: number[][] = [];\n    let testYPos: number[][] = [];\n    let numTarget = [0, 0];\n\n    for (let i = 0; i < touchevent.length; i++) {\n      xPos = touchevent[i][0];\n      yPos = data.ViewportPixels[1] - touchevent[i][1];\n\n      let yDataIndex: number;\n      if (i % 2 == 0) {\n        yDataIndex = i / 2;\n      } else {\n        yDataIndex = (i - 1) / 2;\n      }\n\n      if (xPos != -1) {\n        let arr = new Array(numColumnXYPos);\n        arr[0] = xPos;\n\n        if (i % 2 == 0) {\n          fixXPos.push(xPos);\n          fixYPos.push(yPos);\n\n          if (yData[yDataIndex] == 1) {\n            arr[numDisplayElems + 1] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          } else {\n            arr[numDisplayElems + 2] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          }\n        } else {\n          let testXPosArr: number[] = [];\n          let testYPosArr: number[] = [];\n          \n          for (let j = 0; j < _.size(data.TestGridIndex); j++) {\n            if (data.Response[yDataIndex] == j) {\n              testXPosArr.push(xPos);\n              testYPosArr.push(yPos);\n              numTarget[j] += 1;\n            } else {\n              testXPosArr.push(0);\n              testYPosArr.push(0);\n            }\n\n            testXPos.push(testXPosArr);\n            testYPos.push(testYPosArr);\n          }\n\n          if (yData[yDataIndex] == 1) {\n            arr[numDisplayElems + 3] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          } else {\n            arr[numDisplayElems + 4] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          }\n        }\n      }\n\n      let meanFixXPos = _.mean(fixXPos);\n      let meanFixYPos = _.mean(fixYPos);\n      let distFixXPos = fixXPos.map((a: number) => {\n        return Math.pow(Math.abs(a - meanFixXPos), 2);\n      });\n      let distFixYPos = fixYPos.map((a: number) => {\n        return Math.pow(Math.abs(a - meanFixYPos), 2);\n      });\n      let stdevFix = distFixXPos.map((a: number, idx: number) => {\n        return Math.sqrt(a + distFixYPos[idx]);\n      }).reduce((a: number, b: number) => {\n        return a + b;\n      }, 0) / _.size(distFixXPos);\n      this.vitals.stdevFix = stdevFix;\n\n      let stdevTest: number[] = [];\n      for (let j = 0; j < _.size(data.TestGridIndex); j++) {\n        let allTestXPos = testXPos.map((a: number[]) => {\n          return a[j];\n        }).filter((a: number) => {\n          return a != 0;\n        });\n\n        let meanTestXPos = allTestXPos.reduce((a: number, b: number) => {\n          return a + b;\n        }, 0) / _.size(allTestXPos);\n\n        let distTestXPos = allTestXPos.map((a: number) => {\n          return Math.pow(Math.abs(a - meanTestXPos), 2);\n        });\n\n        let allTestYPos = testYPos.map((a: number[]) => {\n          return a[j];\n        }).filter((a: number) => {\n          return a != 0;\n        });\n\n        let meanTestYPos = allTestYPos.reduce((a: number, b: number) => {\n          return a + b;\n        }, 0) / _.size(allTestYPos);\n\n        let distTestYPos = allTestYPos.map((a: number) => {\n          return Math.pow(Math.abs(a - meanTestYPos), 2);\n        });\n\n        stdevTest.push(\n          distTestXPos.map((a: number, i: number) => {\n            return Math.sqrt(a + distTestYPos[i]);\n          }).reduce((a: number, b: number) => {\n            return a + b;\n          }, 0) / _.size(allTestXPos)\n        );\n      }\n      this.vitals.stdevTest = stdevTest;\n    }\n\n    yDataSmall = utils.smooth(yData, 5);\n    yDataLarge = utils.smooth(yData, 100);\n\n    // Calculate timeEnd\n    let timeEnd: number;\n    if (\n      _.isUndefined(data.ResponseXYT)\n      || _.size(data.ResponseXYT) < 1\n      || _.isUndefined(data.ResponseXYT[2][_.size(data.ResponseXYT[2]) -1])\n    ) {\n      timeEnd = data.FixationXYT[2][_.size(data.FixationXYT[2]) - 1];\n    } else {\n      timeEnd = data.ResponseXYT[2][_.size(data.ResponseXYT[2]) - 1];\n    }\n\n    // RFID\n    let numTrials = _.size(yData);\n    let numReads = _.size(data.RFIDTag);\n    numRFID = _.fill(Array(numTrials), 0);\n    this.vitals.tagCount = {};\n\n    for (let i = 0; i < numReads; i++) {\n      if (_.isUndefined(this.vitals.tagCount[data.RFIDTag[i][2]])) {\n        this.vitals.tagCount[data.RFIDTag[i][2]] = 0;\n      }\n      this.vitals.tagCount[data.RFIDTag[i][2]] += 1;\n      numRFID[data.RFIDTag[i][0]] += 1;\n    }\n\n    for (let i = 1; i < _.size(numRFID); i++) {\n      numRFID[i] = numRFID[i] + numRFID[i - 1];\n    }\n\n    // Adding rest of the data\n    for (let i = 0; i < _.size(yData); i++) {\n      let timeFix = data.FixationXYT[2][i] // in milliseconds\n      if (timeFix < 0) {\n        continue;\n      }\n\n      let t = new Date(file.dateSaved!);\n      t.setTime(t.getTime() - (timeEnd - timeFix));\n\n      this.perfDataTable.addRows([[xData[i], yDataSmall[i], yDataLarge[i]]]);\n      this.cumulDataTable.addRows([[t, numTotal[i], numCorrect[i], numRFID[i]]]);\n    }\n    this.formatDate(this.cumulDataTable, 0);\n  }\n\n  private generateAndAddRowData(\n    target: google.visualization.DataTable, \n    numColumns: number, \n    data: Record<number, number | string>\n  ) {\n    // console.log('data', data);\n    let arr = [];\n    for (let i = 0; i < numColumns; i++) {\n      if (_.has(data, i)) {\n        arr.push(data[i]);\n      } else {\n        arr.push(null);\n      }\n    }\n    // console.log('arr:', arr);\n    target.addRows([arr]);\n  }\n\n  // TODO: deal with case where SampleScenes[0].OBJECTS[firstKey].sizeInches is an\n  // Array of arrays -- i.e. scene movie\n  private getSampleWidth(fileData: LiveplotDataType) {\n    let sampleWidth = 0;\n    if (_.size(fileData.SampleScenes[0].IMAGES.imageidx) > 0) {\n      if (_.isArray(fileData.SampleScenes[0].IMAGES.sizeInches)) {\n        let maxSizeInches = _.max(fileData.SampleScenes[0].IMAGES.sizeInches);\n        if (_.isNumber(maxSizeInches)) {\n          sampleWidth = maxSizeInches * fileData.ViewportPPI;\n        }\n      } else {\n        console.error(\n          'SampleScenes[0].IMAGES.sizeInches is not an array. Please fix!'\n        );\n        sampleWidth = (\n          fileData.SampleScenes[0].IMAGES.sizeInches * fileData.ViewportPPI\n        );\n      }\n    } else {\n      let firstKey = _.findKey(fileData.SampleScenes[0].OBJECTS);\n      if (_.isString(firstKey)) {\n        let maxSizeInches = (\n          _.max(fileData.SampleScenes[0].OBJECTS[firstKey].sizeInches)\n        );\n        if (_.isNumber(maxSizeInches)) {\n          sampleWidth = maxSizeInches * fileData.ViewportPPI;\n        } \n      } else {\n        console.error(\n          'firstKey of SampleScenes[0].OBJECTS is not of type string'\n        );\n      }  \n    }\n    return sampleWidth;\n  }\n\n  private getTestWidth(fileData: LiveplotDataType) {\n    let testWidth = 0;\n\n    if (fileData.TestScenes[0].IMAGES.imageidx.length > 0) {\n      if (_.isArray(fileData.TestScenes[0].IMAGES.sizeInches)) {\n        let maxSizeInches = _.max(fileData.TestScenes[0].IMAGES.sizeInches);\n        if (_.isNumber(maxSizeInches)) {\n          testWidth = maxSizeInches * fileData.ViewportPPI;\n        } else {\n          console.error(\n            'TestScenes[0].IMAGES.sizeInches is not of type number'\n          );\n        }\n      } else {\n        console.error(\n          'TestScenes[0].IMAGES.sizeInches is not an array. Please fix!'\n        );\n        testWidth = (\n          fileData.TestScenes[0].IMAGES.sizeInches * fileData.ViewportPPI\n        );\n      }\n    } else {\n      let firstKey = _.findKey(fileData.TestScenes[0].OBJECTS);\n      if (_.isString(firstKey)) {\n        let maxSizeInches = (\n          _.max(fileData.TestScenes[0].OBJECTS[firstKey].sizeInches)\n        );\n        if (_.isNumber(maxSizeInches)) {\n          testWidth = maxSizeInches * fileData.ViewportPPI;\n        } else {\n          console.error(\n            'firstKey of TestScenes[0].OBJECTS is not of type string'\n          );\n        }\n      }\n    }\n\n    if (!_.isUndefined(fileData.NRSVP) && fileData.NRSVP > 0) {\n      testWidth = fileData.SampleFixationSizeInches * fileData.ViewportPPI;\n    }\n\n    return testWidth;\n  }\n\n  private getFixationWidth(fileData: LiveplotDataType, sampleWidth: number) {\n    let fixationWidth = 0;\n\n    if (fileData.FixationUsesSample <= 0) {\n      fixationWidth = fileData.FixationSizeInches * fileData.ViewportPPI;\n    } else {\n      fixationWidth = sampleWidth;\n    }\n    return fixationWidth;\n  }\n\n  private getChoiceWidth(fileData: LiveplotDataType) {\n    let choiceWidth = 0;\n    if (\n      !_.isUndefined(fileData.SameDifferent)\n      && fileData.SameDifferent > 0\n    ) {\n      choiceWidth = fileData.ChoiceSizeInches * fileData.ViewportPPI;\n    }\n    return choiceWidth;\n  }\n\n  private loadObjPerfData(data: LiveplotDataType) {\n    this.objPerfDataTable.removeRows(\n      0, this.objPerfDataTable.getNumberOfRows()\n    );\n  \n    let lenSampleObj: number;\n    if (data.RewardStage == 1) {\n      let sampleObj = [];\n      if (data.NTrialsPerBagBlock > 5000) {\n        sampleObj.push(data.ImageBagsSample[0].split('/')[5]);\n        this.objPerfDataTable.addRow([sampleObj[0], 0]);\n        lenSampleObj = 1;\n      } else {\n        for (let i = 0; i < _.size(data.ImageBagsSample); i++) {\n          sampleObj.push(data.ImageBagsSample[i].split('/')[5]);\n          this.objPerfDataTable.addRow([sampleObj[i], 0]);\n        }\n        lenSampleObj = _.size(sampleObj);\n      }\n\n      let NDiffObjPerf = _.fill(Array(lenSampleObj), 0);\n      let NDiffObj = _.fill(Array(lenSampleObj), 0);\n      for (let i = 0; i < _.size(data.Sample[0]); i++) { // For i trials\n        for (let j = 0; j < lenSampleObj; j++) {\n          // If sample was that object\n          if (data.SampleBagIdx[data.Sample[0][i]] == j) {\n            NDiffObj[j] += 1;\n            // If correct\n            if (data.Response[i] == data.CorrectItem[i]) {\n              NDiffObjPerf[j] += 1;\n            }\n          }\n          this.objPerfDataTable.setValue(j, 1, NDiffObjPerf[j] / NDiffObj[j]);\n        }\n      }\n    }\n  }\n\n  private loadChoiceData(data: LiveplotDataType) {\n    this.choiceDataTable.removeRows(0, this.choiceDataTable.getNumberOfRows());\n    \n    if (data.RewardStage != 0) {\n      // let possibleResp = _.fill(Array(_.size(data.ObjectGridIndex)), 0);\n      let possibleResp = [];\n      \n      if (\n        _.size(data.ObjectGridIndex) != 0\n        && (_.isUndefined(data.NTrialsPerBagBlock) \n        || data.NTrialsPerBagBlock < 1000)\n      ) {\n        let objGridIndex = _.cloneDeep(data.ObjectGridIndex);\n        objGridIndex.sort((a: number, b: number) => {\n          return a - b;\n        });\n        let allind = [];\n        for (let i = 0; i < _.size(objGridIndex); i++) {\n          // allind.push(_.findIndex(data.ObjectGridIndex, objGridIndex[i]));\n          allind.push(data.ObjectGridIndex.indexOf(objGridIndex[i]));\n          this.choiceDataTable.addRow(\n            [data.ImageBagsSample[allind[i]].split('/')[5], 0]\n          );\n          possibleResp.push(i);\n        }\n      } else {\n        for (let i = 0; i < _.size(data.TestGridIndex); i++) {\n          this.choiceDataTable.addRow(['choice' + (i + 1), 0]);\n          possibleResp.push(i);\n        }\n      }\n\n      let NDiffChoice = _.fill(Array(_.size(possibleResp)), 0);\n      let NAllChoice = 0;\n\n      for (let i = 0; i < _.size(data.Response); i++) {\n        if (data.Response[i] != -1) {\n          NAllChoice++;\n        }\n\n        for (let j = 0; j < _.size(possibleResp); j++) {\n          if (data.Response[i] == possibleResp[j] && data.Response[i] != -1) {\n            NDiffChoice[j]++;\n          }\n          this.choiceDataTable.setValue(j, 1, NDiffChoice[j] / NAllChoice);\n        }\n      }\n    } else {\n      this.choiceDataTable.addRow(['outside Fix', 0]);\n      this.choiceDataTable.addRow(['inside Fix', 0]);\n\n      let NDiffChoice = _.fill(Array(2), 0);\n      let NAllChoice = 0;\n      let yData = [];\n\n      for (let i = 0; i < _.size(data.CorrectItem); i++) {\n        if (data.CorrectItem[i] == data.Response[i]) {\n          yData.push(1);\n        } else {\n          yData.push(0);\n        }\n      }\n\n      for (let i = 0; i < _.size(yData); i++) {\n        NAllChoice++;\n\n        for (let j = 0; j < 2; j++) {\n          if (yData[i] == j) {\n            NDiffChoice[j] += 1;\n          }\n          this.choiceDataTable.setValue(j, 1, NDiffChoice[j] / NAllChoice);\n        }\n      }\n    }\n  }\n\n  private loadRewardData(data: LiveplotDataType) {\n    this.rewardDataTable.removeRows(0, this.rewardDataTable.getNumberOfRows());\n    let NRewardMax = [];\n    for (let i = 0; i < data.NRewardMax; i++) {\n      NRewardMax.push(i.toString());\n    }\n    // NRewardMax.unshift('-1');\n\n    for (let i = 0; i < _.size(NRewardMax); i++) {\n      this.rewardDataTable.addRow([NRewardMax[i], 0]);\n    }\n\n    let NDiffReward = _.fill(Array(_.size(NRewardMax)), 0);\n\n    for (let i = 0; i < _.size(data.NReward); i++) {\n      if (data.Response[i] == -1) {\n        NDiffReward[0]++;\n        this.rewardDataTable.setValue(\n          0, 1, NDiffReward[0] / _.size(data.NReward)\n        );\n      } else {\n        for (let j = 1; j < _.size(NRewardMax); j++) {\n          if (data.NReward[i].toString() == NRewardMax[j]) {\n            NDiffReward[j]++;\n          }\n          this.rewardDataTable.setValue(\n            j, 1, NDiffReward[j] / _.size(data.NReward)\n          );\n        }\n      }\n    }\n  }\n\n  private drawPerformancePlot(file: FileType) {\n    let numRows = this.perfDataTable.getNumberOfRows();\n    this.nTrials = numRows;\n    let perfFilterState: any = this.perfFilter.getState();\n\n    // updating perfFilter\n    if (file.dataChanged && !file.fileChanged) {\n      if (numRows <= 100) {\n        // expand window size automatically up to 100\n        perfFilterState.range.start = 0;\n        perfFilterState.range.end = numRows;   \n      } else {\n        let dTrials = numRows - _.size(file.data?.FixationGridIndex);\n        console.log('dtrials', dTrials);\n        perfFilterState.range.start = numRows - 100;\n        perfFilterState.range.end = numRows;\n      }\n    } else if (file.fileChanged) {\n      let dSlider = 100;\n      perfFilterState.range.start = numRows - dSlider;\n      perfFilterState.range.end = numRows;\n      if (perfFilterState.range.start < 0) {\n        perfFilterState.range.start = 0;\n      }\n    }\n\n    this.perfPlot.setOptions(this.perfPlotOptions);\n    this.perfFilter.setState({\n      range: {\n        start: perfFilterState.range.start,\n        end: perfFilterState.range.end\n      }\n    });\n    this.perfDashboard.draw(this.perfDataTable);\n  }\n\n  private drawTrialPlot(file: FileType) {\n    let trialFilterState: any = this.trialFilter.getState();\n    let tmin = new Date(this.cumulDataTable.getColumnRange(0).min);\n    let tmax = new Date(this.cumulDataTable.getColumnRange(0).max);\n\n    if (file.dataChanged || file.fileChanged) {\n      trialFilterState.range.start = tmin;\n      trialFilterState.range.end = tmax;\n    }\n\n    this.trialFilter.setState({\n      range: {\n        start: trialFilterState.range.start,\n        end: trialFilterState.range.end\n      }\n    });\n    this.trialPlot.setOptions(this.trialPlotOptions);\n    this.trialDashboard.draw(this.cumulDataTable);\n  }\n\n  private drawObjPerfPlot() {\n    this.objPerfPlot.draw(this.objPerfDataTable, this.objPerfPlotOptions);\n  }\n\n  private drawRxnTimePlot() {\n    this.rxnPlot.draw(this.rxnTimeDataTable, this.rxnPlotOptions);\n  }\n\n  private drawChoicePlot() {\n    this.choicePlot.draw(this.choiceDataTable, this.choicePlotOptions);\n  }\n\n  private drawRewardPlot() {\n    this.rewardPlot.draw(this.rewardDataTable, this.rewardPlotOptions);\n  }\n\n  private drawRealtimePlot(data: LiveplotDataType) {\n    let idx = 0;\n    this.realtimePlotOptions = {\n      seriesType: 'scatter',\n      width: data.workspace[2] * data.CanvasRatio,\n      height: data.ViewportPixels[1] - data.offsettop,\n      legend: {\n        position: 'top'\n      },\n      hAxis: {\n        title: 'X position (px)',\n        viewWindow: {\n          min: 0,\n          max: data.workspace[2] * data.CanvasRatio\n        }\n      },\n      vAxis: {\n        title: 'Y position (px)',\n        viewWindow: {\n          min: 0,\n          max: data.ViewportPixels[1] - data.offsettop\n        }\n      }\n    };\n    this.realtimePlotOptions.hAxis = {\n      title: 'X position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.workspace[2] * data.CanvasRatio\n      }\n    };\n    this.realtimePlotOptions.vAxis = {\n      title: 'Y position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[1] - data.offsettop\n      }\n    };\n    let numCol = this.realtimeDataTable.getNumberOfColumns();\n    this.generateAndAddRowData(\n      this.realtimeDataTable,\n      numCol,\n      {0: 0, [numCol - 2]: 0}\n    );\n    let numRows = this.realtimeDataTable.getNumberOfRows();\n\n    this.realtimePlotConfig = {\n      chartType: 'ComboChart',\n      containerId: 'realtime-plot',\n      options: this.realtimePlotOptions\n    };\n    this.realtimePlot = (\n      new google.visualization.ChartWrapper(this.realtimePlotConfig)\n    );\n    this.realtimePlot.setDataTable(this.realtimeDataTable);\n    window.addEventListener('data_arrived', (evt: CustomEventInit) => {\n      if (idx % 2 == 0) {\n        this.realtimeDataTable.setValue(numRows - 1, 0, Math.floor(evt.detail.x));\n        this.realtimeDataTable.setValue(numRows - 1, numCol - 2, Math.floor(evt.detail.y));\n        this.realtimePlot.draw();\n      }\n    });\n  }\n\n  private drawStaticElements(cvs: HTMLCanvasElement, ctx: CanvasRenderingContext2D | null, data: LiveplotDataType, evt: CustomEventInit) {\n    if (ctx) {\n      ctx.fillStyle = 'gray';\n      ctx.fillRect(\n        0,\n        0,\n        data.workspace[2] * data.CanvasRatio,\n        data.ViewportPixels[1] - data.offsettop\n      );\n\n      for (let idx in evt.detail.boundingBoxes) {\n        let width = evt.detail.boundingBoxes[idx]['x_1'] - evt.detail.boundingBoxes[idx]['x_0'];\n        let height = evt.detail.boundingBoxes[idx]['y_1'] - evt.detail.boundingBoxes[idx]['y_0'];\n        ctx.beginPath();\n        ctx.rect(\n          _.floor(evt.detail.boundingBoxes[idx]['x_0']),\n          _.floor(cvs.height - evt.detail.boundingBoxes[idx]['y_0']),\n          width,\n          -height\n        );\n        ctx.stroke();\n      }\n\n\n    }\n    // if (ctx) {\n    //   ctx.fillStyle = 'gray';\n    //   ctx.fillRect(\n    //     0, \n    //     0, \n    //     data.workspace[2] * data.CanvasRatio,\n    //     data.ViewportPixels[1] - data.offsettop\n    //   );\n\n    //   // Fixation\n    //   if (data.FixationUsesSample < 1) {\n    //     ctx.strokeStyle = '#0000FF';\n    //     ctx.beginPath();\n    //     ctx.arc(\n    //       this.rtData.fixation.x,\n    //       cvs.height - this.rtData.fixation.y,\n    //       this.rtData.fixation.width / 2,\n    //       0,\n    //       Math.PI * 2,\n    //       true\n    //     );\n    //     ctx.stroke();\n    //   }\n    \n    //   // Sample\n    //   ctx.strokeStyle = '#000000'; // black\n    //   ctx.beginPath();\n    //   ctx.rect(\n    //     this.rtData.sample.x - this.rtData.sample.width / 2,\n    //     cvs.height - (this.rtData.sample.y + this.rtData.sample.height / 2),\n    //     this.rtData.sample.width,\n    //     this.rtData.sample.height\n    //   );\n    //   ctx.stroke();\n\n    //   // Test\n    //   for (let i = 0; i < _.size(this.rtData['test']); i++) {\n    //     console.log('test');\n    //     ctx.beginPath();\n    //     ctx.rect(\n    //       this.rtData['test'][i].x - this.rtData['test'][i].width / 2,\n    //       cvs.height - (this.rtData['test'][i].y + this.rtData['test'][i].height / 2),\n    //       this.rtData['test'][i].width,\n    //       this.rtData['test'][i].height\n    //     );\n    //     ctx.stroke();\n    //   }\n\n    //   // Choice\n    //   for (let i = 0; i < _.size(this.rtData['choice']); i++) {\n    //     ctx.beginPath();\n    //     ctx.rect(\n    //       this.rtData['choice'][i].x - this.rtData['choice'][i].width / 2,\n    //       cvs.height - (this.rtData['choice'][i].y + this.rtData['choice'][i].height / 2),\n    //       this.rtData['choice'][i].width,\n    //       this.rtData['choice'][i].height\n    //     );\n    //     ctx.stroke();\n    //   }\n\n    //   let fixWinSz = data.FixationWindowSizeInches;\n\n    //   if (_.isNumber(fixWinSz) && fixWinSz > 0) {\n    //     ctx.strokeStyle = '#FFFF00'; // yellow\n    //     ctx.strokeRect(\n    //       this.rtData.fixation.x - _.floor(fixWinSz / 2 * data.ViewportPPI),\n    //       cvs.height \n    //       - (this.rtData.fixation.y + _.floor(fixWinSz / 2 * data.ViewportPPI)),\n    //       _.floor(fixWinSz * data.ViewportPPI),\n    //       _.floor(fixWinSz * data.ViewportPPI)\n    //     );\n    //   }\n    // }\n  }\n\n\n  private drawRealtimePlot2(data: LiveplotDataType) {\n    let cvs = document.querySelector('#realtime-canvas') as HTMLCanvasElement;\n    cvs.width = data.workspace[2] * data.CanvasRatio;\n    cvs.height = data.ViewportPixels[1] - data.offsettop;\n    let ctx = cvs.getContext('2d') as CanvasRenderingContext2D;\n    window.addEventListener('data_arrived', (evt: CustomEventInit) => {\n\n      if (evt.detail.meta == 2) {\n        this.drawStaticElements(cvs, ctx, data, evt);\n      }\n\n      if (evt.detail.meta == 1) {\n        ctx.fillStyle = 'green';\n      } else if (evt.detail.meta == 0) {\n\n        ctx.fillStyle = 'red';\n      }\n\n      ctx?.beginPath();\n      let x = _.floor(evt.detail.x);\n      let y = _.floor(cvs.height - evt.detail.y);\n      ctx?.arc(x, y, 2, 0, Math.PI * 2, true);\n      ctx?.fill();\n    });\n\n  }\n\n  private drawScreenPlot(data: LiveplotDataType, screenActive: boolean) {\n\n    this.screenPlotOptions.series = [];\n    for (let i = 0; i < this.xyPosDataTable.getNumberOfColumns(); i++) {\n      if (this.xyPosDataTable.getColumnLabel(i) == 'Fixation') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'gray' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Sample') {\n        this.screenPlotOptions.series[i - 1] = (\n          { type: 'line', color: 'black' }\n        );\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Same') {\n        this.screenPlotOptions.series[i - 1] = (\n          { type: 'line', color: 'green' }\n        );\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Different') {\n        this.screenPlotOptions.series[i - 1] = (\n          { type: 'line', color: 'red' }\n        );\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Fix_Reward') {\n        this.screenPlotOptions.series[i - 1] = { color: 'blue' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Fix_Punish') {\n        this.screenPlotOptions.series[i - 1] = { color: 'red' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Target_Reward') {\n        this.screenPlotOptions.series[i - 1] = { color: 'green' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Target_Punish') {\n        this.screenPlotOptions.series[i - 1] = { color: 'black' };\n      } else if (this.xyPosDataTable.getColumnLabel(i).includes('Test')) {\n        this.screenPlotOptions.series[i - 1] = (\n          { type: 'line', color: 'black' }\n        );\n      }\n    }\n\n    this.screenPlotOptions.height = data.ViewportPixels[1];\n    this.screenPlotOptions.width = data.ViewportPixels[0];\n    this.screenPlotOptions.hAxis = {\n      title: 'X position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[0]\n      }\n    };\n    this.screenPlotOptions.vAxis = {\n      title: 'Y position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[1]\n      }\n    };\n    if (!this.realtimePlotActive) {\n      this.screenPlot.draw(this.xyPosDataTable, this.screenPlotOptions);\n    }\n  }\n\n  private formatDate(data: google.visualization.DataTable, colIdx: number): void {\n    let formatter = new google.visualization.DateFormat({\n      pattern: 'h aa'\n    });\n    formatter.format(data, colIdx);\n  }\n\n  private formatNumber(data: google.visualization.DataTable, colIdx: number) {\n    let formatter = new google.visualization.NumberFormat({\n      fractionDigits: 2\n    });\n    formatter.format(data, colIdx);\n  }\n\n  private formatColor(data: google.visualization.DataTable, colIdx: number) {\n    let formatter = new google.visualization.ColorFormat();\n    let dx = 1 / (colorMapJet.length - 1);\n    for (let i = 0; i < colorMapJet.length; i++) {\n      formatter.addRange(i * dx, (i + 1) * dx, 'gray', colorMapJet[i]);\n    }\n    formatter.format(data, colIdx);\n  }\n\n\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport JSONEditor from 'jsoneditor';\nimport _ from 'lodash';\n// import 'jsoneditor/dist/jsoneditor.css'\n// import './jsoneditor.css';\nimport { Utils } from './utils';\nimport { Charts } from './charts';\nimport { FileType, LiveplotDataType } from './types';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\nconst rtdb = firebase.database();\n\nconst DATA_PATH = 'mkturkfiles/datafiles/'\nconst DATA_REF = storageRef.child(DATA_PATH);\nconst PARAM_PATH = 'mkturkfiles/parameterfiles/subjects/';\nconst PARAM_REF = storageRef.child(PARAM_PATH);\nconst AGENTS_REF = rtdb.ref('agents/');\nconst utils = new Utils;\n\nexport class Liveplot {\n  public file: FileType;\n  public elemObjs: any;\n  public editor: JSONEditor;\n  public charts: Charts;\n  public streamActive: boolean;\n  public agentClientRef: firebase.database.Reference;\n\n  constructor(elemObj: any) {\n    this.elemObjs = elemObj;\n    this.file = {\n      path: DATA_PATH,\n      list: [],\n      name: '',\n      ver: null,\n      date: null,\n      dataChanged: false,\n      fileChanged: false,\n    };\n    this.charts = new Charts(elemObj);\n    this.streamActive = false;\n    this.requestRealtimeBtnAction();\n    this.onDisconnectAction();\n  }\n\n  public fileSelectionChangedListener(elem: HTMLSelectElement) {\n    elem.addEventListener('input', (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      if (this.streamActive) {\n        let agent = this.file.data?.Agent!;\n        rtdb.ref(`data/${agent}`).off();\n        this.agentClientRef.remove(err => {\n          if (err) {\n            console.error(`Error Removing agentClientRef: ${err}`);\n          }\n        });\n        this.streamActive = false;\n      }\n      this.file.name = this.file.list[parseInt(elem.value)].fullpath;\n      this.file.fileChanged = true;\n    });\n  }\n\n  public onDisconnectAction() {\n    window.addEventListener('unload', (evt: Event) => {\n      this.agentClientRef.onDisconnect().remove();\n    });\n  }\n\n  public requestRealtimeBtnAction() {\n    let realtimeBtn = this.elemObjs.realtimeBtn;\n    realtimeBtn.addEventListener('click', async (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      let agent = this.file.data?.Agent!;\n      if (this.streamActive) {\n        realtimeBtn.innerHTML = 'Request Realtime Stream';\n        rtdb.ref(`data/${agent}`).off();\n        this.agentClientRef.remove(err => {\n          if (err) {\n            console.error(`Error Removing agentClientRef: ${err}`);\n          }\n        });\n        rtdb.ref(`data/${agent}`).off();\n        this.streamActive = false;\n      } else {\n        realtimeBtn.innerHTML = 'Deactivate Realtime Stream';\n        let agentClientKey = rtdb.ref(`agents/${agent}`).push().key;\n        this.agentClientRef = rtdb.ref(`agents/${agent}/${agentClientKey}`);\n        if (_.isString(agentClientKey)) {\n          rtdb.ref(`agents/${agent}`).update({\n            [agentClientKey]: true\n          });\n        }\n        rtdb.ref(`data/${agent}`).on('value', snap => {\n          let event = (\n            new CustomEvent('data_arrived', { detail: snap.val() })\n          );\n          window.dispatchEvent(event);\n        });\n        this.streamActive = true;\n      }\n    });\n  }\n\n  public async populateFileList(elem: HTMLSelectElement) {\n    try {\n      let fileList = await utils.getFileList(this.file.path);\n\n      fileList.sort((a: any, b: any) => {\n        let nameA = a.name.toUpperCase();\n        let nameB = b.name.toUpperCase();\n\n        if (nameA > nameB) {\n          return -1;\n        }\n\n        if (nameA < nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n\n      this.file.list = fileList;\n\n      for (let i = 0; i < fileList.length; i++) {\n        let opt = document.createElement('option');\n        opt.value = i.toString();\n        opt.innerHTML = fileList[i].name;\n        elem.appendChild(opt);\n      }\n\n      this.file.name = this.file.list[0].fullpath;\n      this.file.fileChanged = true;\n      let rawStorageFile = await utils.getStorageFile(this.file.name);\n      // console.log('rawFile', rawStorageFile);\n      \n      this.processData(rawStorageFile);\n\n    } catch (error) {\n      console.error('ERROR #file-list:', error);\n    }\n\n\n  }\n\n  private flattenData(data: any) {\n\n    let tmp: any = {};\n\n    for (let outerKey in data) {\n      if (data.hasOwnProperty(outerKey)) {\n        for (let innerKey in data[outerKey]) {\n          if (data[outerKey].hasOwnProperty(innerKey)) {\n            tmp[innerKey] = data[outerKey][innerKey];\n          }\n        }\n      }\n    }\n\n    return tmp;\n  }\n\n  private async processData(data: any) {\n\n    this.file.data = this.flattenData(data);\n    this.loadDataToEditor(this.file.data);\n    // console.log(this.file.data);\n\n    let metadata = await utils.getStorageFileMetadata(this.file.name);\n    console.log('Success! Loaded File Size:', metadata.size / 1000, 'KB');\n    this.file.ver = metadata.generation;\n    this.file.dateSaved = new Date(metadata.updated);\n    console.log(this.file.dateSaved);\n\n    // this.file.data.CurrentDate = (\n    //   new Date(this.file.data.CurrentDate).valueOf()\n    // );\n\n    if (this.file.fileChanged) {\n      this.charts.initializeChartData(this.file, {streamActive: this.streamActive});\n      this.checkFileStatus();\n      this.file.fileChanged = false;\n      this.file.dataChanged = false;\n    } else if (this.file.dataChanged) {\n      this.charts.updatePlots(this.file, {streamActive: this.streamActive});\n      this.file.dataChanged = false;\n      this.checkFileStatus();\n    }\n  }\n\n  public setupEditor(elem: HTMLDivElement) {\n    this.editor = new JSONEditor(elem);\n  }\n\n  private loadDataToEditor(data: any) {\n    if (this.file.fileChanged) {\n      this.editor.set(data);\n    } else {\n      this.editor.update(data);\n    }\n  }\n\n  private async checkFileStatus() {\n    try {\n      let metadata = await utils.getStorageFileMetadata(this.file.name);\n\n      if (this.file.ver != metadata.generation) {\n        this.file.ver = metadata.generation;\n        this.file.dateSaved = new Date(metadata.updated);\n        console.log(this.file.dateSaved);\n        this.file.dataChanged = true;\n        console.log('File was updated ver=' + this.file.ver)\n      } else {\n        this.file.dataChanged = false;\n      }\n\n      if (this.file.fileChanged == true || this.file.dataChanged == true) {\n        let rawStorageFile = await utils.getStorageFile(this.file.name);\n        // console.log('rawFile', rawStorageFile);\n        this.processData(rawStorageFile);\n      } else {\n        setTimeout(() => {\n          this.checkFileStatus()\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('checkFileStatus Error:', error);\n    }\n    return false; // why needed\n  } \n\n}\n","import './styles.css'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA0fbv2VqE-AfF6V_nxSSXCEqaTlBlZnTI\",\n  authDomain: \"sandbox-ce2c5.firebaseapp.com\",\n  databaseURL: \"https://sandbox-ce2c5.firebaseio.com\",\n  projectId: \"sandbox-ce2c5\",\n  storageBucket: \"sandbox-ce2c5.appspot.com\",\n  messagingSenderId: \"1003719887944\",\n  clientId: \"1003719887944-rlc06cjecqrp9fgvmvo56vqop1otm9ht.apps.googleusercontent.com\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nimport { Liveplot } from './liveplot';\n\nlet fileListSelector = (\n  document.querySelector('#file-list') as HTMLSelectElement\n);\n\nlet editorDiv = (\n  document.querySelector('#editor') as HTMLDivElement\n);\n\nlet elemObj = {\n  perfDiv: document.querySelector('#performance-dashboard') as HTMLDivElement,\n  perfPlot: document.querySelector('#performance-plot') as HTMLDivElement,\n  perfFilter: document.querySelector('#performance-filter') as HTMLDivElement,\n  trialDiv: document.querySelector('#trial-dashboard') as HTMLDivElement,\n  trialPlot: document.querySelector('#trial-plot') as HTMLDivElement,\n  trialFilter: document.querySelector('#trial-filter') as HTMLDivElement,\n  screenPlot: document.querySelector('#screen-plot') as HTMLDivElement,\n  // realtimePlot: document.querySelector('#realtime-plot') as HTMLDivElement,\n  rxnPlot: document.querySelector('#reaction-plot') as HTMLDivElement,\n  choicePlot: document.querySelector('#choice-plot') as HTMLDivElement,\n  objPerfPlot: document.querySelector('#obj-perf-plot') as HTMLDivElement,\n  rewardPlot: document.querySelector('#reward-plot') as HTMLDivElement,\n  perfVitals: document.querySelector('#performance-vitals') as HTMLSpanElement,\n  rfidVitals: document.querySelector('#rfid-vitals') as HTMLSpanElement,\n  batteryVitals: document.querySelector('#battery-vitals') as HTMLSpanElement,\n  trialVitals: document.querySelector('#trial-vitals') as HTMLSpanElement,\n  fixStdev: document.querySelector('#fixation-stdev') as HTMLSpanElement,\n  tarZeroStdev: document.querySelector('#target0-stdev') as HTMLSpanElement,\n  tarOneStdev: document.querySelector('#target1-stdev') as HTMLSpanElement,\n  sdTextDiv: document.querySelector('#touch-sd-text') as HTMLDivElement,\n  realtimeBtn: document.querySelector('#request-realtime') as HTMLButtonElement,\n};\n\nconst lp = new Liveplot(elemObj);\nlp.setupEditor(editorDiv);\nlp.fileSelectionChangedListener(fileListSelector);\nlp.populateFileList(fileListSelector);\n\n\n\n\n\n\n\n// fileListSelector.addEventListener('change', evt => {\n//   evt.preventDefault();\n//   evt.stopPropagation();\n//   console.log('New File!');\n//   file.name = file.fileList[parseInt(fileListSelector.value)].fullpath;\n//   file.fileChanged = true;\n//   console.log('file name:', file.name);\n//   console.log('file path', file.path);\n// });\n\n// let file: any = {\n//   path: DATA_PATH,\n//   list: [],\n//   fileList: [],\n//   name: '',\n//   data: null,\n//   ver: null,\n//   date: null,\n//   dateChanged: false,\n//   fileChanged: false\n// };\n\n// console.log('hello hector');\n\n\n// async function populateDropdownMenu() {\n//   try {\n//     let fileList = await utils.getFileList(file.path);\n    \n\n//     fileList.sort((a: any, b: any) => {\n//       let nameA = a.name.toUpperCase();\n//       let nameB = b.name.toUpperCase();\n\n//       if (nameA > nameB) {\n//         return -1;\n//       }\n\n//       if (nameA < nameB) {\n//         return 1;\n//       }\n\n//       return 0;\n//     });\n\n//     file.fileList = fileList;\n    \n\n//     for (let i = 0; i < fileList.length; i++) {\n//       let opt = document.createElement('option');\n//       opt.value = i.toString();\n//       opt.innerHTML = fileList[i].name;\n//       fileListSelector.appendChild(opt);\n//     }\n    \n//     file.name = file.fileList[0].fullpath;\n//     file.fileChanged = true;\n  \n//   } catch (error) {\n//     console.error('ERROR #file-list:', error);\n//   }\n// }\n\n// populateDropdownMenu();\n\n\n// async function loadAndRenderEditor(filePath: string) {\n//   let dataFile = utils.getStorageFile(filePath);\n// }\n\nlet provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\nfirebase.auth().getRedirectResult().then(function(result) {\n  if (result.user) {\n    // User just signed in. you can get the result.credential.\n\tconsole.log('Sign-In Redirect Result, USER ' + result.user.email + ' is signed in')\n  }\n  else if (firebase.auth().currentUser) {\n    // User already signed in.\n\tconsole.log('Sign-In Redirect Result, USER is signed in')\n  }\n  else {\n    // No user signed in, update your UI, show the redirect sign-in screen.\n\tfirebase.auth().signInWithRedirect(provider)\n  }\n});","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\n\nexport class Utils {\n  constructor() {}\n\n  public async getFileList(path: string, ext?: string) {\n    let fileList = await storageRef.child(path).listAll();\n    /* only keep files within the last 2 years*/\n    let year = new Date().getFullYear();\n    let files: any = [];\n\n    for (let item of fileList.prefixes) {\n      let subFileList = (\n        await this.getFileList(path + item.name + '/', ext)\n      );\n      files = [...files, ...subFileList];\n    }\n\n    for (let i = 0; i < fileList.items.length; i++) {\n      if (typeof(ext) == 'string') {\n        if (fileList.items[i].name.endsWith(ext)) { // if file extension is correct\n          files.push({\n            fullpath: fileList.items[i].fullPath,\n            name: fileList.items[i].name\n          });\n        }\n      } else if (parseInt(fileList.items[i].name.slice(0, 4)) >= year - 1) {\n        files.push({\n          fullpath: fileList.items[i].fullPath,\n          name: fileList.items[i].name\n        });\n      }\n    }\n\n    return files;\n  }\n\n  public async getStorageFile(path: string) {\n    let fileRef = storageRef.child(path);\n    // console.log('fileRef:', fileRef);\n    let file = await storageRef.child(path).getDownloadURL().then(async (url: string) => {\n      let response = await fetch(url);\n      return response.json();\n    }).catch(e => {\n      console.error('Error Getting URL:', e);\n    });\n    // console.log('file:', file);\n    return file;\n  }\n\n  public async getStorageFileMetadata(path: string) {\n    let fileRef = storageRef.child(path);\n    let metadata = await fileRef.getMetadata();\n    return metadata;\n  }\n\n  public smooth(data: any[], n: number) {\n    let smoothedData = [];\n    for (let i = 0; i < data.length; i++) {\n      if (i < n - 1) {\n        let tmp = data.slice(0, i + 1);\n        smoothedData[i] = tmp.reduce((a: any, b: any) => {\n          return a + b;\n        });\n        smoothedData[i] /= (i + 1);\n      } else {\n        let tmp = data.slice(i - n + 1, i + 1);\n        smoothedData[i] = tmp.reduce((a: number, b: number) => {\n          return a + b;\n        });\n        smoothedData[i] /= n;\n      }\n    }\n    return smoothedData;\n  }\n\n  public calcDistance(a: number, b: number) {\n    return Math.pow(Math.abs(a - b), 2);\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\nvar deferredModules = [\n\t[519,802],\n\t[593,802]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = () => {\n\n};\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = () => {\n\n\t\t}\n\t}\n\treturn result;\n}\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = () => {\n\n\t}\n\tchunkLoadingGlobal = chunkLoadingGlobal.slice();\n\tfor(var i = 0; i < chunkLoadingGlobal.length; i++) webpackJsonpCallback(chunkLoadingGlobal[i]);\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tparentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkliveplot2\"] = self[\"webpackChunkliveplot2\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = webpackJsonpCallback;","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}