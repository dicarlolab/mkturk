{"version":3,"sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/charts.ts","webpack:///./src/liveplot.ts","webpack:///./src/main.ts","webpack:///./src/utils.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/harmony module decorator","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["deferred","colorMapJet","utils","Utils","constructor","elemObj","this","elemObject","realtimePlotActive","setupCharts","vitals","subject","pctCorrect","trials","time","batteryLeft","batteryUsed","rewardEstimate","automator","automatorStage","automatorStageName","numReward","rfidTag","rfidTime","tagCount","setupDataTables","perfDataTable","google","visualization","DataTable","healthDataTable","cumulDataTable","xyPosDataTable","rxnTimeDataTable","rewardDataTable","choiceDataTable","objPerfDataTable","realtimeDataTable","rtData","charts","load","packages","setupChartOptions","perfDashboard","Dashboard","perfDiv","perfPlot","ChartWrapper","perfPlotConfig","perfFilter","ControlWrapper","perfFilterConfig","trialDashboard","trialDiv","trialPlot","trialPlotConfig","trialFilter","trialFilterConfig","healthDashboard","healthDiv","healthPlot","healthPlotConfig","healthFilter","healthFilterConfig","bind","screenPlot","ComboChart","rxnPlot","Histogram","rewardPlot","ColumnChart","choicePlot","objPerfPlot","perfPlotOptions","width","clientWidth","height","clientHeight","hAxis","title","vAxis","viewWindow","min","max","animation","duration","easing","startup","series","color","chartType","containerId","options","perfFilterOptions","filterColumnLabel","ui","chartOptions","smooth","baselineColor","chartView","columns","minRangeSize","controlType","state","range","start","end","trialPlotOptions","areaOpacity","vAxes","targetAxisIndex","trialFilterOptions","healthPlotOptions","healthFilterOptions","screenPlotOptions","seriesType","pointSize","rxnPlotOptions","legend","position","rewardPlotOptions","minValue","maxValue","choicePlotOptions","objPerfPlotOptions","initializeChartData","file","plotOptions","removeRows","getNumberOfRows","removeColumns","getNumberOfColumns","realtimeRowDataAdded","addColumn","data","SameDifferent","i","TestGridIndex","length","updatePlots","fileData","isUndefined","console","log","loadVitals","loadVitalsText","loadPerformanceData","loadHealthData","loadObjPerfData","loadChoiceData","loadRewardData","drawPerformancePlot","drawTrialPlot","drawHealthPlot","drawObjPerfPlot","drawRxnTimePlot","drawChoicePlot","drawRewardPlot","loadTouchSDText","streamActive","drawScreenPlot","drawRealtimePlot2","Subject","Response","startTime","StartTime","round","toNumber","last","RFIDTag","size","Date","toLocaleTimeString","Automator","CurrentAutomatorStage","CurrentAutomatorStageName","battery","Battery","numCorrect","CorrectItem","NReward","reduce","a","b","RewardPer1000Trials","perfVitals","innerHTML","rfidVitals","batteryVitals","trialVitals","dateSaved","Math","stdevFix","stdevTest","err","error","xPos","yPos","xData","yData","yDataSmall","yDataLarge","numTotal","numRFID","touchevent","rt","RewardStage","FixationXYT","addRows","FixationTouchEvent","NRSVP","SampleFixationXYT","SampleStartTime","SampleFixationTouchEvent","ResponseXYT","ChoiceTimeOut","fixX","fixY","sampleX","sampleY","numColumnXYPos","sampleWidth","getSampleWidth","sampleHeight","testWidth","getTestWidth","testHeight","fixationWidth","getFixationWidth","fixationHeight","choiceWidth","getChoiceWidth","choiceHeight","numDisplayElems","maxFixationGridIndex","FixationGridIndex","isNumber","XGridCenter","ViewportPixels","YGridCenter","offsettop","generateAndAddRowData","x","y","maxSampleGridIndex","SampleGridIndex","testX","testY","push","tmp","choiceX","choiceY","ChoiceGridIndex","timeEnd","fixXPos","fixYPos","testXPos","testYPos","numTarget","yDataIndex","arr","Array","testXPosArr","testYPosArr","j","meanFixXPos","mean","meanFixYPos","distFixXPos","map","pow","abs","distFixYPos","idx","sqrt","allTestXPos","filter","meanTestXPos","distTestXPos","allTestYPos","meanTestYPos","distTestYPos","numTrials","numReads","fill","timeFix","t","setTime","getTime","formatDate","target","numColumns","has","SampleScenes","IMAGES","imageidx","isArray","sizeInches","maxSizeInches","ViewportPPI","firstKey","findKey","OBJECTS","isString","TestScenes","SampleFixationSizeInches","FixationUsesSample","FixationSizeInches","ChoiceSizeInches","lenSampleObj","sampleObj","NTrialsPerBagBlock","ImageBagsSample","split","addRow","NDiffObjPerf","NDiffObj","Sample","SampleBagIdx","setValue","possibleResp","ObjectGridIndex","objGridIndex","cloneDeep","sort","allind","indexOf","NDiffChoice","NAllChoice","NRewardMax","toString","NDiffReward","Eye","TrackEye","lastIdx","Object","keys","TSequenceActualClip","dt","TSequenceDesiredClip","sampleCmdInterval","SampleCommandReturnTime","EyetrackerSampleInterval","numRows","nTrials","perfFilterState","getState","dataChanged","fileChanged","dTrials","dSlider","setOptions","setState","draw","healthFilterState","trialFilterState","tmin","getColumnRange","tmax","drawRealtimePlot","realtimePlotOptions","workspace","CanvasRatio","numCol","realtimePlotConfig","realtimePlot","setDataTable","window","addEventListener","evt","floor","detail","drawStaticElements","cvs","ctx","fillStyle","fillRect","boundingBoxes","beginPath","rect","stroke","document","querySelector","getContext","meta","arc","PI","screenActive","getColumnLabel","type","includes","colIdx","DateFormat","pattern","format","formatNumber","NumberFormat","fractionDigits","formatColor","formatter","ColorFormat","dx","addRange","storageRef","storage","ref","rtdb","database","DATA_PATH","child","elemObjs","path","list","name","ver","date","Charts","requestRealtimeBtnAction","onDisconnectAction","fileSelectionChangedListener","elem","stopPropagation","preventDefault","agent","Agent","off","agentClientRef","remove","parseInt","value","fullpath","onDisconnect","realtimeBtn","async","agentClientKey","key","update","on","snap","event","CustomEvent","val","dispatchEvent","fileList","getFileList","nameA","toUpperCase","nameB","opt","createElement","appendChild","rawStorageFile","getStorageFile","processData","flattenData","outerKey","hasOwnProperty","innerKey","loadDataToEditor","metadata","getStorageFileMetadata","generation","updated","checkFileStatus","setupEditor","editor","set","setTimeout","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","clientId","fileListSelector","editorDiv","fixStdev","tarZeroStdev","tarOneStdev","sdTextDiv","lp","Liveplot","populateFileList","provider","auth","GoogleAuthProvider","addScope","getRedirectResult","then","result","user","email","currentUser","signInWithRedirect","ext","listAll","year","getFullYear","files","item","prefixes","subFileList","items","endsWith","fullPath","slice","getDownloadURL","url","fetch","json","catch","e","fileRef","getMetadata","n","smoothedData","calcDistance","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","hmd","create","children","Error","obj","prop","prototype","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","__webpack_exports__"],"mappings":"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","file":"main.bundle.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import _, { last, sample } from 'lodash';\nimport { FileType, LiveplotDataType } from './types';\nimport { Utils } from './utils';\n\nconst colorMapJet = [\n  '#00008F','#00009F','#0000AF','#0000BF',\n  '#0000CF','#0000DF','#0000EF','#0000FF',\n  '#0010FF','#0020FF','#0030FF','#0040FF',\n  '#0050FF','#0060FF','#0070FF','#0080FF',\n  '#008FFF','#009FFF','#00AFFF','#00BFFF',\n  '#00CFFF','#00DFFF','#00EFFF','#00FFFF',\n  '#10FFEF','#20FFDF','#30FFCF','#40FFBF',\n  '#50FFAF','#60FF9F','#70FF8F','#80FF80',\n  '#8FFF70','#9FFF60','#AFFF50','#BFFF40',\n  '#CFFF30','#DFFF20','#EFFF10','#FFFF00',\n  '#FFEF00','#FFDF00','#FFCF00','#FFBF00',\n  '#FFAF00','#FF9F00','#FF8F00','#FF8000',\n  '#FF7000','#FF6000','#FF5000','#FF4000',\n  '#FF3000','#FF2000','#FF1000','#FF0000',\n  '#EF0000','#DF0000','#CF0000','#BF0000',\n  '#AF0000','#9F0000','#8F0000','#800000'\n];\n\nconst utils = new Utils();\n\n\nexport class Charts {\n\n  public elemObject: any;\n  public perfDataTable: google.visualization.DataTable;\n  public cumulDataTable: google.visualization.DataTable;\n  public xyPosDataTable: google.visualization.DataTable;\n  public rxnTimeDataTable: google.visualization.DataTable;\n  public rewardDataTable: google.visualization.DataTable;\n  public choiceDataTable: google.visualization.DataTable;\n  public objPerfDataTable: google.visualization.DataTable;\n  public realtimeDataTable: google.visualization.DataTable;\n  public healthDataTable: google.visualization.DataTable;\n\n  public perfDashboard: google.visualization.Dashboard;\n  public trialDashboard: google.visualization.Dashboard;\n  public healthDashboard: google.visualization.Dashboard;\n\n  public perfPlot: google.visualization.ChartWrapper;\n  public perfPlotConfig: google.visualization.ChartSpecs;\n  public perfPlotOptions: google.visualization.LineChartOptions;\n  public perfFilter: google.visualization.ControlWrapper;\n  public perfFilterConfig: google.visualization.ControlWrapperOptions;\n  public perfFilterOptions: Object;\n\n  public trialPlot: google.visualization.ChartWrapper;\n  public trialPlotConfig: google.visualization.ChartSpecs;\n  public trialPlotOptions: google.visualization.AreaChartOptions;\n  public trialFilter: google.visualization.ControlWrapper;\n  public trialFilterConfig: google.visualization.ControlWrapperOptions;\n  public trialFilterOptions: Object;\n\n  public healthPlot: google.visualization.ChartWrapper;\n  public healthPlotConfig: google.visualization.ChartSpecs;\n  public healthPlotOptions: google.visualization.ScatterChartOptions;\n  public healthFilter: google.visualization.ControlWrapper;\n  public healthFilterConfig: google.visualization.ControlWrapperOptions;\n  public healthFilterOptions: Object;\n\n  public screenPlot: google.visualization.ComboChart;\n  public screenPlotOptions: google.visualization.ComboChartOptions;\n\n  public realtimePlot: google.visualization.ChartWrapper;\n  public realtimePlotConfig: google.visualization.ChartSpecs;\n  public realtimePlotOptions: google.visualization.ComboChartOptions;\n  public realtimePlotActive: boolean;\n  public realtimeRowDataAdded: boolean;\n  public rtData: any;\n\n  public rxnPlot: google.visualization.Histogram;\n  public rxnPlotOptions: google.visualization.HistogramOptions;\n\n  public rewardPlot: google.visualization.ColumnChart;\n  public rewardPlotOptions: google.visualization.ColumnChartOptions;\n\n  public choicePlot: google.visualization.ColumnChart;\n  public choicePlotOptions: google.visualization.ColumnChartOptions;\n\n  public objPerfPlot: google.visualization.ColumnChart;\n  public objPerfPlotOptions: google.visualization.ColumnChartOptions;\n\n\n  private vitals: any;\n  private nTrials: number;\n\n\n  constructor(elemObj: any) {\n    this.elemObject = elemObj;\n    this.realtimePlotActive = false;\n    this.setupCharts();\n\n    this.vitals = {\n      subject: null,\n      pctCorrect: 0,\n      trials: 0,\n      time: 0,\n      batteryLeft: 0,\n      batteryUsed: 0,\n      rewardEstimate: 0,\n      automator: '',\n      automatorStage: 0,\n      automatorStageName: '',\n      numReward: 0,\n      rfidTag: '',\n      rfidTime: 0,\n      tagCount: {}\n    }\n  }\n\n  public setupDataTables() {\n    this.perfDataTable = new google.visualization.DataTable();\n    this.healthDataTable = new google.visualization.DataTable();\n    this.cumulDataTable = new google.visualization.DataTable();\n    this.xyPosDataTable = new google.visualization.DataTable();\n    this.rxnTimeDataTable = new google.visualization.DataTable();\n    this.rewardDataTable = new google.visualization.DataTable();\n    this.choiceDataTable = new google.visualization.DataTable();\n    this.objPerfDataTable = new google.visualization.DataTable();\n    this.realtimeDataTable = new google.visualization.DataTable();\n    this.rtData = {};\n\n  }\n\n  public async setupCharts() {\n    await google.charts.load('50', { packages: ['corechart', 'controls'] });\n    this.setupChartOptions();\n    this.setupDataTables();\n\n    this.perfDashboard = (\n      new google.visualization.Dashboard(this.elemObject.perfDiv)\n    );\n    this.perfPlot = (\n      new google.visualization.ChartWrapper(this.perfPlotConfig)\n    );\n    this.perfFilter = (\n      new google.visualization.ControlWrapper(this.perfFilterConfig)\n    );\n\n    this.trialDashboard = (\n      new google.visualization.Dashboard(this.elemObject.trialDiv)\n    );\n    this.trialPlot = (\n      new google.visualization.ChartWrapper(this.trialPlotConfig)\n    );\n    this.trialFilter = (\n      new google.visualization.ControlWrapper(this.trialFilterConfig)\n    );\n\n    this.healthDashboard = (\n      new google.visualization.Dashboard(this.elemObject.healthDiv)\n    );\n    this.healthPlot = (\n      new google.visualization.ChartWrapper(this.healthPlotConfig)\n    );\n    this.healthFilter = (\n      new google.visualization.ControlWrapper(this.healthFilterConfig)\n    );\n\n    this.perfDashboard.bind(this.perfFilter, this.perfPlot);\n    this.trialDashboard.bind(this.trialFilter, this.trialPlot);\n    this.healthDashboard.bind(this.healthFilter, this.healthPlot);\n\n    this.screenPlot = (\n      new google.visualization.ComboChart(this.elemObject.screenPlot)\n    );\n    // this.realtimePlot = (\n    //   new google.visualization.ChartWrapper(this.realtimePlotConfig)\n    // );\n    this.rxnPlot = (\n      new google.visualization.Histogram(this.elemObject.rxnPlot)\n    );\n    this.rewardPlot = (\n      new google.visualization.ColumnChart(this.elemObject.rewardPlot)\n    );\n    this.choicePlot = (\n      new google.visualization.ColumnChart(this.elemObject.choicePlot)\n    );\n    this.objPerfPlot = (\n      new google.visualization.ColumnChart(this.elemObject.objPerfPlot)\n    );\n\n  }\n\n  public setupChartOptions() {\n    \n    this.perfPlotOptions = {\n      width: this.elemObject.perfPlot.clientWidth,\n      height: this.elemObject.perfPlot.clientHeight,\n      hAxis: { title: 'Trial#' },\n      vAxis: { title: 'Correct (%)', viewWindow: { min: 0, max: 1.0 } },\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true\n      },\n      series: {\n        0: { color: '#43459d' },\n        1: { color: '#e2431e' }\n      }\n    };\n\n    this.perfPlotConfig = {\n      chartType: 'LineChart',\n      containerId: 'performance-plot',\n      options: this.perfPlotOptions\n    };\n    this.perfFilterOptions = {\n      filterColumnLabel: 'currentTrial',\n      ui: {\n        chartType: 'LineChart',\n        chartOptions: {\n          smooth: 20,\n          hAxis: { baselineColor: 'none', title: 'Trial#' },\n          vAxis: { title: '%', viewWindow: { min: 0, max: 1.0 } },\n          width: this.elemObject.perfFilter.clientWidth,\n          height: this.elemObject.perfFilter.clientHeight,\n          animation: { duration: 1000, easing: 'out' }\n        },\n        chartView: {\n          columns: [0, 1]\n        },\n        minRangeSize: 2\n      }\n    };\n    this.perfFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'performance-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.perfFilterOptions \n    };\n    this.trialPlotOptions = {\n      width: this.elemObject.trialPlot.clientWidth,\n      height: this.elemObject.trialPlot.clientHeight,\n      areaOpacity: 0.5,\n      hAxis: { title: 'Time (h) '},\n      vAxes: {\n        0: { title: 'Trial count' },\n        1: { title: 'RFID'}\n      },\n      animation: {\n        duration: 500,\n        easing: 'linear',\n      },\n      series: {\n        0: { targetAxisIndex: 0 },\n        1: { targetAxisIndex: 0 },\n        2: { targetAxisIndex: 1 }\n      }\n    };\n    this.trialPlotConfig = {\n      chartType: 'AreaChart',\n      containerId: 'trial-plot',\n      options: this.trialPlotOptions\n    };\n    this.trialFilterOptions = {\n      filterColumnLabel: 'time',\n      ui: {\n        chartType: 'LineChart',\n        chartOptions: {\n          hAxis: { baselineColor: 'none', title: 'Time' },\n          vAxis: { title: '#' },\n          width: this.elemObject.trialFilter.clientWidth,\n          height: this.elemObject.trialFilter.clientHeight,\n          animation: { duration: 1000, easing: 'out' }\n        }\n      },\n      chartView: {\n        columns: [0, 1]\n      }\n    };\n    this.trialFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'trial-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.trialFilterOptions\n    };\n\n\n\n\n\n    this.healthPlotOptions = {\n      width: this.elemObject.healthPlot.clientWidth,\n      height: this.elemObject.healthPlot.clientHeight,\n      hAxis: { title: 'Trial#' },\n      vAxis: { title: 'Time (ms)' },\n      // animation: {\n      //   duration: 500,\n      //   easing: 'linear',\n      //   startup: true\n      // }\n    };\n\n    this.healthPlotConfig = {\n      chartType: 'ScatterChart',\n      containerId: 'health-plot',\n      options: this.healthPlotOptions\n    };\n    this.healthFilterOptions = {\n      filterColumnLabel: 'trial',\n      ui: {\n        chartType: 'ScatterChart',\n        chartOptions: {\n          smooth: 20,\n          hAxis: { baselineColor: 'none', title: 'Trial#' },\n          vAxis: { title: 'ms' },\n          width: this.elemObject.healthFilter.clientWidth,\n          height: this.elemObject.healthFilter.clientHeight,\n          // animation: { duration: 1000, easing: 'linear' }\n        }\n      }\n    };\n    this.healthFilterConfig = {\n      controlType: 'ChartRangeFilter',\n      containerId: 'health-filter',\n      state: { range: { start: 0, end: 100 } },\n      options: this.healthFilterOptions \n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // this.healthPlotOptions = {\n    //   width: this.elemObject.healthPlot.clientWidth,\n    //   height: this.elemObject.healthPlot.clientHeight,\n    //   hAxis: { title: 'Trial #' },\n    //   vAxis: { title: 'Time (ms)' },\n    //   animation: {\n    //     duration: 500,\n    //     easing: 'linear',\n    //     startup: true\n    //   }\n    // };\n    // this.healthPlotConfig = {\n    //   chartType: 'ScatterChart',\n    //   containerId: 'health-plot',\n    //   options: this.healthPlotOptions\n    // };\n    // this.healthFilterOptions = {\n    //   filterColumnLabel: 'trial',\n    //   ui: {\n    //     chartType: 'ScatterChart',\n    //     chartOptions: {\n    //       hAxis: { baselineColor: 'none', title: 'Trial #' },\n    //       vAxis: { title: 'ms' },\n    //       width: this.elemObject.healthFilter.clientWidth,\n    //       height: this.elemObject.healthFilter.clientHeight,\n    //       animation: { duration: 1000, easing: 'out' }\n    //     },\n    //     minRangeSize: 2\n    //   }\n    // };\n    // this.healthFilterConfig = {\n    //   controlType: 'ChartRangeFilter',\n    //   containerId: 'health-filter',\n    //   state: { range: { start: 0, end: 100 } },\n    //   options: this.healthFilterOptions\n    // };\n\n\n    this.screenPlotOptions = {\n      seriesType: 'scatter',\n      pointSize: 1\n    };\n    this.rxnPlotOptions = {\n      width: this.elemObject.rxnPlot.clientWidth,\n      height: this.elemObject.rxnPlot.clientHeight,\n      title: 'Reaction Time (ms)',\n      animation: {\n        duration: 500,\n        easing: 'linear',\n        startup: true\n      },\n      legend: { position: 'none' }\n    };\n    this.rewardPlotOptions = {\n      width: this.elemObject.rewardPlot.clientWidth,\n      height: this.elemObject.rewardPlot.clientHeight,\n      title: 'Amount of Reward',\n      hAxis: { title: 'reward amount' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      legend: { position: 'none' }\n    };\n    this.choicePlotOptions = {\n      width: this.elemObject.choicePlot.clientWidth,\n      height: this.elemObject.choicePlot.clientHeight,\n      hAxis: { title: 'Choice', },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      legend: { position: 'none' }\n    };\n    this.objPerfPlotOptions = {\n      width: this.elemObject.objPerfPlot.clientWidth,\n      height: this.elemObject.objPerfPlot.clientHeight,\n      hAxis: { title: 'Objects' },\n      vAxis: { title: 'counts', minValue: 0, maxValue: 1 },\n      title: 'Object Performance',\n      legend: { position: 'none' }\n    };\n\n  }\n\n  public initializeChartData(file: FileType, plotOptions: any) {\n    // Remove rows and columns\n    // console.log(this.perfDataTable);\n    this.perfDataTable\n      .removeRows(0, this.perfDataTable.getNumberOfRows());\n    this.perfDataTable\n      .removeColumns(0, this.perfDataTable.getNumberOfColumns());\n\n    this.cumulDataTable\n      .removeRows(0, this.cumulDataTable.getNumberOfRows());\n    this.cumulDataTable\n      .removeColumns(0, this.cumulDataTable.getNumberOfColumns());\n\n    this.healthDataTable\n      .removeRows(0, this.healthDataTable.getNumberOfRows());\n    this.healthDataTable\n      .removeColumns(0, this.healthDataTable.getNumberOfColumns());\n\n    this.xyPosDataTable\n      .removeRows(0, this.xyPosDataTable.getNumberOfRows());\n    this.xyPosDataTable\n      .removeColumns(0, this.xyPosDataTable.getNumberOfColumns());\n\n    this.realtimeDataTable\n      .removeRows(0, this.realtimeDataTable.getNumberOfRows());\n    this.realtimeDataTable\n      .removeColumns(0, this.realtimeDataTable.getNumberOfColumns());\n    this.realtimePlotActive = false;\n    this.realtimeRowDataAdded = false;\n    this.rtData['test'] = [];\n    this.rtData['choice'] = [];\n\n    this.rxnTimeDataTable\n      .removeRows(0, this.rxnTimeDataTable.getNumberOfRows());\n    this.rxnTimeDataTable\n      .removeColumns(0, this.rxnTimeDataTable.getNumberOfColumns());\n\n    this.rewardDataTable\n      .removeRows(0, this.rewardDataTable.getNumberOfRows());\n    this.rewardDataTable\n      .removeColumns(0, this.rewardDataTable.getNumberOfColumns());\n\n    this.choiceDataTable\n      .removeRows(0, this.choiceDataTable.getNumberOfRows());\n    this.choiceDataTable\n      .removeColumns(0, this.choiceDataTable.getNumberOfColumns());\n\n    this.objPerfDataTable\n      .removeRows(0, this.objPerfDataTable.getNumberOfRows());\n    this.objPerfDataTable\n      .removeColumns(0, this.objPerfDataTable.getNumberOfColumns());\n\n    // Add columns\n    this.perfDataTable.addColumn('number', 'currentTrial');\n    this.perfDataTable.addColumn('number', 'current');\n    this.perfDataTable.addColumn('number', '100trialsAvg');\n\n    this.cumulDataTable.addColumn('datetime', 'time');\n    this.cumulDataTable.addColumn('number', 'Trials');\n    this.cumulDataTable.addColumn('number', 'Performance');\n    this.cumulDataTable.addColumn('number', 'RFID');\n    // this.cumulDataTable.addColumn('number', 'Weight');\n\n    this.rxnTimeDataTable.addColumn('string', 'success');\n    this.rxnTimeDataTable.addColumn('number', 'durationMS');\n\n    /** \n     * xyPosDataTable Guide\n     * 0: x\n     * 1: y fix (box)\n     * 2: y sample (box)\n     * 3: y test1 (box) | y same (box)\n     * 4: y test2 (box) | y different (box)\n     * 5: y Fix_reward (dots)\n     * 6: y Fix_punish (dots)\n     * 7: y Target_reward (dots)\n     * 8: y Target_punish (dots)\n     */\n    this.xyPosDataTable.addColumn('number', 'xpos');\n    this.xyPosDataTable.addColumn('number', 'Fixation');\n    this.xyPosDataTable.addColumn('number', 'Sample');\n    this.realtimeDataTable.addColumn('number', 'globalX');\n    this.realtimeDataTable.addColumn('number', 'fixY');\n    this.realtimeDataTable.addColumn('number', 'sampleY');\n\n    if (file.data!.SameDifferent <= 0) {\n      for (let i = 0; i < file.data!.TestGridIndex.length; i++) {\n        this.xyPosDataTable.addColumn('number', `Test${i + 1}`);\n        this.realtimeDataTable.addColumn('number', `testY${i + 1}`);\n      }\n    } else if (file.data!.SameDifferent > 0) {\n      this.xyPosDataTable.addColumn('number', 'Same');\n      this.xyPosDataTable.addColumn('number', 'Different');\n      this.realtimeDataTable.addColumn('number', 'sameY');\n      this.realtimeDataTable.addColumn('number', 'differentY');\n    }\n\n\n    this.xyPosDataTable.addColumn('number', 'Fix_Reward');\n    this.xyPosDataTable.addColumn('number', 'Fix_Punish');\n    this.xyPosDataTable.addColumn('number', 'Target_Reward');\n    this.xyPosDataTable.addColumn('number', 'Target_Punish');\n\n    this.realtimeDataTable.addColumn('number', 'curY');\n    this.realtimeDataTable.addColumn({'type': 'string', 'role': 'style'});\n    \n    this.rewardDataTable.addColumn('string', 'reard size');\n    this.rewardDataTable.addColumn('number', 'nrewards');\n\n    this.choiceDataTable.addColumn('string', 'choice');\n    this.choiceDataTable.addColumn('number', '# of responses');\n\n    this.objPerfDataTable.addColumn('string', 'object');\n    this.objPerfDataTable.addColumn('number', 'performance');\n\n    this.healthDataTable.addColumn('number', 'trial');\n    this.healthDataTable.addColumn('number', 'sample command');\n    this.healthDataTable.addColumn('number', 'tdisplay');\n    this.healthDataTable.addColumn('number', 'eye interval');\n\n    this.updatePlots(file, plotOptions);\n\n  }\n\n  public updatePlots(file: FileType, plotOptions: any) {\n    let fileData: LiveplotDataType;\n    if (!_.isUndefined(file.data)) {\n      fileData = file.data;\n    } else {\n      throw 'file.data is Undefined'\n    }\n    console.log('plot updated');\n    this.loadVitals(file);\n    this.loadVitalsText(file);\n    // console.log('vitals', this.vitals);\n    this.loadPerformanceData(file);\n    this.loadHealthData(fileData);\n    this.loadObjPerfData(fileData);\n    this.loadChoiceData(fileData);\n    this.loadRewardData(fileData);\n    this.drawPerformancePlot(file);\n    this.drawTrialPlot(file);\n    this.drawHealthPlot(file);\n    this.drawObjPerfPlot();\n    this.drawRxnTimePlot();\n    this.drawChoicePlot();\n    this.drawRewardPlot();\n    this.loadTouchSDText();\n    let streamActive = plotOptions.streamActive;\n    this.drawScreenPlot(fileData, streamActive);\n    if (streamActive && !this.realtimePlotActive) {\n      // console.log('hello');\n      this.drawRealtimePlot2(fileData);\n      this.realtimePlotActive = true;\n    }\n\n  }\n\n  private loadVitals(file: FileType) {\n    let data;\n    if (!_.isUndefined(file.data)) {\n      data = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n\n    this.vitals.subject = data.Subject;\n    this.vitals.trials = data.Response.length;\n    \n    // Convert milliseconds to minutes\n    let startTime = data.StartTime;\n    this.vitals.time = (\n      _.round(_.round(_.toNumber(_.last(startTime)) - startTime[0]) / 60000)\n    );\n\n    /**\n     * RFID Processing\n     * Only supports current data format\n     * file.data.RFIDTag = {\n     *   0: [0, 2020-10-27T19:19:19.999Z, 00782A7E88A4],\n     *   1: [],\n     *   ...\n     * };\n     */\n    let rfidTag = data.RFIDTag;\n    if (!_.isUndefined(rfidTag) && _.size(rfidTag) > 0) {\n      this.vitals.rfidTag = rfidTag[_.size(rfidTag) - 1][2];\n      this.vitals.rfidTime = (\n        new Date(rfidTag[_.size(rfidTag) - 1][1]).toLocaleTimeString('en-US')\n      );\n    } else {\n      this.vitals.rfidTag = null;\n      this.vitals.rfidTime = null;\n    }\n\n    // Automator, AutomatorStage, AutomatorStageName\n    if (_.isUndefined(data.Automator)) {\n      this.vitals.automator = null;\n    } else {\n      this.vitals.automator = file.data.Automator;\n    }\n\n    if (_.isUndefined(data.CurrentAutomatorStage)) {\n      this.vitals.automatorStage = null;\n    } else {\n      this.vitals.automatorStage = data.CurrentAutomatorStage;\n    }\n\n    if (_.isUndefined(data.CurrentAutomatorStageName)) {\n      this.vitals.automatorStageName = null;\n    } else {\n      this.vitals.automatorStageName = data.CurrentAutomatorStageName;\n    }\n\n    // Battery, only supports current data format\n    let battery = data.Battery;\n    if (!_.isUndefined(battery) && _.size(battery) > 0) {\n      this.vitals.batteryLeft = _.round(battery[_.size(battery) - 1][2] * 100);\n      this.vitals.batteryUsed = (\n        _.round(battery[0][2] * 100 - this.vitals.batteryLeft)\n      );\n    } else {\n      this.vitals.batteryLeft = null;\n      this.vitals.batteryUsed = null;\n    }\n\n    // Performance\n    let numCorrect = 0;\n    for (let i = 0; i < _.size(data.CorrectItem); i++) {\n      if (data.CorrectItem[i] == data.Response[i]) {\n        numCorrect++;\n      }\n    }\n    \n    this.vitals.numCorrect = numCorrect;\n    this.vitals.pctCorrect = (\n      _.round(100 * numCorrect / data.Response.length)\n    );\n\n    if (!_.isUndefined(data.NReward)) {\n      this.vitals.numReward = (\n        data.NReward.reduce((a: number, b: number) => { \n          return a + b;\n        }, 0)\n      );\n    }\n\n    this.vitals.rewardEstimate = 0;\n    if (!_.isUndefined(data.RewardPer1000Trials)) {\n      this.vitals.rewardEstimate = (\n        _.round(data.RewardPer1000Trials * this.vitals.numReward / 1000)\n      );\n    }\n\n  }\n\n  private loadVitalsText(file: FileType) {\n    this.elemObject.perfVitals.innerHTML = (\n      `${this.vitals.subject}: ${this.vitals.pctCorrect}% (n = ${this.vitals.numCorrect} out of ${this.vitals.trials}, r=${this.vitals.numReward}=${this.vitals.rewardEstimate}mL, ${this.vitals.time} mins)` \n    );\n\n    // TODO: add this.vitals.tagCount data\n    this.elemObject.rfidVitals.innerHTML = (\n      `RFID: ${this.vitals.rfidTag} (${this.vitals.rfidTime})`\n    );\n\n    this.elemObject.batteryVitals.innerHTML = (\n      `Battery: ${this.vitals.batteryLeft}% (-${this.vitals.batteryUsed}%)`\n    );\n\n    this.elemObject.trialVitals.innerHTML = (\n      `Last Trial: ${file.dateSaved!.toLocaleTimeString('en-US')}`\n    );\n  }\n\n  private loadTouchSDText() {\n    try {\n      this.screenPlotOptions.title = `Touch Locations -- standard dev: \\n Fixation: ${Math.round(this.vitals.stdevFix * 10) / 10} pixels`;\n      for (let i = 0; i < this.vitals.stdevTest.length; i++) {\n        this.screenPlotOptions.title = this.screenPlotOptions.title + `\\n Target ${i}: ${Math.round(this.vitals.stdevTest[i] * 10) / 10}`; \n      }\n    } catch(err) {\n      console.error('Error loading touch SD text', err);\n    }\n  }\n\n  private loadPerformanceData(file: FileType) {\n    // Typechecking file.data\n    let data;\n    if (!_.isUndefined(file.data)) {\n      data = file.data;\n    } else {\n      throw 'file.data is Undefined';\n    }\n\n    this.perfDataTable.removeRows(\n      0, this.perfDataTable.getNumberOfRows()\n    );\n    this.cumulDataTable\n      .removeRows(0, this.cumulDataTable.getNumberOfRows());\n    this.rxnTimeDataTable\n      .removeRows(0, this.rxnTimeDataTable.getNumberOfRows());\n    this.xyPosDataTable\n      .removeRows(0, this.xyPosDataTable.getNumberOfRows());\n\n    // Create Data Table\n    let xData = [];\n    let yData: number[] = [];\n    let yDataSmall = []; // keeps 5 recent\n    let yDataLarge = []; // keeps 100 recent\n    let numTotal = [];\n    let numCorrect: number[] = [];\n    let tCurrent = [];\n    let numRFID = [];\n    let xPos: number;\n    let yPos: number;\n    let touchevent: number[][] = [];\n    let rt = [];\n\n    // performance\n    for (let i = 0; i < data.CorrectItem.length; i++) {\n      if (data.CorrectItem[i] == data.Response[i]) {\n        yData[i] = 1; // correct\n      } else {\n        yData[i] = 0; // incorrect\n      }\n\n      xData[i] = i;\n\n      // Cumulative trials & correct trials\n      numTotal[i] = xData.length;\n      if (i > 0) {\n        numCorrect[i] = numCorrect[i - 1] + yData[i];\n      } else if (i == 0) {\n        numCorrect[i] = yData[i];\n      }\n    }\n\n    for (let i = 0; i < data.NReward.length; i++) {\n      if (data.RewardStage == 0) {\n        rt[i] = data.FixationXYT[2][i] - data.StartTime[i];\n        this.rxnTimeDataTable.addRows(\n          [[file.data.FixationTouchEvent[i], rt[i]]]\n        );\n      } else if (data.NRSVP > 0) {\n        rt[i] = data.SampleFixationXYT[2][i] - data.SampleStartTime[i];\n        this.rxnTimeDataTable.addRows(\n          [[data.SampleFixationTouchEvent[i], rt[i]]]\n        );\n      } else {\n        rt[i] = data.ResponseXYT[2][i] - data.SampleStartTime[i];\n        if (data.Response[i] == -1) {\n          this.rxnTimeDataTable.addRows(\n            [['timeout', data.ChoiceTimeOut]]\n          );\n        } else if (data.CorrectItem[i] == data.Response[i]) {\n          this.rxnTimeDataTable.addRows(\n            [['correct', rt[i]]]\n          );\n        } else {\n          this.rxnTimeDataTable.addRows(\n            [['wrong', rt[i]]]\n          );\n        }\n      }\n    }\n\n    // console.log(rt);\n\n    /**\n     * Touch XY\n     * Store fixation in odd indices and choice in even\n     * All touchevents. touchevent has a length that is twice the length\n     * of file.data.FixationXYT or file.data.ResponseXYT\n     */\n    if (\n      !_.isUndefined(data.ResponseXYT) \n      && _.size(data.ResponseXYT) > 0\n      && _.size(file.data.ResponseXYT[0]) > 0\n    ) {\n      for (let i = 0; i < _.size(data.FixationXYT[0]) * 2; i += 2) {\n        touchevent[i] = [];\n        touchevent[i + 1] = [];\n        touchevent[i][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i + 1][0] = file.data.ResponseXYT[0][i / 2];\n        touchevent[i][1] = file.data.FixationXYT[1][i / 2];\n        touchevent[i + 1][1] = file.data.ResponseXYT[1][i / 2];\n      }\n    } else {\n      for (let i = 0; i < _.size(data.FixationXYT[0]) * 2; i += 2) {\n        touchevent[i] = [];\n        touchevent[i + 1] = [];\n        touchevent[i][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i + 1][0] = file.data.FixationXYT[0][i / 2];\n        touchevent[i][1] = file.data.FixationXYT[1][i / 2];\n        touchevent[i + 1][1] = file.data.FixationXYT[1][i / 2];\n      }\n    }\n\n    // Sample & Test Boxes -- Draw them as a bounding box in the touch plot\n    let numColumnXYPos = this.xyPosDataTable.getNumberOfColumns();\n    let numColRealtime = this.realtimeDataTable.getNumberOfColumns();\n    let sampleWidth = this.getSampleWidth(file.data);\n    let sampleHeight = sampleWidth;\n    let testWidth = this.getTestWidth(file.data);\n    let testHeight = testWidth;\n\n    // Fixation & Choice Boxes\n    let fixationWidth = this.getFixationWidth(file.data, sampleWidth);\n    let fixationHeight = fixationWidth;\n    let choiceWidth = this.getChoiceWidth(file.data);\n    let choiceHeight = choiceWidth;\n\n    /** \n     * NOTE for positioning elements:\n     * grid x, y is offset || fixation & response x, y is not\n    */\n\n    // FIXATION\n    let numDisplayElems = 1;\n    // let xyPosArray = [];\n    let fixX: number;\n    let fixY: number;\n    let maxFixationGridIndex = _.max(file.data.FixationGridIndex);\n    if (_.isNumber(maxFixationGridIndex)) {\n      fixX = file.data.XGridCenter[maxFixationGridIndex];\n      fixY = (\n        file.data.ViewportPixels[1] \n        - (file.data.YGridCenter[maxFixationGridIndex] + file.data.offsettop)\n      );\n      // console.log('fixY', fixY);\n    } else {\n      throw 'data.FixationGridIndex is not of type number[]';\n    }\n\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX - fixationWidth / 2, 1: fixY - fixationHeight / 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX + fixationWidth / 2, 1: fixY - fixationHeight / 2}\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX + fixationWidth / 2, 1: fixY + fixationHeight / 2}\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX - fixationWidth / 2, 1: fixY + fixationHeight / 2}\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: fixX - fixationWidth / 2, 1: fixY - fixationHeight / 2}\n    );\n\n    if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n      console.log('realtime not active');\n      this.rtData['fixation'] = {\n        x: fixX,\n        y: fixY,\n        width: fixationWidth,\n        height: fixationHeight\n      };\n    }\n\n    // SAMPLE\n    numDisplayElems = 2;\n    let sampleX: number;\n    let sampleY: number;\n    let maxSampleGridIndex = _.max(data.SampleGridIndex);\n\n    if (data.RewardStage > 0) {\n      if (_.isNumber(maxSampleGridIndex)) {\n        sampleX = data.XGridCenter[maxSampleGridIndex];\n        sampleY = (\n          data.ViewportPixels[1]\n          - (data.YGridCenter[maxSampleGridIndex] + data.offsettop)\n        );\n      } else {\n        throw 'data.SampleGridIndex is not of type number[]';\n      }\n    } else {\n      sampleX = fixX;\n      sampleY = fixY;\n    }\n\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX - sampleWidth / 2, 2: sampleY - sampleHeight / 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX + sampleWidth / 2, 2: sampleY - sampleHeight/ 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX + sampleWidth / 2, 2: sampleY + sampleHeight / 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX - sampleWidth / 2, 2: sampleY + sampleHeight/ 2 }\n    );\n    this.generateAndAddRowData(\n      this.xyPosDataTable,\n      numColumnXYPos,\n      { 0: sampleX - sampleWidth / 2, 2: sampleY - sampleHeight / 2 }\n    );\n\n    if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n      this.rtData['sample'] = {\n        x: sampleX,\n        y: sampleY,\n        width: sampleWidth,\n        height: sampleHeight\n      };\n    }\n\n    // TEST:\n    let testX: number[] = [];\n    let testY: number[] = [];\n\n    if (data.RewardStage != 0) {\n      for (let i = 0; i < _.size(data.TestGridIndex); i++) {\n        // If Same-Different, only show the first test\n        if (data.SameDifferent > 0 || data.NRSVP > 0) {\n          break;\n        }\n\n        numDisplayElems++;\n        if (data.NRSVP > 0) {\n          testX.push(data.XGridCenter[maxSampleGridIndex as number]);\n          testY.push(\n            data.ViewportPixels[1]\n            - (data.YGridCenter[maxSampleGridIndex as number] + data.offsettop)\n          );\n        } else {\n          testX.push(data.XGridCenter[data.TestGridIndex[i]]);\n          testY.push(\n            data.ViewportPixels[1]\n            - (data.YGridCenter[data.TestGridIndex[i]] + data.offsettop)\n          );\n        }\n\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] - testWidth / 2,\n            [numDisplayElems]: testY[i] - testHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] + testWidth / 2,\n            [numDisplayElems]: testY[i] - testHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] + testWidth / 2,\n            [numDisplayElems]: testY[i] + testHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] - testWidth / 2,\n            [numDisplayElems]: testY[i] + testHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          { \n            0: testX[i] - testWidth / 2,\n            [numDisplayElems]: testY[i] - testHeight / 2\n          }\n        );\n\n        if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n          let tmp = {\n              x: testX[i],\n              y: testY[i],\n              width: testWidth,\n              height: testHeight\n          }\n          this.rtData['test'].push(tmp);\n        }\n      } \n    }\n\n    // CHOICE:\n    let choiceX: number[] = [];\n    let choiceY: number[] = [];\n\n    if (data.RewardStage != 0 && data.SameDifferent > 0) {\n      for (let i = 0; i < _.size(data.ChoiceGridIndex); i++) {\n        numDisplayElems++;\n        choiceX.push(data.XGridCenter[data.ChoiceGridIndex[i]]);\n        choiceY.push(\n          data.ViewportPixels[1]\n          - (data.YGridCenter[data.ChoiceGridIndex[i]] + data.offsettop)\n        );\n\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] - choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] - choiceHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] + choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] - choiceHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] + choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] + choiceHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] - choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] + choiceHeight / 2\n          }\n        );\n        this.generateAndAddRowData(\n          this.xyPosDataTable,\n          numColumnXYPos,\n          {\n            0: choiceX[i] - choiceWidth / 2,\n            [numDisplayElems]: choiceY[i] - choiceHeight / 2\n          }\n        );\n        \n        // realtime not active\n        if (!this.realtimeRowDataAdded && !this.realtimePlotActive) {\n          this.rtData['choice'].push(\n            {\n              x: choiceX[i],\n              y: choiceY[i],\n              width: choiceWidth,\n              height: choiceHeight\n            }\n          );\n        }\n        \n      }\n    }\n    this.realtimeRowDataAdded = true;\n\n    let fixXPos: number[] = [];\n    let fixYPos: number[] = [];\n    let testXPos: number[][] = [];\n    let testYPos: number[][] = [];\n    let numTarget = [0, 0];\n\n    for (let i = 0; i < touchevent.length; i++) {\n      xPos = touchevent[i][0];\n      yPos = data.ViewportPixels[1] - touchevent[i][1];\n\n      let yDataIndex: number;\n      if (i % 2 == 0) {\n        yDataIndex = i / 2;\n      } else {\n        yDataIndex = (i - 1) / 2;\n      }\n\n      if (xPos != -1) {\n        let arr = new Array(numColumnXYPos);\n        arr[0] = xPos;\n\n        if (i % 2 == 0) {\n          fixXPos.push(xPos);\n          fixYPos.push(yPos);\n\n          if (yData[yDataIndex] == 1) {\n            arr[numDisplayElems + 1] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          } else {\n            arr[numDisplayElems + 2] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          }\n        } else {\n          let testXPosArr: number[] = [];\n          let testYPosArr: number[] = [];\n          \n          for (let j = 0; j < _.size(data.TestGridIndex); j++) {\n            if (data.Response[yDataIndex] == j) {\n              testXPosArr.push(xPos);\n              testYPosArr.push(yPos);\n              numTarget[j] += 1;\n            } else {\n              testXPosArr.push(0);\n              testYPosArr.push(0);\n            }\n\n            testXPos.push(testXPosArr);\n            testYPos.push(testYPosArr);\n          }\n\n          if (yData[yDataIndex] == 1) {\n            arr[numDisplayElems + 3] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          } else {\n            arr[numDisplayElems + 4] = yPos;\n            this.xyPosDataTable.addRows([arr]);\n          }\n        }\n      }\n\n      let meanFixXPos = _.mean(fixXPos);\n      let meanFixYPos = _.mean(fixYPos);\n      let distFixXPos = fixXPos.map((a: number) => {\n        return Math.pow(Math.abs(a - meanFixXPos), 2);\n      });\n      let distFixYPos = fixYPos.map((a: number) => {\n        return Math.pow(Math.abs(a - meanFixYPos), 2);\n      });\n      let stdevFix = distFixXPos.map((a: number, idx: number) => {\n        return Math.sqrt(a + distFixYPos[idx]);\n      }).reduce((a: number, b: number) => {\n        return a + b;\n      }, 0) / _.size(distFixXPos);\n      this.vitals.stdevFix = stdevFix;\n\n      let stdevTest: number[] = [];\n      for (let j = 0; j < _.size(data.TestGridIndex); j++) {\n        let allTestXPos = testXPos.map((a: number[]) => {\n          return a[j];\n        }).filter((a: number) => {\n          return a != 0;\n        });\n\n        let meanTestXPos = allTestXPos.reduce((a: number, b: number) => {\n          return a + b;\n        }, 0) / _.size(allTestXPos);\n\n        let distTestXPos = allTestXPos.map((a: number) => {\n          return Math.pow(Math.abs(a - meanTestXPos), 2);\n        });\n\n        let allTestYPos = testYPos.map((a: number[]) => {\n          return a[j];\n        }).filter((a: number) => {\n          return a != 0;\n        });\n\n        let meanTestYPos = allTestYPos.reduce((a: number, b: number) => {\n          return a + b;\n        }, 0) / _.size(allTestYPos);\n\n        let distTestYPos = allTestYPos.map((a: number) => {\n          return Math.pow(Math.abs(a - meanTestYPos), 2);\n        });\n\n        stdevTest.push(\n          distTestXPos.map((a: number, i: number) => {\n            return Math.sqrt(a + distTestYPos[i]);\n          }).reduce((a: number, b: number) => {\n            return a + b;\n          }, 0) / _.size(allTestXPos)\n        );\n      }\n      this.vitals.stdevTest = stdevTest;\n    }\n\n    yDataSmall = utils.smooth(yData, 5);\n    yDataLarge = utils.smooth(yData, 100);\n\n    // Calculate timeEnd\n    let timeEnd: number;\n    if (\n      _.isUndefined(data.ResponseXYT)\n      || _.size(data.ResponseXYT) < 1\n      || _.isUndefined(data.ResponseXYT[2][_.size(data.ResponseXYT[2]) -1])\n    ) {\n      timeEnd = data.FixationXYT[2][_.size(data.FixationXYT[2]) - 1];\n    } else {\n      timeEnd = data.ResponseXYT[2][_.size(data.ResponseXYT[2]) - 1];\n    }\n\n    // RFID\n    let numTrials = _.size(yData);\n    let numReads = _.size(data.RFIDTag);\n    numRFID = _.fill(Array(numTrials), 0);\n    this.vitals.tagCount = {};\n\n    for (let i = 0; i < numReads; i++) {\n      if (_.isUndefined(this.vitals.tagCount[data.RFIDTag[i][2]])) {\n        this.vitals.tagCount[data.RFIDTag[i][2]] = 0;\n      }\n      this.vitals.tagCount[data.RFIDTag[i][2]] += 1;\n      numRFID[data.RFIDTag[i][0]] += 1;\n    }\n\n    for (let i = 1; i < _.size(numRFID); i++) {\n      numRFID[i] = numRFID[i] + numRFID[i - 1];\n    }\n\n    // Adding rest of the data\n    for (let i = 0; i < _.size(yData); i++) {\n      let timeFix = data.FixationXYT[2][i] // in milliseconds\n      if (timeFix < 0) {\n        continue;\n      }\n\n      let t = new Date(file.dateSaved!);\n      t.setTime(t.getTime() - (timeEnd - timeFix));\n\n      this.perfDataTable.addRows([[xData[i], yDataSmall[i], yDataLarge[i]]]);\n      this.cumulDataTable.addRows([[t, numTotal[i], numCorrect[i], numRFID[i]]]);\n    }\n    this.formatDate(this.cumulDataTable, 0);\n  }\n\n  private generateAndAddRowData(\n    target: google.visualization.DataTable, \n    numColumns: number, \n    data: Record<number, number | string>\n  ) {\n    // console.log('data', data);\n    let arr = [];\n    for (let i = 0; i < numColumns; i++) {\n      if (_.has(data, i)) {\n        arr.push(data[i]);\n      } else {\n        arr.push(null);\n      }\n    }\n    // console.log('arr:', arr);\n    target.addRows([arr]);\n  }\n\n  // TODO: deal with case where SampleScenes[0].OBJECTS[firstKey].sizeInches is an\n  // Array of arrays -- i.e. scene movie\n  private getSampleWidth(fileData: LiveplotDataType) {\n    let sampleWidth = 0;\n    if (_.size(fileData.SampleScenes[0].IMAGES.imageidx) > 0) {\n      if (_.isArray(fileData.SampleScenes[0].IMAGES.sizeInches)) {\n        let maxSizeInches = _.max(fileData.SampleScenes[0].IMAGES.sizeInches);\n        if (_.isNumber(maxSizeInches)) {\n          sampleWidth = maxSizeInches * fileData.ViewportPPI;\n        }\n      } else {\n        console.error(\n          'SampleScenes[0].IMAGES.sizeInches is not an array. Please fix!'\n        );\n        sampleWidth = (\n          fileData.SampleScenes[0].IMAGES.sizeInches * fileData.ViewportPPI\n        );\n      }\n    } else {\n      let firstKey = _.findKey(fileData.SampleScenes[0].OBJECTS);\n      if (_.isString(firstKey)) {\n        let maxSizeInches = (\n          _.max(fileData.SampleScenes[0].OBJECTS[firstKey].sizeInches)\n        );\n        if (_.isNumber(maxSizeInches)) {\n          sampleWidth = maxSizeInches * fileData.ViewportPPI;\n        } \n      } else {\n        console.error(\n          'firstKey of SampleScenes[0].OBJECTS is not of type string'\n        );\n      }  \n    }\n    return sampleWidth;\n  }\n\n  private getTestWidth(fileData: LiveplotDataType) {\n    let testWidth = 0;\n\n    if (fileData.TestScenes[0].IMAGES.imageidx.length > 0) {\n      if (_.isArray(fileData.TestScenes[0].IMAGES.sizeInches)) {\n        let maxSizeInches = _.max(fileData.TestScenes[0].IMAGES.sizeInches);\n        if (_.isNumber(maxSizeInches)) {\n          testWidth = maxSizeInches * fileData.ViewportPPI;\n        } else {\n          console.error(\n            'TestScenes[0].IMAGES.sizeInches is not of type number'\n          );\n        }\n      } else {\n        console.error(\n          'TestScenes[0].IMAGES.sizeInches is not an array. Please fix!'\n        );\n        testWidth = (\n          fileData.TestScenes[0].IMAGES.sizeInches * fileData.ViewportPPI\n        );\n      }\n    } else {\n      let firstKey = _.findKey(fileData.TestScenes[0].OBJECTS);\n      if (_.isString(firstKey)) {\n        let maxSizeInches = (\n          _.max(fileData.TestScenes[0].OBJECTS[firstKey].sizeInches)\n        );\n        if (_.isNumber(maxSizeInches)) {\n          testWidth = maxSizeInches * fileData.ViewportPPI;\n        } else {\n          console.error(\n            'firstKey of TestScenes[0].OBJECTS is not of type string'\n          );\n        }\n      }\n    }\n\n    if (!_.isUndefined(fileData.NRSVP) && fileData.NRSVP > 0) {\n      testWidth = fileData.SampleFixationSizeInches * fileData.ViewportPPI;\n    }\n\n    return testWidth;\n  }\n\n  private getFixationWidth(fileData: LiveplotDataType, sampleWidth: number) {\n    let fixationWidth = 0;\n\n    if (fileData.FixationUsesSample <= 0) {\n      fixationWidth = fileData.FixationSizeInches * fileData.ViewportPPI;\n    } else {\n      fixationWidth = sampleWidth;\n    }\n    return fixationWidth;\n  }\n\n  private getChoiceWidth(fileData: LiveplotDataType) {\n    let choiceWidth = 0;\n    if (\n      !_.isUndefined(fileData.SameDifferent)\n      && fileData.SameDifferent > 0\n    ) {\n      choiceWidth = fileData.ChoiceSizeInches * fileData.ViewportPPI;\n    }\n    return choiceWidth;\n  }\n\n  private loadObjPerfData(data: LiveplotDataType) {\n    this.objPerfDataTable.removeRows(\n      0, this.objPerfDataTable.getNumberOfRows()\n    );\n  \n    let lenSampleObj: number;\n    if (data.RewardStage == 1) {\n      let sampleObj = [];\n      if (data.NTrialsPerBagBlock > 5000) {\n        sampleObj.push(data.ImageBagsSample[0].split('/')[5]);\n        this.objPerfDataTable.addRow([sampleObj[0], 0]);\n        lenSampleObj = 1;\n      } else {\n        for (let i = 0; i < _.size(data.ImageBagsSample); i++) {\n          sampleObj.push(data.ImageBagsSample[i].split('/')[5]);\n          this.objPerfDataTable.addRow([sampleObj[i], 0]);\n        }\n        lenSampleObj = _.size(sampleObj);\n      }\n\n      let NDiffObjPerf = _.fill(Array(lenSampleObj), 0);\n      let NDiffObj = _.fill(Array(lenSampleObj), 0);\n      for (let i = 0; i < _.size(data.Sample[0]); i++) { // For i trials\n        for (let j = 0; j < lenSampleObj; j++) {\n          // If sample was that object\n          if (data.SampleBagIdx[data.Sample[0][i]] == j) {\n            NDiffObj[j] += 1;\n            // If correct\n            if (data.Response[i] == data.CorrectItem[i]) {\n              NDiffObjPerf[j] += 1;\n            }\n          }\n          this.objPerfDataTable.setValue(j, 1, NDiffObjPerf[j] / NDiffObj[j]);\n        }\n      }\n    }\n  }\n\n  private loadChoiceData(data: LiveplotDataType) {\n    this.choiceDataTable.removeRows(0, this.choiceDataTable.getNumberOfRows());\n    \n    if (data.RewardStage != 0) {\n      // let possibleResp = _.fill(Array(_.size(data.ObjectGridIndex)), 0);\n      let possibleResp = [];\n      \n      if (\n        _.size(data.ObjectGridIndex) != 0\n        && (_.isUndefined(data.NTrialsPerBagBlock) \n        || data.NTrialsPerBagBlock < 1000)\n      ) {\n        let objGridIndex = _.cloneDeep(data.ObjectGridIndex);\n        objGridIndex.sort((a: number, b: number) => {\n          return a - b;\n        });\n        let allind = [];\n        for (let i = 0; i < _.size(objGridIndex); i++) {\n          // allind.push(_.findIndex(data.ObjectGridIndex, objGridIndex[i]));\n          allind.push(data.ObjectGridIndex.indexOf(objGridIndex[i]));\n          this.choiceDataTable.addRow(\n            [data.ImageBagsSample[allind[i]].split('/')[5], 0]\n          );\n          possibleResp.push(i);\n        }\n      } else {\n        for (let i = 0; i < _.size(data.TestGridIndex); i++) {\n          this.choiceDataTable.addRow(['choice' + (i + 1), 0]);\n          possibleResp.push(i);\n        }\n      }\n\n      let NDiffChoice = _.fill(Array(_.size(possibleResp)), 0);\n      let NAllChoice = 0;\n\n      for (let i = 0; i < _.size(data.Response); i++) {\n        if (data.Response[i] != -1) {\n          NAllChoice++;\n        }\n\n        for (let j = 0; j < _.size(possibleResp); j++) {\n          if (data.Response[i] == possibleResp[j] && data.Response[i] != -1) {\n            NDiffChoice[j]++;\n          }\n          this.choiceDataTable.setValue(j, 1, NDiffChoice[j] / NAllChoice);\n        }\n      }\n    } else {\n      this.choiceDataTable.addRow(['outside Fix', 0]);\n      this.choiceDataTable.addRow(['inside Fix', 0]);\n\n      let NDiffChoice = _.fill(Array(2), 0);\n      let NAllChoice = 0;\n      let yData = [];\n\n      for (let i = 0; i < _.size(data.CorrectItem); i++) {\n        if (data.CorrectItem[i] == data.Response[i]) {\n          yData.push(1);\n        } else {\n          yData.push(0);\n        }\n      }\n\n      for (let i = 0; i < _.size(yData); i++) {\n        NAllChoice++;\n\n        for (let j = 0; j < 2; j++) {\n          if (yData[i] == j) {\n            NDiffChoice[j] += 1;\n          }\n          this.choiceDataTable.setValue(j, 1, NDiffChoice[j] / NAllChoice);\n        }\n      }\n    }\n  }\n\n  private loadRewardData(data: LiveplotDataType) {\n    this.rewardDataTable.removeRows(0, this.rewardDataTable.getNumberOfRows());\n    let NRewardMax = [];\n    for (let i = 0; i < data.NRewardMax; i++) {\n      NRewardMax.push(i.toString());\n    }\n    // NRewardMax.unshift('-1');\n\n    for (let i = 0; i < _.size(NRewardMax); i++) {\n      this.rewardDataTable.addRow([NRewardMax[i], 0]);\n    }\n\n    let NDiffReward = _.fill(Array(_.size(NRewardMax)), 0);\n\n    for (let i = 0; i < _.size(data.NReward); i++) {\n      if (data.Response[i] == -1) {\n        NDiffReward[0]++;\n        this.rewardDataTable.setValue(\n          0, 1, NDiffReward[0] / _.size(data.NReward)\n        );\n      } else {\n        for (let j = 1; j < _.size(NRewardMax); j++) {\n          if (data.NReward[i].toString() == NRewardMax[j]) {\n            NDiffReward[j]++;\n          }\n          this.rewardDataTable.setValue(\n            j, 1, NDiffReward[j] / _.size(data.NReward)\n          );\n        }\n      }\n    }\n  }\n\n  private loadHealthData(data: LiveplotDataType) {\n    console.log('[loadHealthData::fileData]', data);\n    this.healthDataTable.removeRows(0, this.healthDataTable.getNumberOfRows());\n\n    if (data.Eye.TrackEye > 0 && data.RewardStage > 0) { // EYETRACKING\n      let lastIdx = Object.keys(data.TSequenceActualClip).length - 1;\n      \n      for (let i = 0; i < data.TSequenceActualClip[lastIdx].length; i++) {\n        let dt: any;\n        if (data.TSequenceActualClip[lastIdx][i] < 0) {\n          dt = null;\n        } else {\n          dt = (\n            data.TSequenceActualClip[lastIdx][i]\n            - data.TSequenceDesiredClip[lastIdx][i]\n          );\n          dt = Math.abs(Math.round(dt));\n        }\n        \n        let sampleCmdInterval = (\n          data.SampleCommandReturnTime[i] - data.SampleStartTime[i]\n        );\n        this.healthDataTable.addRows(\n          [[i, sampleCmdInterval, dt, data.EyetrackerSampleInterval[i]]]\n        );\n      }\n    } else if (data.Eye.TrackEye == 0 && data.RewardStage > 0) {\n      let lastIdx = Object.keys(data.TSequenceActualClip).length - 1;\n      for (let i = 0; i < data.TSequenceActualClip[lastIdx].length; i++) {\n        let dt = (\n          data.TSequenceActualClip[lastIdx][i]\n          - data.TSequenceDesiredClip[lastIdx][i]\n        );\n        dt = Math.abs(Math.round(dt));\n        this.healthDataTable.addRows(\n          [[i, null, dt, null]]\n        );\n      }\n    }\n\n    // if (data.FixationDuration > 0) { // EYETRACKING SCENARIO\n    //   for (let i = 0; i < data.TSequenceActualClip[2].length; i++) {\n    //     let sampleCmdInterval = (\n    //       data.SampleCommandReturnTime[i] - data.SampleStartTime[i]\n    //     );\n    //     let dt = (\n    //       data.TSequenceActualClip[2][i] - data.TSequenceDesiredClip[2][i]\n    //     );\n    //     dt = Math.abs(Math.round(dt));\n    //     this.healthDataTable.addRows(\n    //       [[i, sampleCmdInterval, dt, data.EyeTrackerSampleInterval]]\n    //     );\n    //   }\n    // } else { // !EYETRACKING SCENARIO\n    //   for (let i = 0; i < data.TSequenceActualClip[2].length; i++) {\n    //     let dt = (\n    //       data.TSequenceActualClip[2][i] - data.TSequenceDesiredClip[2][i]\n    //     );\n    //     dt = Math.abs(Math.round(dt));\n    //     this.healthDataTable.addRows([[i, null, dt, null]]);\n    //   }\n    // }\n    // if (Object.keys(data.TSequenceActualClip).length > 0) {\n    //   for (let i = 0; i < data.TSequenceDesiredClip[2].length; i++) {\n    //     let dt = (\n    //       data.TSequenceActualClip[2][i] - data.TSequenceDesiredClip[2][i]\n    //     );\n    //     dt = Math.abs(Math.round(dt));\n    //     this.healthDataTable.addRows([[i, null, dt, null]]);\n  \n    //   }\n    // }\n  }\n\n  private drawPerformancePlot(file: FileType) {\n    let numRows = this.perfDataTable.getNumberOfRows();\n    this.nTrials = numRows;\n    let perfFilterState: any = this.perfFilter.getState();\n\n    // updating perfFilter\n    if (file.dataChanged && !file.fileChanged) {\n      if (numRows <= 100) {\n        // expand window size automatically up to 100\n        perfFilterState.range.start = 0;\n        perfFilterState.range.end = numRows; \n      } else {\n        let dTrials = numRows - _.size(file.data?.FixationGridIndex);\n        console.log('dtrials', dTrials);\n        perfFilterState.range.start = numRows - 100;\n        perfFilterState.range.end = numRows;\n      }\n    } else if (file.fileChanged) {\n      let dSlider = 100;\n      perfFilterState.range.start = numRows - dSlider;\n      perfFilterState.range.end = numRows;\n      if (perfFilterState.range.start < 0) {\n        perfFilterState.range.start = 0;\n      }\n    }\n\n    this.perfPlot.setOptions(this.perfPlotOptions);\n    this.perfFilter.setState({\n      range: {\n        start: perfFilterState.range.start,\n        end: perfFilterState.range.end\n      }\n    });\n    this.perfDashboard.draw(this.perfDataTable);\n  }\n\n  private drawHealthPlot(file: FileType) {\n    let numRows = this.healthDataTable.getNumberOfRows();\n    console.log('[drawHealthPlot::numRows]:', numRows);\n    let healthFilterState: any = this.healthFilter.getState();\n    console.log('[drawHealthPlot::healthFilterState]:', healthFilterState);\n\n    if (file.dataChanged && !file.fileChanged) {\n      if (numRows <= 100) {\n        healthFilterState.range.start = 0;\n        healthFilterState.range.end = numRows;\n      } else {\n        healthFilterState.range.start = numRows - 100;\n        healthFilterState.range.end = numRows;\n      }\n    } else if (file.fileChanged) {\n      let dSlider = 100;\n      healthFilterState.range.start = numRows - dSlider;\n      healthFilterState.range.end = numRows;\n      if (healthFilterState.range.start < 0) {\n        healthFilterState.range.start = 0;\n      }\n    }\n\n    this.healthPlot.setOptions(this.healthPlotOptions);\n    this.healthFilter.setState({\n      range: {\n        start: healthFilterState.range.start,\n        end: healthFilterState.range.end\n      }\n    });\n    this.healthDashboard.draw(this.healthDataTable);\n    \n  }\n\n  private drawTrialPlot(file: FileType) {\n    let trialFilterState: any = this.trialFilter.getState();\n    let tmin = new Date(this.cumulDataTable.getColumnRange(0).min);\n    let tmax = new Date(this.cumulDataTable.getColumnRange(0).max);\n\n    if (file.dataChanged || file.fileChanged) {\n      trialFilterState.range.start = tmin;\n      trialFilterState.range.end = tmax;\n    }\n\n    this.trialFilter.setState({\n      range: {\n        start: trialFilterState.range.start,\n        end: trialFilterState.range.end\n      }\n    });\n    this.trialPlot.setOptions(this.trialPlotOptions);\n    this.trialDashboard.draw(this.cumulDataTable);\n  }\n\n  private drawObjPerfPlot() {\n    this.objPerfPlot.draw(this.objPerfDataTable, this.objPerfPlotOptions);\n  }\n\n  private drawRxnTimePlot() {\n    this.rxnPlot.draw(this.rxnTimeDataTable, this.rxnPlotOptions);\n  }\n\n  private drawChoicePlot() {\n    this.choicePlot.draw(this.choiceDataTable, this.choicePlotOptions);\n  }\n\n  private drawRewardPlot() {\n    this.rewardPlot.draw(this.rewardDataTable, this.rewardPlotOptions);\n  }\n\n  private drawRealtimePlot(data: LiveplotDataType) {\n    let idx = 0;\n    this.realtimePlotOptions = {\n      seriesType: 'scatter',\n      width: data.workspace[2] * data.CanvasRatio,\n      height: data.ViewportPixels[1] - data.offsettop,\n      legend: {\n        position: 'top'\n      },\n      hAxis: {\n        title: 'X position (px)',\n        viewWindow: {\n          min: 0,\n          max: data.workspace[2] * data.CanvasRatio\n        }\n      },\n      vAxis: {\n        title: 'Y position (px)',\n        viewWindow: {\n          min: 0,\n          max: data.ViewportPixels[1] - data.offsettop\n        }\n      }\n    };\n    this.realtimePlotOptions.hAxis = {\n      title: 'X position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.workspace[2] * data.CanvasRatio\n      }\n    };\n    this.realtimePlotOptions.vAxis = {\n      title: 'Y position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[1] - data.offsettop\n      }\n    };\n    let numCol = this.realtimeDataTable.getNumberOfColumns();\n    this.generateAndAddRowData(\n      this.realtimeDataTable,\n      numCol,\n      {0: 0, [numCol - 2]: 0}\n    );\n    let numRows = this.realtimeDataTable.getNumberOfRows();\n\n    this.realtimePlotConfig = {\n      chartType: 'ComboChart',\n      containerId: 'realtime-plot',\n      options: this.realtimePlotOptions\n    };\n    this.realtimePlot = (\n      new google.visualization.ChartWrapper(this.realtimePlotConfig)\n    );\n    this.realtimePlot.setDataTable(this.realtimeDataTable);\n    window.addEventListener('data_arrived', (evt: CustomEventInit) => {\n      if (idx % 2 == 0) {\n        this.realtimeDataTable.setValue(numRows - 1, 0, Math.floor(evt.detail.x));\n        this.realtimeDataTable.setValue(numRows - 1, numCol - 2, Math.floor(evt.detail.y));\n        this.realtimePlot.draw();\n      }\n    });\n  }\n\n  private drawStaticElements(cvs: HTMLCanvasElement, ctx: CanvasRenderingContext2D | null, data: LiveplotDataType, evt: CustomEventInit) {\n    if (ctx) {\n      ctx.fillStyle = 'gray';\n      ctx.fillRect(\n        0,\n        0,\n        data.workspace[2] * data.CanvasRatio,\n        data.ViewportPixels[1] - data.offsettop\n      );\n\n      for (let idx in evt.detail.boundingBoxes) {\n        let width = evt.detail.boundingBoxes[idx]['x_1'] - evt.detail.boundingBoxes[idx]['x_0'];\n        let height = evt.detail.boundingBoxes[idx]['y_1'] - evt.detail.boundingBoxes[idx]['y_0'];\n        ctx.beginPath();\n        ctx.rect(\n          _.floor(evt.detail.boundingBoxes[idx]['x_0']),\n          _.floor(cvs.height - evt.detail.boundingBoxes[idx]['y_0']),\n          width,\n          -height\n        );\n        ctx.stroke();\n      }\n\n\n    }\n    // if (ctx) {\n    //   ctx.fillStyle = 'gray';\n    //   ctx.fillRect(\n    //     0, \n    //     0, \n    //     data.workspace[2] * data.CanvasRatio,\n    //     data.ViewportPixels[1] - data.offsettop\n    //   );\n\n    //   // Fixation\n    //   if (data.FixationUsesSample < 1) {\n    //     ctx.strokeStyle = '#0000FF';\n    //     ctx.beginPath();\n    //     ctx.arc(\n    //       this.rtData.fixation.x,\n    //       cvs.height - this.rtData.fixation.y,\n    //       this.rtData.fixation.width / 2,\n    //       0,\n    //       Math.PI * 2,\n    //       true\n    //     );\n    //     ctx.stroke();\n    //   }\n    \n    //   // Sample\n    //   ctx.strokeStyle = '#000000'; // black\n    //   ctx.beginPath();\n    //   ctx.rect(\n    //     this.rtData.sample.x - this.rtData.sample.width / 2,\n    //     cvs.height - (this.rtData.sample.y + this.rtData.sample.height / 2),\n    //     this.rtData.sample.width,\n    //     this.rtData.sample.height\n    //   );\n    //   ctx.stroke();\n\n    //   // Test\n    //   for (let i = 0; i < _.size(this.rtData['test']); i++) {\n    //     console.log('test');\n    //     ctx.beginPath();\n    //     ctx.rect(\n    //       this.rtData['test'][i].x - this.rtData['test'][i].width / 2,\n    //       cvs.height - (this.rtData['test'][i].y + this.rtData['test'][i].height / 2),\n    //       this.rtData['test'][i].width,\n    //       this.rtData['test'][i].height\n    //     );\n    //     ctx.stroke();\n    //   }\n\n    //   // Choice\n    //   for (let i = 0; i < _.size(this.rtData['choice']); i++) {\n    //     ctx.beginPath();\n    //     ctx.rect(\n    //       this.rtData['choice'][i].x - this.rtData['choice'][i].width / 2,\n    //       cvs.height - (this.rtData['choice'][i].y + this.rtData['choice'][i].height / 2),\n    //       this.rtData['choice'][i].width,\n    //       this.rtData['choice'][i].height\n    //     );\n    //     ctx.stroke();\n    //   }\n\n    //   let fixWinSz = data.FixationWindowSizeInches;\n\n    //   if (_.isNumber(fixWinSz) && fixWinSz > 0) {\n    //     ctx.strokeStyle = '#FFFF00'; // yellow\n    //     ctx.strokeRect(\n    //       this.rtData.fixation.x - _.floor(fixWinSz / 2 * data.ViewportPPI),\n    //       cvs.height \n    //       - (this.rtData.fixation.y + _.floor(fixWinSz / 2 * data.ViewportPPI)),\n    //       _.floor(fixWinSz * data.ViewportPPI),\n    //       _.floor(fixWinSz * data.ViewportPPI)\n    //     );\n    //   }\n    // }\n  }\n\n\n  private drawRealtimePlot2(data: LiveplotDataType) {\n    let cvs = document.querySelector('#realtime-canvas') as HTMLCanvasElement;\n    cvs.width = data.workspace[2] * data.CanvasRatio;\n    cvs.height = data.ViewportPixels[1] - data.offsettop;\n    let ctx = cvs.getContext('2d') as CanvasRenderingContext2D;\n    window.addEventListener('data_arrived', (evt: CustomEventInit) => {\n\n      if (evt.detail.meta == 2) {\n        this.drawStaticElements(cvs, ctx, data, evt);\n      }\n\n      if (evt.detail.meta == 1) {\n        ctx.fillStyle = 'green';\n      } else if (evt.detail.meta == 0) {\n\n        ctx.fillStyle = 'red';\n      }\n\n      ctx?.beginPath();\n      let x = _.floor(evt.detail.x);\n      let y = _.floor(cvs.height - evt.detail.y);\n      ctx?.arc(x, y, 2, 0, Math.PI * 2, true);\n      ctx?.fill();\n    });\n\n  }\n\n  private drawScreenPlot(data: LiveplotDataType, screenActive: boolean) {\n\n    this.screenPlotOptions.series = [];\n    for (let i = 0; i < this.xyPosDataTable.getNumberOfColumns(); i++) {\n      if (this.xyPosDataTable.getColumnLabel(i) == 'Fixation') {\n        this.screenPlotOptions.series[i - 1] = { type: 'line', color: 'gray' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Sample') {\n        this.screenPlotOptions.series[i - 1] = (\n          { type: 'line', color: 'black' }\n        );\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Same') {\n        this.screenPlotOptions.series[i - 1] = (\n          { type: 'line', color: 'green' }\n        );\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Different') {\n        this.screenPlotOptions.series[i - 1] = (\n          { type: 'line', color: 'red' }\n        );\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Fix_Reward') {\n        this.screenPlotOptions.series[i - 1] = { color: 'blue' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Fix_Punish') {\n        this.screenPlotOptions.series[i - 1] = { color: 'red' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Target_Reward') {\n        this.screenPlotOptions.series[i - 1] = { color: 'green' };\n      } else if (this.xyPosDataTable.getColumnLabel(i) == 'Target_Punish') {\n        this.screenPlotOptions.series[i - 1] = { color: 'black' };\n      } else if (this.xyPosDataTable.getColumnLabel(i).includes('Test')) {\n        this.screenPlotOptions.series[i - 1] = (\n          { type: 'line', color: 'black' }\n        );\n      }\n    }\n\n    this.screenPlotOptions.height = data.ViewportPixels[1];\n    this.screenPlotOptions.width = data.ViewportPixels[0];\n    this.screenPlotOptions.hAxis = {\n      title: 'X position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[0]\n      }\n    };\n    this.screenPlotOptions.vAxis = {\n      title: 'Y position (px)',\n      viewWindow: {\n        min: 0,\n        max: data.ViewportPixels[1]\n      }\n    };\n    if (!this.realtimePlotActive) {\n      this.screenPlot.draw(this.xyPosDataTable, this.screenPlotOptions);\n    }\n  }\n\n  private formatDate(data: google.visualization.DataTable, colIdx: number): void {\n    let formatter = new google.visualization.DateFormat({\n      pattern: 'h aa'\n    });\n    formatter.format(data, colIdx);\n  }\n\n  private formatNumber(data: google.visualization.DataTable, colIdx: number) {\n    let formatter = new google.visualization.NumberFormat({\n      fractionDigits: 2\n    });\n    formatter.format(data, colIdx);\n  }\n\n  private formatColor(data: google.visualization.DataTable, colIdx: number) {\n    let formatter = new google.visualization.ColorFormat();\n    let dx = 1 / (colorMapJet.length - 1);\n    for (let i = 0; i < colorMapJet.length; i++) {\n      formatter.addRange(i * dx, (i + 1) * dx, 'gray', colorMapJet[i]);\n    }\n    formatter.format(data, colIdx);\n  }\n\n\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport JSONEditor from 'jsoneditor';\nimport _ from 'lodash';\n// import 'jsoneditor/dist/jsoneditor.css'\n// import './jsoneditor.css';\nimport { Utils } from './utils';\nimport { Charts } from './charts';\nimport { FileType, LiveplotDataType } from './types';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\nconst rtdb = firebase.database();\n\nconst DATA_PATH = 'mkturkfiles/datafiles/'\nconst DATA_REF = storageRef.child(DATA_PATH);\nconst PARAM_PATH = 'mkturkfiles/parameterfiles/subjects/';\nconst PARAM_REF = storageRef.child(PARAM_PATH);\nconst AGENTS_REF = rtdb.ref('agents/');\nconst utils = new Utils;\n\nexport class Liveplot {\n  public file: FileType;\n  public elemObjs: any;\n  public editor: JSONEditor;\n  public charts: Charts;\n  public streamActive: boolean;\n  public agentClientRef: firebase.database.Reference;\n\n  constructor(elemObj: any) {\n    this.elemObjs = elemObj;\n    this.file = {\n      path: DATA_PATH,\n      list: [],\n      name: '',\n      ver: null,\n      date: null,\n      dataChanged: false,\n      fileChanged: false,\n    };\n    this.charts = new Charts(elemObj);\n    this.streamActive = false;\n    this.requestRealtimeBtnAction();\n    this.onDisconnectAction();\n  }\n\n  public fileSelectionChangedListener(elem: HTMLSelectElement) {\n    elem.addEventListener('input', (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      if (this.streamActive) {\n        let agent = this.file.data?.Agent!;\n        rtdb.ref(`data/${agent}`).off();\n        this.agentClientRef.remove(err => {\n          if (err) {\n            console.error(`Error Removing agentClientRef: ${err}`);\n          }\n        });\n        this.streamActive = false;\n      }\n      this.file.name = this.file.list[parseInt(elem.value)].fullpath;\n      this.file.fileChanged = true;\n    });\n  }\n\n  public onDisconnectAction() {\n    window.addEventListener('unload', (evt: Event) => {\n      this.agentClientRef.onDisconnect().remove();\n    });\n  }\n\n  public requestRealtimeBtnAction() {\n    let realtimeBtn = this.elemObjs.realtimeBtn;\n    realtimeBtn.addEventListener('click', async (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      let agent = this.file.data?.Agent!;\n      if (this.streamActive) {\n        realtimeBtn.innerHTML = 'Request Realtime Stream';\n        rtdb.ref(`data/${agent}`).off();\n        this.agentClientRef.remove(err => {\n          if (err) {\n            console.error(`Error Removing agentClientRef: ${err}`);\n          }\n        });\n        rtdb.ref(`data/${agent}`).off();\n        this.streamActive = false;\n      } else {\n        realtimeBtn.innerHTML = 'Deactivate Realtime Stream';\n        let agentClientKey = rtdb.ref(`agents/${agent}`).push().key;\n        this.agentClientRef = rtdb.ref(`agents/${agent}/${agentClientKey}`);\n        if (_.isString(agentClientKey)) {\n          rtdb.ref(`agents/${agent}`).update({\n            [agentClientKey]: true\n          });\n        }\n        rtdb.ref(`data/${agent}`).on('value', snap => {\n          let event = (\n            new CustomEvent('data_arrived', { detail: snap.val() })\n          );\n          window.dispatchEvent(event);\n        });\n        this.streamActive = true;\n      }\n    });\n  }\n\n  public async populateFileList(elem: HTMLSelectElement) {\n    try {\n      let fileList = await utils.getFileList(this.file.path);\n\n      fileList.sort((a: any, b: any) => {\n        let nameA = a.name.toUpperCase();\n        let nameB = b.name.toUpperCase();\n\n        if (nameA > nameB) {\n          return -1;\n        }\n\n        if (nameA < nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n\n      this.file.list = fileList;\n\n      for (let i = 0; i < fileList.length; i++) {\n        let opt = document.createElement('option');\n        opt.value = i.toString();\n        opt.innerHTML = fileList[i].name;\n        elem.appendChild(opt);\n      }\n\n      this.file.name = this.file.list[0].fullpath;\n      this.file.fileChanged = true;\n      let rawStorageFile = await utils.getStorageFile(this.file.name);\n      // console.log('rawFile', rawStorageFile);\n      \n      this.processData(rawStorageFile);\n\n    } catch (error) {\n      console.error('ERROR #file-list:', error);\n    }\n\n\n  }\n\n  private flattenData(data: any) {\n\n    let tmp: any = {};\n\n    for (let outerKey in data) {\n      if (data.hasOwnProperty(outerKey)) {\n        for (let innerKey in data[outerKey]) {\n          if (data[outerKey].hasOwnProperty(innerKey)) {\n            tmp[innerKey] = data[outerKey][innerKey];\n          }\n        }\n      }\n    }\n\n    return tmp;\n  }\n\n  private async processData(data: any) {\n\n    this.file.data = this.flattenData(data);\n    this.loadDataToEditor(this.file.data);\n    // console.log(this.file.data);\n\n    let metadata = await utils.getStorageFileMetadata(this.file.name);\n    console.log('Success! Loaded File Size:', metadata.size / 1000, 'KB');\n    this.file.ver = metadata.generation;\n    this.file.dateSaved = new Date(metadata.updated);\n    console.log(this.file.dateSaved);\n\n    // this.file.data.CurrentDate = (\n    //   new Date(this.file.data.CurrentDate).valueOf()\n    // );\n\n    if (this.file.fileChanged) {\n      this.charts.initializeChartData(this.file, {streamActive: this.streamActive});\n      this.checkFileStatus();\n      this.file.fileChanged = false;\n      this.file.dataChanged = false;\n    } else if (this.file.dataChanged) {\n      this.charts.updatePlots(this.file, {streamActive: this.streamActive});\n      this.file.dataChanged = false;\n      this.checkFileStatus();\n    }\n  }\n\n  public setupEditor(elem: HTMLDivElement) {\n    this.editor = new JSONEditor(elem);\n  }\n\n  private loadDataToEditor(data: any) {\n    if (this.file.fileChanged) {\n      this.editor.set(data);\n    } else {\n      this.editor.update(data);\n    }\n  }\n\n  private async checkFileStatus() {\n    try {\n      let metadata = await utils.getStorageFileMetadata(this.file.name);\n\n      if (this.file.ver != metadata.generation) {\n        this.file.ver = metadata.generation;\n        this.file.dateSaved = new Date(metadata.updated);\n        console.log(this.file.dateSaved);\n        this.file.dataChanged = true;\n        console.log('File was updated ver=' + this.file.ver)\n      } else {\n        this.file.dataChanged = false;\n      }\n\n      if (this.file.fileChanged == true || this.file.dataChanged == true) {\n        let rawStorageFile = await utils.getStorageFile(this.file.name);\n        // console.log('rawFile', rawStorageFile);\n        this.processData(rawStorageFile);\n      } else {\n        setTimeout(() => {\n          this.checkFileStatus()\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('checkFileStatus Error:', error);\n    }\n    return false; // why needed\n  } \n\n}\n","import './styles.css'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA0fbv2VqE-AfF6V_nxSSXCEqaTlBlZnTI\",\n  authDomain: \"sandbox-ce2c5.firebaseapp.com\",\n  databaseURL: \"https://sandbox-ce2c5.firebaseio.com\",\n  projectId: \"sandbox-ce2c5\",\n  storageBucket: \"sandbox-ce2c5.appspot.com\",\n  messagingSenderId: \"1003719887944\",\n  clientId: \"1003719887944-rlc06cjecqrp9fgvmvo56vqop1otm9ht.apps.googleusercontent.com\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nimport { Liveplot } from './liveplot';\n\nlet fileListSelector = (\n  document.querySelector('#file-list') as HTMLSelectElement\n);\n\nlet editorDiv = (\n  document.querySelector('#editor') as HTMLDivElement\n);\n\nlet elemObj = {\n  perfDiv: document.querySelector('#performance-dashboard') as HTMLDivElement,\n  perfPlot: document.querySelector('#performance-plot') as HTMLDivElement,\n  perfFilter: document.querySelector('#performance-filter') as HTMLDivElement,\n  trialDiv: document.querySelector('#trial-dashboard') as HTMLDivElement,\n  trialPlot: document.querySelector('#trial-plot') as HTMLDivElement,\n  trialFilter: document.querySelector('#trial-filter') as HTMLDivElement,\n  healthDiv: document.querySelector('#health-dashboard') as HTMLDivElement,\n  healthPlot: document.querySelector('#health-plot') as HTMLDivElement,\n  healthFilter: document.querySelector('#health-filter') as HTMLDivElement,\n  screenPlot: document.querySelector('#screen-plot') as HTMLDivElement,\n  // realtimePlot: document.querySelector('#realtime-plot') as HTMLDivElement,\n  rxnPlot: document.querySelector('#reaction-plot') as HTMLDivElement,\n  choicePlot: document.querySelector('#choice-plot') as HTMLDivElement,\n  objPerfPlot: document.querySelector('#obj-perf-plot') as HTMLDivElement,\n  rewardPlot: document.querySelector('#reward-plot') as HTMLDivElement,\n  \n  perfVitals: document.querySelector('#performance-vitals') as HTMLSpanElement,\n  rfidVitals: document.querySelector('#rfid-vitals') as HTMLSpanElement,\n  batteryVitals: document.querySelector('#battery-vitals') as HTMLSpanElement,\n  trialVitals: document.querySelector('#trial-vitals') as HTMLSpanElement,\n  fixStdev: document.querySelector('#fixation-stdev') as HTMLSpanElement,\n  tarZeroStdev: document.querySelector('#target0-stdev') as HTMLSpanElement,\n  tarOneStdev: document.querySelector('#target1-stdev') as HTMLSpanElement,\n  sdTextDiv: document.querySelector('#touch-sd-text') as HTMLDivElement,\n  realtimeBtn: document.querySelector('#request-realtime') as HTMLButtonElement,\n};\n\nconst lp = new Liveplot(elemObj);\nlp.setupEditor(editorDiv);\nlp.fileSelectionChangedListener(fileListSelector);\nlp.populateFileList(fileListSelector);\n\n\n\n\n\n\n\n// fileListSelector.addEventListener('change', evt => {\n//   evt.preventDefault();\n//   evt.stopPropagation();\n//   console.log('New File!');\n//   file.name = file.fileList[parseInt(fileListSelector.value)].fullpath;\n//   file.fileChanged = true;\n//   console.log('file name:', file.name);\n//   console.log('file path', file.path);\n// });\n\n// let file: any = {\n//   path: DATA_PATH,\n//   list: [],\n//   fileList: [],\n//   name: '',\n//   data: null,\n//   ver: null,\n//   date: null,\n//   dateChanged: false,\n//   fileChanged: false\n// };\n\n// console.log('hello hector');\n\n\n// async function populateDropdownMenu() {\n//   try {\n//     let fileList = await utils.getFileList(file.path);\n    \n\n//     fileList.sort((a: any, b: any) => {\n//       let nameA = a.name.toUpperCase();\n//       let nameB = b.name.toUpperCase();\n\n//       if (nameA > nameB) {\n//         return -1;\n//       }\n\n//       if (nameA < nameB) {\n//         return 1;\n//       }\n\n//       return 0;\n//     });\n\n//     file.fileList = fileList;\n    \n\n//     for (let i = 0; i < fileList.length; i++) {\n//       let opt = document.createElement('option');\n//       opt.value = i.toString();\n//       opt.innerHTML = fileList[i].name;\n//       fileListSelector.appendChild(opt);\n//     }\n    \n//     file.name = file.fileList[0].fullpath;\n//     file.fileChanged = true;\n  \n//   } catch (error) {\n//     console.error('ERROR #file-list:', error);\n//   }\n// }\n\n// populateDropdownMenu();\n\n\n// async function loadAndRenderEditor(filePath: string) {\n//   let dataFile = utils.getStorageFile(filePath);\n// }\n\nlet provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\nfirebase.auth().getRedirectResult().then(function(result) {\n  if (result.user) {\n    // User just signed in. you can get the result.credential.\n\tconsole.log('Sign-In Redirect Result, USER ' + result.user.email + ' is signed in')\n  }\n  else if (firebase.auth().currentUser) {\n    // User already signed in.\n\tconsole.log('Sign-In Redirect Result, USER is signed in')\n  }\n  else {\n    // No user signed in, update your UI, show the redirect sign-in screen.\n\tfirebase.auth().signInWithRedirect(provider)\n  }\n});","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\n\nexport class Utils {\n  constructor() {}\n\n  public async getFileList(path: string, ext?: string) {\n    let fileList = await storageRef.child(path).listAll();\n    /* only keep files within the last 2 years*/\n    let year = new Date().getFullYear();\n    let files: any = [];\n\n    for (let item of fileList.prefixes) {\n      let subFileList = (\n        await this.getFileList(path + item.name + '/', ext)\n      );\n      files = [...files, ...subFileList];\n    }\n\n    for (let i = 0; i < fileList.items.length; i++) {\n      if (typeof(ext) == 'string') {\n        if (fileList.items[i].name.endsWith(ext)) { // if file extension is correct\n          files.push({\n            fullpath: fileList.items[i].fullPath,\n            name: fileList.items[i].name\n          });\n        }\n      } else if (parseInt(fileList.items[i].name.slice(0, 4)) >= year - 1) {\n        files.push({\n          fullpath: fileList.items[i].fullPath,\n          name: fileList.items[i].name\n        });\n      }\n    }\n\n    return files;\n  }\n\n  public async getStorageFile(path: string) {\n    let fileRef = storageRef.child(path);\n    // console.log('fileRef:', fileRef);\n    let file = await storageRef.child(path).getDownloadURL().then(async (url: string) => {\n      let response = await fetch(url);\n      return response.json();\n    }).catch(e => {\n      console.error('Error Getting URL:', e);\n    });\n    // console.log('file:', file);\n    return file;\n  }\n\n  public async getStorageFileMetadata(path: string) {\n    let fileRef = storageRef.child(path);\n    let metadata = await fileRef.getMetadata();\n    return metadata;\n  }\n\n  public smooth(data: any[], n: number) {\n    let smoothedData = [];\n    for (let i = 0; i < data.length; i++) {\n      if (i < n - 1) {\n        let tmp = data.slice(0, i + 1);\n        smoothedData[i] = tmp.reduce((a: any, b: any) => {\n          return a + b;\n        });\n        smoothedData[i] /= (i + 1);\n      } else {\n        let tmp = data.slice(i - n + 1, i + 1);\n        smoothedData[i] = tmp.reduce((a: number, b: number) => {\n          return a + b;\n        });\n        smoothedData[i] /= n;\n      }\n    }\n    return smoothedData;\n  }\n\n  public calcDistance(a: number, b: number) {\n    return Math.pow(Math.abs(a - b), 2);\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkliveplot2\"] = self[\"webpackChunkliveplot2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [483], () => (__webpack_require__(519)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [483], () => (__webpack_require__(593)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}